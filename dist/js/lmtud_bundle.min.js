/** 
    LMTUD v1.0.0 (c) Min Xu the ORNL Land Model Testbed (LMT) LDRD project, and US Department of Energy RUBISCO Science Focus Area 
    @license BSD-3-Clause 
 */
!function i(n, s, r) {
    function a(t, e) {
        if (!s[t]) {
            if (!n[t]) {
                var o = "function" == typeof require && require;
                if (!e && o) return o(t, !0);
                if (l) return l(t, !0);
                throw (e = new Error("Cannot find module '" + t + "'")).code = "MODULE_NOT_FOUND", 
                e;
            }
            o = s[t] = {
                exports: {}
            }, n[t][0].call(o.exports, function(e) {
                return a(n[t][1][e] || e);
            }, o, o.exports, i, n, s, r);
        }
        return s[t].exports;
    }
    for (var l = "function" == typeof require && require, e = 0; e < r.length; e++) a(r[e]);
    return a;
}({
    1: [ function(e, t, o) {
        // this is a js for download options callback from Tabulator
        o.downloadHTML4CMIP = function(e, t) {
            var o, i = table.getColumns(), n = 1;
            for (col of i) {
                var s, r;
                col.isVisible() && (s = col.getField(), r = grpsModelSrc[s] % bgColorGroupFirstRow.length, 
                1 == n ? o = "" : (r = s.includes("xMean") || s.includes("xmean") ? "color:skyblue;" : 0 == r || s.includes("CMIP5") ? "color:rgb(37,81,204);" : "color:rgb(204,35,35);", 
                o += ".tabulator-print-table th:nth-of-type(nod){set}".replace("nod", n.toString()).replace("set", r)), 
                n += 1);
            }
            i = document.getElementById("colorblind").checked ? "<td bgcolor='#b35806'></td><td bgcolor='#e08214'></td><td bgcolor='#fdb863'></td><td bgcolor='#fee0b6'></td>                  <td bgcolor='#f7f7f7'></td><td bgcolor='#d8daeb'></td><td bgcolor='#b2abd2'></td><td bgcolor='#8073ac'></td><td bgcolor='#542788'></td>" : "<td bgcolor='#b2182b'></td><td bgcolor='#d6604d'></td><td bgcolor='#f4a582'></td><td bgcolor='#fddbc7'></td>                  <td bgcolor='#f7f7f7'></td><td bgcolor='#d9f0d3'></td><td bgcolor='#a6dba0'></td><td bgcolor='#5aae61'></td><td bgcolor='#1b7837'></td>";
            i = "<center> <div class='legDiv'> Relative Scale <table class='table-header-rotated' id='scoresLegend'> <tbody> <tr>" + i + "</tr> </tbody> </table> Worse Value&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Better Value             <table class='table-header-rotated' id='missingLegend'>               <tbody> <tr> <td bgcolor='#808080'></td> </tr> </tbody>             </table>Missing Data or Error            </div> </center> ";
            e = "              <!DOCTYPE html>              \x3c!-- saved from url=(0037)https://lmt.ornl.gov/test_lmtud/dist/ --\x3e              <html lang='en' class=''><head><meta http-equiv='Content-Type' content='text/html; charset=UTF-8'>                 <link rel='stylesheet' href='./css/savehtml.css'/> <style>" + o + "</style></head><body>" + e.replace(/undefined/g, "").replace('<th colspan="1" rowspan="1"></th>', "<th>" + i + "</th>").replace("background-color: rgb(236, 255, 230);", "background-color: rgb(236, 255, 230);font-weight:bold").replace("background-color: rgb(230, 249, 255);", "background-color: rgb(230, 249, 255);font-weight:bold").replace("background-color: rgb(255, 236, 230);", "background-color: rgb(255, 236, 230);font-weight:bold").replace("background-color: rgb(237, 237, 237);", "background-color: rgb(237, 237, 237);font-weight:bold") + "</body></html>";
            return new Blob([ e ], {
                type: "text/html"
            });
        };
    }, {} ],
    2: [ function(e, t, o) {
        o.dictChoices = {}, o.dimSetEvent = {};
    }, {} ],
    3: [ function(e, r, a) {
        var f = e("tabulator-tables"), n = e("choices.js"), j = e("slideout"), c = e("./lmt_tool.js"), B = e("./tabOptions.js"), e = e("./globalVars.js"), g = B.tabOption;
        g.dataTreeStartExpanded = function(e, t) {
            var o = E.timesExpl;
            if (t < o) return !0;
        }, window.loadlocJson = function() {
            var e = document.getElementById("file").files[0];
            e ? e.type.includes("json") ? (console.log("UDEB: starting read the local CMEC json file"), 
            s && (s = !1, alert("Will reload page before loading a new file"), location.reload()), 
            Q(e).then(function(e) {
                try {
                    v = JSON.parse(e.content);
                } catch (e) {
                    alert("JSON parsing", e.message);
                }
                0;
                var t, o, e = {};
                [ t, o, e ] = I(v, dimSet = {}), q("0", "0"), E.normMethod = "0", 
                E.cmapMethod = "0";
                var i, n, s = !0, r = !0, a = !1, l = !0, c = ("row" == "row" ? (document.getElementById("cb-scarow").checked = !0, 
                document.getElementById("cb-scacol").checked = !1) : (document.getElementById("cb-scarow").checked = !1, 
                document.getElementById("cb-scacol").checked = !0), document.getElementById("cb-toptitle").checked = !!r, 
                document.getElementById("cb-bottomtitle").checked = !!a, document.getElementById("cb-tooltip").checked = !!s, 
                document.getElementById("cb-cellvalue").checked = !!l, E.normDir = "row", 
                E.setTooltip = !0, E.setTopTitle = !0, E.setBottomTitle = !1, E.setCellValue = !0, 
                v);
                for ([ i, n ] of Object.entries(c.DIMENSIONS.json_structure)) {
                    var u = parseInt(i) + 1, d = _["dim" + u.toString() + "Choices"];
                    "statistic" == n && c.DIMENSIONS.dimensions[n].hasOwnProperty("indices") ? d.setChoices(z(c.DIMENSIONS.dimensions[n].indices, c.DIMENSIONS.dimensions[n].indices), "value", "label", !1) : d.setChoices(z(Object.keys(c.DIMENSIONS.dimensions[n]), Object.keys(c.DIMENSIONS.dimensions[n])), "value", "label", !1), 
                    R[n] = "select-choice-mini-".concat(i.toString()), S[n] = "dim" + u.toString() + "Choices", 
                    W["select-choice-mini-".concat(i.toString())] = n;
                }
                _.xdimChoices.setChoices(z(c.DIMENSIONS.json_structure, c.DIMENSIONS.json_structure), "value", "label", !1), 
                _.ydimChoices.setChoices(z(c.DIMENSIONS.json_structure, c.DIMENSIONS.json_structure), "value", "label", !1);
                for (const p of [ "xdim", "ydim" ]) _[p + "Choices"].passedElement.element.addEventListener("addItem", function(t) {
                    if (!E.stopFire) {
                        "xdim" == p && (T = {});
                        let e = _["xdim" == p ? "ydimChoices" : "xdimChoices"].getValue(!0);
                        if (t.detail.value == e) console.log(p, e, t.detail.value), 
                        alert(" x and y must be different ", p, e, t.detail.value); else if (M["xdim" == p ? "x_dim" : "y_dim"] = t.detail.value, 
                        M["xdim" == p ? "y_dim" : "x_dim"] = e, M.fxdim = {}, console.log("selevent", S), 
                        console.log(M), null != M.x_dim && null != M.y_dim) {
                            for (var [ o, i ] of Object.entries(c.DIMENSIONS.json_structure)) console.log("xxx", S[i], i), 
                            _[S[i]].containerInner.element.parentElement.style.display = "block", 
                            _[S[i]].containerInner.element.style.display = "block", 
                            e = _[S[i]].getValue(!0), _[S[i]].removeActiveItemsByValue(e), 
                            _[S[i]].clearChoices(), "statistic" == i && c.DIMENSIONS.dimensions[i].hasOwnProperty("indices") ? _[S[i]].setChoices(z(c.DIMENSIONS.dimensions[i].indices, c.DIMENSIONS.dimensions[i].indices), "value", "label", !1) : _[S[i]].setChoices(z(Object.keys(c.DIMENSIONS.dimensions[i]), Object.keys(c.DIMENSIONS.dimensions[i])), "value", "label", !1);
                            _[S[M.x_dim]].containerInner.element.parentElement.style.display = "none", 
                            _[S[M.y_dim]].containerInner.element.parentElement.style.display = "none", 
                            _[S[M.x_dim]].containerInner.element.style.display = "none", 
                            _[S[M.y_dim]].containerInner.element.style.display = "none";
                        }
                    }
                }, !1);
                for (let [ e, i ] of Object.entries(c.DIMENSIONS.json_structure)) {
                    var h = parseInt(e) + 1;
                    _["dim" + h.toString() + "Choices"].passedElement.element.addEventListener("addItem", function(e) {
                        var t, o;
                        E.stopFire || (console.log("fire addItem event for other dimensions"), 
                        console.log(c.DIMENSIONS.json_structure), M.fxdim[i] = e.detail.value, 
                        console.log(i, M.fxdim[i]), console.log("xxx", c.DIMENSIONS.json_structure.filter(e => e != M.x_dim && e != M.y_dim && e != i)), 
                        c.DIMENSIONS.json_structure.filter(e => e != M.x_dim && e != M.y_dim && e != i).every(e => null != M.fxdim[e]) && (console.log("now we can generate the tab json and prepare redraw table"), 
                        e = {}, [ t, o, e ] = I(v, dimSet = M), console.log("start prepareSel", t, o, e), 
                        X(v, t, o, e), J(t, o, v), e = new CustomEvent("jsonReady", {
                            bubbles: !0,
                            cancelable: !0
                        }), document.dispatchEvent(e), console.log("xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"), 
                        E.stopFireNorm = !0, C = [], q("0", "0"), E.stopFireNorm = !1));
                    }, !1);
                }
                for (const m of [ "norm", "cmap", "exam", "logo" ]) _[m + "Choices"].passedElement.element.addEventListener("addItem", function(t) {
                    var e;
                    if ("exam" == m && (console.log("fire event for exam"), e = t.detail.value, 
                    Y(e = jsonFileURL + e)), "logo" == m && (w = t.detail.value, 
                    o = y.getData(), (y = new f("#dashboard-table", g)).clearData(), 
                    y.setData(o), y.redraw(!0)), "norm" == m) if (console.log("UDEB: fire event for normalization", E.stopFireNorm, !E.stopFireNorm), 
                    E.normMethod = t.detail.value, E.stopFireNorm) E.stopFireNorm = !1; else {
                        console.log("start normalzation"), 0 < C.length ? o = F(C) : (o = y.getData("all"), 
                        C = F(o));
                        var o, i = Object.assign([], o);
                        if ("row" == E.normDir) {
                            let e = 0;
                            for (data of o) i[e] = H(t.detail.value, E.normDir, data), 
                            e += 1;
                        } else if ("column" == E.normDir) {
                            var n, s = {};
                            for (col_name of Object.keys(o[0])) "row_name" != col_name && "_children" != col_name && (s = function t(e, o, i) {
                                var n = {};
                                for (data of e) {
                                    var s;
                                    if (s = "" != i ? i + "::" + data.row_name : data.row_name, 
                                    n[s] = data[o], Object.keys(data).includes("_children")) {
                                        let e = t(data._children, o, s);
                                        n = Object.assign({}, n, e);
                                    }
                                }
                                return n;
                            }(o, col_name, ""), n = H(t.detail.value, E.normDir, s), 
                            function e(t, o, i, n) {
                                try {
                                    for (data of t) {
                                        var s;
                                        s = "" != n ? n + "::" + data.row_name : data.row_name, 
                                        data[o] = i[s], Object.keys(data).includes("_children") && e(data._children, o, i, s);
                                    }
                                } catch (e) {
                                    console.log("UDEB:", n, t);
                                }
                            }(i, col_name, n, ""));
                        } else alert("please select the direction of the normalization");
                        "row" != E.normDir && "column" != E.normDir || (y.setData(i), 
                        y.redraw(!0), O());
                    }
                    "cmap" == m && (console.log("fire event for cmap"), E.cmapMethod = t.detail.value, 
                    K(), g.data = y.getData(), y = new f("#dashboard-table", g));
                }, !1);
                _.hideChoices.passedElement.element.addEventListener("addItem", function(e) {
                    console.log("fire hide events"), y.hideColumn(e.detail.value);
                }, !1), _.hideChoices.passedElement.element.addEventListener("removeItem", function(e) {
                    console.log("fire show events"), y.showColumn(e.detail.value);
                }, !1), document.getElementById("cb-scarow").addEventListener("change", () => {
                    console.log("fire event for checking row", document.getElementById("cb-scarow").checked), 
                    document.getElementById("cb-scarow").checked ? (document.getElementById("cb-scacol").checked = !1, 
                    E.normDir = "row") : (E.normDir = "column", document.getElementById("cb-scacol").checked = !0, 
                    _.normChoices.setChoiceByValue("0"));
                }), document.getElementById("cb-scacol").addEventListener("change", () => {
                    console.log("fire event for checking column"), document.getElementById("cb-scacol").checked ? (document.getElementById("cb-scarow").checked = !1, 
                    E.normDir = "column") : (E.normDir = "row", document.getElementById("cb-scarow").checked = !0, 
                    _.normChoices.setChoiceByValue("0"));
                }), document.getElementById("cb-tooltip").addEventListener("change", () => {
                    console.log("fire event for tooltip"), document.getElementById("cb-tooltip").checked ? (E.setTooltip = !0, 
                    g.tooltips = function(e) {
                        return "row_name" != e.getField() && Math.round(100 * (e.getValue() + Number.EPSILON)) / 100;
                    }) : (E.setTooltip = !1, g.tooltips = !1, console.log("tooltip is false")), 
                    y = new f("#dashboard-table", g);
                }), document.getElementById("cb-toptitle").addEventListener("change", () => {
                    console.log("fire event for toptitle"), document.getElementById("cb-toptitle").checked ? (E.setTopTitle = !0, 
                    g.headerVisible = !0) : (E.setTopTitle = !1, g.headerVisible = !1);
                    var e = y.getData();
                    y.clearData(), y.setData(e), y = new f("#dashboard-table", g);
                }), document.getElementById("cb-bottomtitle").addEventListener("change", () => {
                    if (console.log("fire event for bottomtitle"), document.getElementById("cb-bottomtitle").checked) {
                        E.setBottomTitle = !0;
                        for (var e of g.columns) "row_name" != e.field && (e.bottomCalc = Z);
                    } else {
                        E.setBottomTitle = !1;
                        for (var t of g.columns) "row_name" != t.field && delete t.bottomCalc;
                    }
                    var o = y.getData();
                    y.clearData(), y.setData(o), y = new f("#dashboard-table", g);
                }), document.getElementById("cb-cellvalue").addEventListener("change", () => {
                    if (console.log("fire event for cellvalue"), document.getElementById("cb-cellvalue").checked) {
                        E.setCellValue = !0;
                        for (x of g.columns) "row_name" != x.field && (x.formatterParams = {
                            showCellValue: !0
                        });
                    } else {
                        E.setCellValue = !1;
                        for (x of g.columns) "row_name" != x.field && (x.formatterParams = {
                            showCellValue: !1
                        });
                    }
                    var e = y.getData();
                    y.clearData(), y.setData(e), y = new f("#dashboard-table", g);
                }), console.log("UDEB: start prepareSel"), X(v, t, o, e), J(t, o, v);
                r = new CustomEvent("jsonReady", {
                    bubbles: !0,
                    cancelable: !0
                });
                document.dispatchEvent(r);
            }).catch(e => alert(e))) : alert("Please input json file like *.json") : (alert("Please input file"), 
            y.setColumns([]), y.clearData());
        }, window.toggleScreenHeight = toggleScreenHeight, window.tableColor = function() {
            l = document.getElementById("colorblind").checked ? i : V;
            h.length = 0;
            var e = y.getData();
            y.clearData(), y.setData(e), y.redraw(!0), O();
        }, window.expandCollapse = function(e) {
            var t = function() {
                var e = y.getRows();
                return function e(t, o) {
                    var i = o + 1;
                    var n = i;
                    var s;
                    for (row of t) n = 0 < row.getTreeChildren().length ? (s = e(row.getTreeChildren(), i), 
                    Math.max(n, s)) : Math.max(n, i);
                    return n;
                }(e, 0);
            }() - 1;
            console.log("UDEB:", "maxlevs", t, E.numClicks, e, E.timesExpl), "expand" == e && (E.numClicks < t ? E.timesExpl = E.timesExpl + 1 : E.timesExpl = E.timesExpl - 1, 
            e = y.getData(), y.clearData(), y.setData(e), y.redraw(!0), console.log("UDEB:", "tabredraw"), 
            0 == E.timesExpl ? E.numClicks = 0 : E.numClicks = E.numClicks + 1);
        }, window.savetoHtml = function() {
            y.download("html", "test.html", {
                style: !0
            });
        }, window.lmtUDLoaded = 1, DEBUG = !0, old_console_log = console.log, console.log = function() {
            DEBUG && old_console_log.apply(this, arguments);
        }, 
        // Control the tabulator for LMT Unified Dashboard
        jsonFileURL = "https://raw.githubusercontent.com/minxu74/benchmark_results/master/";
        const p = [ "#ECFFE6", "#E6F9FF", "#FFECE6", "#EDEDED", "#FFF2E5" ], m = [ "yellow", "#00FF00", "white" ], b = [ "black", "black", "black" ], t = "p-1 h-6 w-6 inline bg-white border border-gray-200 cursor-pointer rounded-lg disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700", o = "<label for='favcolor'> Background Color: </label>", i = [ "#b35806", "#e08214", "#fdb863", "#fee0b6", "#f7f7f7", "#d8daeb", "#b2abd2", "#8073ac", "#542788" ], V = [ "#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#f7f7f7", "#d9f0d3", "#a6dba0", "#5aae61", "#1b7837" ];
        var v, u, y, d, w = "rubisco_logo.png", l = i, E = {
            normMethod: "-1",
            cmapMethod: "-1",
            normDir: "-1",
            setTootip: !1,
            setTopTitle: !1,
            setBottomTitle: !1,
            setCellValue: !1,
            timesExpl: 1,
            numClicks: 1,
            stopFire: !1,
            stopFireNorm: !1
        }, C = [], _ = (jsonFileURL.includes("http") && (jsonFileURL = "https://cors-anywhere.herokuapp.com/" + jsonFileURL), 
        {}), M = {
            x_dim: null,
            y_dim: null,
            fxdim: {}
        }, R = {}, S = {}, W = {}, h = [], L = {}, G = [], s = !1, T = {}, D = {};
        function U() {
            document.querySelector("#file").value = "", void 0 !== _.hideChoices && _.hideChoices.destroy(), 
            _.hideChoices = new n(document.querySelector(".js-choice-hide"), {
                searchEnabled: !1,
                shouldSort: !1,
                removeItemButton: !0,
                allowHTML: !1,
                placeholderValue: "Select models to show"
            });
            for (const o of [ "xdim", "ydim" ]) _[o + "Choices"] = new n(document.querySelector(".js-choice-" + o), {
                searchEnabled: !1,
                shouldSort: !1,
                allowHTML: !1,
                removeItemButton: !1
            });
            for (let e = 1; e < 10; e++) {
                var t = "dim".concat(e.toString());
                _[t + "Choices"] = new n(document.querySelector(".js-choice-".concat(e.toString())), {
                    searchEnabled: !1,
                    shouldSort: !1,
                    allowHTML: !1,
                    removeItemButton: !1
                }), _[t + "Choices"].containerInner.element.style.display = "none";
            }
            for (const i of [ "norm", "cmap", "exam", "logo" ]) _[i + "Choices"] = new n(document.querySelector(".js-choice-" + i), {
                searchEnabled: !1,
                shouldSort: !1,
                allowHTML: !1,
                removeItemButton: !1
            });
            document.getElementById("cb-scarow").checked = !1, document.getElementById("cb-scacol").checked = !1, 
            document.getElementById("cb-toptitle").checked = !1, document.getElementById("cb-bottomtitle").checked = !1, 
            document.getElementById("cb-tooltip").checked = !1, document.getElementById("cb-cellvalue").checked = !1, 
            // initialize the tabulator
            y = new f("#dashboard-table", option = {});
            var e = new j({
                panel: document.getElementById("panel"),
                menu: document.getElementById("menu")
            });
            document.querySelector(".js-slideout-toggle").addEventListener("click", function() {
                e.toggle();
            }), console.log("xxx in document ready"), K();
            console.log("UDEB: UD config file ", "./_lmtUDConfig.json");
        }
        function K() {
            switch (_.cmapChoices.getValue(!0)) {
              case "0":
                A = ee;
                break;

              case "1":
                A = te;
                break;

              case "2":
                A = oe;
            }
            for (x of g.columns) "row_name" != x.field && (x.formatter = A, x.formatterParams.scaopt = _.normChoices.getValue(!0));
        }
        //    var elmnt = document.getElementsByClassName('tabulator-header');
        function Y(i, l = {}) {
            "" !== i && (document.getElementById("file").value = "", y.clearData(), 
            resetSwitch(), resetSelect(), $.getJSON(i, {
                format: "json"
            }).done(function(e) {
                switch (e.SCHEMA.name) {
                  case "CMEC":
                    v = e, console.log("before prepareTab");
                    var t, [ o, i = {} ] = [ v, l ], n = {};
                    [ i, t, n ] = I(o, i), Object.keys(u[0]).includes("_children") ? (g.dataTreeCollapseElement = "", 
                    g.dataTreeExpandElement = "", 1) : (g.dataTreeCollapseElement = "<span></span>", 
                    g.dataTreeExpandElement = "<span></span>", 0), c.add_options(o.DIMENSIONS.json_structure, "select-choice-mini-x"), 
                    c.add_options(o.DIMENSIONS.json_structure, "select-choice-mini-y"), 
                    d = "row_name", $(".select-choice-x").val(i), $(".select-choice-y").val(t);
                    //$('#'.concat(selectIDbyDims['region'])).select2({ placeholder: 'Select region',});
                    for (fxdim of Object.keys(n)) console.log("UDEB:", fxdim, R[fxdim], n[fxdim]), 
                    $("#".concat(R[fxdim])).select2({
                        placeholder: "Select ".concat(fxdim)
                    }), $("#".concat(R[fxdim])).val(n[fxdim]).trigger("change");
                    c.add_options(Object.keys(u[0]).filter(e => "row_name" !== e && "_children" !== e && "metric" !== e), "hlist"), 
                    g.data = u, bgcol = "#0063B2FF", ftwgt = 500, ftsty = "normal", 
                    txdec = "", txcol = "white", o = {
                        bgcol: bgcol,
                        ftsty: ftsty,
                        ftwgt: ftwgt,
                        txdec: txdec,
                        color: txcol
                    }, h.length = 0, g.columns = P(u, addBottomTitle = !1, N, o, i, t, d), 
                    1 == D.udcCellValue && ($("#cellvalue").prop("checked", !0), 
                    toggleCellValue(!1));
                    break;

                  case "TABJSON":
                    0;
                    u = filterScoreboard(e.RESULTS, "Overall Score global"), c.add_options([ "model" ], "select-choice-mini-x"), 
                    c.add_options([ "metric" ], "select-choice-mini-y");
                    var s = [], r = [];
                    for (row of e.RESULTS) s.push(row.scoreboard.split(" ")[row.scoreboard.split(" ").length - 1]), 
                    r.push(row.scoreboard.split(" ").slice(0, -1).join(" "));
                    s = [ ...new Set(s) ], r = [ ...new Set(r) ], c.add_options(s, "select-choice-mini-0"), 
                    c.add_options(r, "select-choice-mini-3"), R.region = "select-choice-mini-0", 
                    R.statistic = "select-choice-mini-3", d = "metric", $(".select-choice-x").val("model"), 
                    $(".select-choice-y").val("metric"), $("#".concat(R.region)).select2({
                        placeholder: "Select region"
                    }), $("#".concat(R.region)).val("global").trigger("change"), 
                    $("#".concat(R.statistic)).select2({
                        placeholder: "Select region"
                    }), $("#".concat(R.statistic)).val("Overall Score").trigger("change"), 
                    c.add_options(Object.keys(u[0]).filter(e => "row_name" !== e && "_children" !== e && "metric" !== e), "hlist"), 
                    g.data = u, bgcol = "#0063B2FF", ftwgt = 500, ftsty = "normal", 
                    txdec = "", txcol = "black";
                    o = {
                        bgcol: bgcol,
                        ftsty: ftsty,
                        ftwgt: ftwgt,
                        txdec: txdec,
                        color: txcol
                    };
                    h.length = 0, g.columns = P(u, addBottomTitle = !1, N, o, "model", "metric", d);
                }
                v.hasOwnProperty("SETTINGS") && v.SETTINGS.hasOwnProperty("baseUrl") && v.SETTINGS.baseUrl;
                var a = new CustomEvent("jsonReady", {
                    bubbles: !0,
                    cancelable: !0
                });
                document.dispatchEvent(a);
            }).fail(function(e, t, o) {
                alert("Request " + i + "\nFailed: " + (t + ", " + o));
            }));
        }
        function q(e, t) {
            _.normChoices.setChoiceByValue(e), _.cmapChoices.setChoiceByValue(t);
        }
        function X(e, t, o, i) {
            console.log("sel", S), _.hideChoices.clearStore(), _.hideChoices.setChoices(z(Object.keys(e.DIMENSIONS.dimensions[t]), Object.keys(e.DIMENSIONS.dimensions[t])), "value", "label", !1), 
            _.xdimChoices.setChoiceByValue(t), _.ydimChoices.setChoiceByValue(o);
            for (var n of e.DIMENSIONS.json_structure.filter(e => e !== t && e !== o)) console.log("UDEB:", n, S[n], i[n]), 
            _[S[n]].containerInner.element.style.display = "block", _[S[n]].setChoiceByValue(i[n]);
        }
        function J(e, t, o) {
            Object.keys(u[0]).includes("_children") ? (g.dataTreeCollapseElement = "", 
            g.dataTreeExpandElement = "") : (g.dataTreeCollapseElement = "<span></span>", 
            g.dataTreeExpandElement = "<span></span>"), console.log(g), console.log("starting read the local CMEC json file 3"), 
            d = "row_name", g.data = u, bgcol = "#0063B2FF", ftwgt = 500, ftsty = "normal", 
            txdec = "", txcol = "black";
            var i = {
                bgcol: bgcol,
                ftsty: ftsty,
                ftwgt: ftwgt,
                txdec: txdec,
                color: txcol
            };
            h.length = 0, console.log("starting read the local CMEC json file 4", u), 
            g.columns = P(u, addBottomTitle = E.setBottomTitle, N, i, e, t, d), 
            console.log("starting read the local CMEC json file 5", y), o.hasOwnProperty("SETTINGS") && o.SETTINGS.hasOwnProperty("baseUrl") && o.SETTINGS.baseUrl;
        }
        // initialize dimensions and convert CMEC json to tabulator json
        function I(e, t) {
            if (console.log("UDEB: in initDim"), e.DIMENSIONS.json_structure.includes("model")) {
                var o = [];
                for (x of Object.keys(e.DIMENSIONS.dimensions.model)) o.push(e.DIMENSIONS.dimensions.model[x].Source);
                o = [ ...new Set(o) ];
                for (x of Object.keys(e.DIMENSIONS.dimensions.model)) L[x] = o.indexOf(e.DIMENSIONS.dimensions.model[x].Source);
            }
            if (e.DIMENSIONS.json_structure.includes("metric")) {
                o = [];
                for (x of Object.keys(e.DIMENSIONS.dimensions.metric)) x.includes("::") || x.includes("!!") || o.push(x);
                G = [ ...new Set(o) ];
            }
            let i = e.DIMENSIONS.json_structure[0], n = e.DIMENSIONS.json_structure[1], s = {};
            if (t.x_dim && e.DIMENSIONS.json_structure.includes(t.x_dim) && t.y_dim && e.DIMENSIONS.json_structure.includes(t.y_dim)) i = t.x_dim, 
            n = t.y_dim, s = t.fxdim; else for (fxdim of e.DIMENSIONS.json_structure.slice(2, e.DIMENSIONS.json_structure.length)) "statistic" == fxdim && e.DIMENSIONS.dimensions.statistic.hasOwnProperty("indices") ? s[fxdim] = e.DIMENSIONS.dimensions.statistic.indices[0] : s[fxdim] = Object.keys(e.DIMENSIONS.dimensions[fxdim])[0];
            return console.log("fxdim", s, i, n, t), u = c.cmec2tab_json(e, i, n, s, 1), 
            console.log("UDEB: in initDim return"), [ i, n, s ];
        }
        function Q(i) {
            return new Promise(function(t, o) {
                var e = new FileReader();
                e.addEventListener("load", function(e) {
                    e = e.target.result;
                    t({
                        filename: i.name,
                        content: e
                    });
                }), e.addEventListener("error", function(e) {
                    o(e);
                }), e.readAsText(i);
            });
        }
        _ = e.dictChoices, M = e.dimSetEvent, "loading" !== document.readyState ? U() : document.addEventListener("DOMContentLoaded", function() {
            U();
        }), document.addEventListener("jsonReady", function() {
            s = !0, document.getElementById("mytab").style.width = (400 + 30 * (g.columns.length - 1)).toString() + "px";
            try {
                y = new f("#dashboard-table", g), O();
            } catch (e) {
                alert("Error when rending the table:", e.message);
            }
            Object.keys(D).includes("udcDimSets") && Object.keys(D.udcDimSets).includes("x_dim") && Object.keys(D.udcDimSets).includes("y_dim") ? (D.udcDimSets.x_dim, 
            D.udcDimSets.y_dim) : (v.DIMENSIONS.json_structure[0], v.DIMENSIONS.json_structure[1]), 
            //      //$('#select-choice-mini-map').trigger('change.select2');
            D.hasOwnProperty("udcBaseUrl") && D.udcBaseUrl;
        });
        var O = function() {
            l.length;
            for (var e = document.getElementById("scoresLegend"), t = row = 0; t < l.length; t++) e.rows[row].cells[t].style.backgroundColor = l[t];
        }, Z = function(e, t, o) {
            return o;
        }, A = ee;
        function ee(e, t, o) {
            var i, n = "#808080", s = l.length;
            if (-900 < (normVal = Array.isArray(e.getValue()) ? (origVal = e.getValue()[0], 
            e.getValue()[1]) : (origVal = e.getValue(), e.getValue())) && (i = .25 <= Math.abs(normVal) ? Math.round(2 * normVal + 4) : Math.round(4 * normVal + 4), 
            i = Math.min(Math.max(i, 0), s - 1), n = l[i]), e.getElement().style.backgroundColor = n, 
            t.showCellValue && -900 < origVal) return e.getElement().style.color = "black", 
            normVal.toFixed(2);
        }
        function te(e, t, o) {
            let i, n;
            i = -2.5, n = 2.5, "0" == t.scaopt ? console.log("will be implemented later") : "1" == t.scaopt ? (i = -2.5, 
            n = 2.5) : "2" == t.scaopt ? (i = -1, n = 1) : "3" == t.scaopt && (i = 0, 
            n = 1), normVal = Array.isArray(e.getValue()) ? (origVal = e.getValue()[0], 
            e.getValue()[1]) : (origVal = e.getValue(), e.getValue());
            var s, r = "#808080", a = l.length;
            if (-900 < normVal && (s = Math.round((normVal - i) * a / (n - i)), 
            s = Math.min(Math.max(s, 0), a - 1), r = l[s]), e.getElement().style.backgroundColor = r, 
            t.showCellValue && -900 < origVal) return e.getElement().style.color = "black", 
            normVal.toFixed(2);
        }
        function oe(e, t, o) {
            let i, n;
            i = -2.5, n = 2.5, "0" == t.scaopt ? console.log("will be implemented later") : "1" == t.scaopt ? (i = -2.5, 
            n = 2.5) : "2" == t.scaopt ? (i = -1, n = 1) : "3" == t.scaopt && (i = 0, 
            n = 1), normVal = Array.isArray(e.getValue()) ? (origVal = e.getValue()[0], 
            e.getValue()[1]) : (origVal = e.getValue(), e.getValue());
            var s, r = "#808080", a = l.length;
            if (-900 < normVal && (s = Math.round((n - normVal) * a / (n - i)), 
            s = Math.min(Math.max(s, 0), a - 1), r = l[s]), e.getElement().style.backgroundColor = r, 
            t.showCellValue && -900 < origVal) return e.getElement().style.color = "black", 
            normVal.toFixed(2);
        }
        var ie = function(t, o, e) {
            return e(function() {
                var e = t.getValue().replace(/\s+/g, "");
                T.hasOwnProperty(e) ? (console.log("UDEB: preserve the color setting"), 
                t.getElement().parentElement.parentElement.parentElement.style.backgroundColor = T[e]) : t.getElement().parentElement.parentElement.parentElement.style.backgroundColor = o.bgcol, 
                t.getElement().parentElement.parentElement.parentElement.style.fontStyle = o.ftsty, 
                t.getElement().parentElement.parentElement.parentElement.style.fontWeight = o.ftwgt, 
                t.getElement().parentElement.parentElement.parentElement.style.textDecoration = o.txdec, 
                t.getElement().parentElement.parentElement.parentElement.style.color = o.color;
            }), t.getValue();
        }, P = function(e, t, o, i, n, s, r) {
            console.log("start setTabColumns");
            var a = [], l = {
                title: "col_name",
                field: "col-field",
                bottomCalc: Z,
                headerContextMenu: ne,
                formatter: A,
                formatterParams: {},
                titleFormatter: ie,
                titleFormatterParams: i,
                width: 30,
                headerVertical: "flip",
                resizable: !1,
                headerSort: !0
            }, i = {
                title: "row_name",
                field: "row_field",
                frozen: !0,
                titleFormatter: o,
                minWidth: 380,
                formatter: re,
                formatterParams: {
                    xDim: n,
                    yDim: s
                },
                headerSort: !0,
                headerContextMenu: se
            }, c = (i.title = s.concat("/", n), i.title = "", i.field = r, a.push(i), 
            console.log("deb in before the loop"), {});
            for (x of Object.keys(e[0])) if ("row_name" != x && "_children" != x && "metric" != x) {
                if ((c = Object.assign({}, l)).title = x, c.field = x, c.bottomCalcParams = x, 
                "model" == n) {
                    var u = L[x] % m.length;
                    bgcol = c.title.includes("Mean") || c.title.includes("mean") ? "white" : m[u], 
                    ftwgt = 100, ftsty = "normal", txdec = "", txcol = b[u];
                } else if ("metric" == n) for (var [ d, h ] of G.entries()) x.includes(h) && (u = d % p.length, 
                bgcol = p[u]); else bgcol = "#0063B2FF", ftwgt = 100, ftsty = "normal", 
                txdec = "", txcol = "white";
                c.titleFormatterParams = {
                    bgcol: bgcol,
                    ftsty: ftsty,
                    ftwgt: ftwgt,
                    txdec: txdec,
                    color: txcol
                }, t || delete c.bottomCalc, E.setCellValue ? c.formatterParams = {
                    showCellValue: !0
                } : c.formatterParams = {
                    showCellValue: !1
                }, a.push(c);
            }
            return console.log("deb in after the loop", a), a;
        }, N = function(e, t) {
            if ("None" != D.logofile) return "<img class='infoImage' src='image/".concat(w, "'>");
        }, ne = [ {
            label: "<i class='fa fa-eye-slash'></i> Hide Column",
            action: function(e, t) {
                _.hideChoices.setChoiceByValue(t.getField());
            }
        }, {
            label: function(e) {
                e = e.getField().replace(/\s+/g, "");
                return T.hasOwnProperty(e) ? o + "<input type='color' class='" + t + "' id='favcolor' name='favcolor' value='" + T[e] + "'/>" : o + "<input type='color' class='" + t + "' id='favcolor' name='favcolor'>";
            },
            action: function(e, t) {
                let o = t.getField().replace(/\s+/g, "");
                document.getElementById("favcolor");
                document.getElementById("favcolor").addEventListener("input", function(e) {
                    t.getElement().style.backgroundColor = this.value, T[o] = this.value;
                });
            }
        } ], se = [ {
            label: "Toggle Tree Icon",
            action: function(e, t) {
                var o = document.getElementsByClassName("tabulator-data-tree-control").length;
                for (let e = 0; e < o; e++) "none" == document.getElementsByClassName("tabulator-data-tree-control")[e].style.display ? document.getElementsByClassName("tabulator-data-tree-control")[e].style.display = "inline-flex" : document.getElementsByClassName("tabulator-data-tree-control")[e].style.display = "none";
            }
        }, {
            label: "Hide/Show Logo",
            action: function(e, t) {
                "none" != document.getElementsByClassName("infoImage")[0].style.display ? document.getElementsByClassName("infoImage")[0].style.display = "none" : document.getElementsByClassName("infoImage")[0].style.display = "inline";
            }
        } ];
        function re(o, t, e) {
            var i = o.getValue();
            return e(function() {
                var e;
                o.getRow().getTreeParent() || (fgFontColor = "metric" == t.yDim ? "#0808ff" : (t.yDim, 
                "black"), "metric" == t.yDim ? (e = o.getRow().getTreeChildren(), 
                h.includes(i) || h.push(i), e.forEach(function(e) {
                    var t = h.indexOf(i) % p.length;
                    ae(e, o, 0, p[t], fgFontColor);
                })) : "model" == t.yDim && (fgFontColor = "white", e = L[i] % m.length, 
                ae(o.getRow(), o, 0, m[e], b[e])));
            }), i;
        }
        function ae(e, t, o, i, n) {
            t.getElement().style.backgroundColor = i, e.getElement().style.backgroundColor = i;
            t = e.getTreeChildren();
            0 < t.length ? t.forEach(function(e) {
                e.getElement().style.backgroundColor = i, e.getElement().style.color = n;
            }) : e.getElement().style.color = n;
        }
        function le(e, t, o, i) {
            for (k of Object.keys(e)) "row_name" != k && "_children" != k ? (t.push(e[k]), 
            o.push(k)) : "_children" == k && 1 == i && le(e, t, o, i);
        }
        function H(e, t, o) {
            var i = Object.assign({}, o);
            if ("_children" in o && "row" == t && 0 < o._children.length) {
                var n = 0;
                for (cData of o._children) i._children[n] = H(e, t, cData), n += 1;
            }
            var s = [], r = [], a = (le(o, s, r, "row" == t ? 0 : 1), []);
            switch (e) {
              case "0":
                a = s;
                break;

              case "1":
                let t = function(e) {
                    return datasum = e.reduce(function(e, t) {
                        return -999 < Number(t) ? Number(e) + Number(t) : Number(e);
                    }, 0), 0 < (datanum = e.reduce(function(e, t) {
                        return -999 < Number(t) ? Number(e) + 1 : Number(e);
                    }, 0)) ? datasum / datanum : -999;
                };
                for (val of s) newval = -999 < val ? (val - t(s)) / function(e) {
                    let o = t(e);
                    return -999 < o ? Math.sqrt(e.reduce(function(e, t) {
                        return -999 < Number(t) ? e + Math.pow(Number(t) - o, 2) : e;
                    }, 0) / datanum) : -999;
                }(s) : -999, a.push(newval);
                break;

              case "2":
              case "3":
                var [ l, c ] = (() => {
                    let t = 1e20, o = -1e20;
                    for (let e = 0; e < s.length; e++) {
                        var i = s[e];
                        -999 < i && (t = i < t ? i : t, o = i > o ? i : o);
                    }
                    let e = 0;
                    for (k of r) e += 1;
                    return 1e20 == t && (t = -999), -1e20 == o && (o = -999), [ t, o ];
                })();
                for (val of s) newval = -999 < val ? c == l ? 1 : "3" == e ? (val - l) / (c - l) : (val - .5 * (l + c)) / (.5 * (c - l)) : -999, 
                a.push(newval);
            }
            n = 0;
            for (k of r) i[k] = [ o[k], a[n] ], n += 1;
            return i;
        }
        const F = e => {
            let t, o, i;
            if ("object" != typeof e || null === e) return e;
            for (i in t = Array.isArray(e) ? [] : {}, e) o = e[i], t[i] = F(o);
            return t;
        };
        function z(e, i) {
            if (e.length !== i.length) throw new Error("Arrays must have the same length");
            return e.reduce((e, t, o) => (e.push({
                value: i[o],
                label: t
            }), e), []);
        }
    }, {
        "./globalVars.js": 2,
        "./lmt_tool.js": 4,
        "./tabOptions.js": 5,
        "choices.js": 6,
        slideout: 9,
        "tabulator-tables": 10
    } ],
    4: [ function(e, t, o) {
        t.exports = {
            add_options: function(e, t) {
                for (var o = document.getElementById(t), i = o.options.length - 1; 0 <= i; i--) o.remove(i);
                for (x of e) {
                    var n = document.createElement("option");
                    n.value = x, n.text = x, o.add(n);
                }
            },
            cmec2tab_json: function(i, n, s, r, a) {
                // convert cmec json (output.json) to tabulator json format 
                let l = 0;
                if (i.DIMENSIONS.json_structure.includes(n) && i.DIMENSIONS.json_structure.includes(s)) {
                    if ((fixedDims = Object.keys(r)).length + 2 === i.DIMENSIONS.json_structure.length) {
                        let e = Object.assign(i.RESULTS, {});
                        for (fixedDim of fixedDims) {
                            var c = {};
                            switch (fixedDim) {
                              case i.DIMENSIONS.json_structure[0]:
                                fxDimName = i.DIMENSIONS.json_structure[0], Object.keys(e).includes(r[fxDimName]) ? c[r[fxDimName]] = e[r[fxDimName]] : c[r[fxDimName]] = p(i, {
                                    [fxDimName]: r[fxDimName]
                                });
                                break;

                              case i.DIMENSIONS.json_structure[1]:
                                fxDimName = i.DIMENSIONS.json_structure[1];
                                for (reg of Object.keys(e)) c[reg] = {}, Object.keys(e[reg]).includes(r[fxDimName]) ? c[reg][r[fxDimName]] = e[reg][r[fxDimName]] : c[reg][r[fxDimName]] = p(i, {
                                    [fxDimName]: r[fxDimName]
                                });
                                break;

                              case i.DIMENSIONS.json_structure[2]:
                                fxDimName = i.DIMENSIONS.json_structure[2];
                                for (reg of Object.keys(e)) {
                                    c[reg] = {};
                                    for (mod of Object.keys(e[reg])) c[reg][mod] = {}, 
                                    Object.keys(e[reg][mod]).includes(r[fxDimName]) ? c[reg][mod][r[fxDimName]] = e[reg][mod][r[fxDimName]] : c[reg][mod][r[fxDimName]] = p(i, {
                                        [fxDimName]: r[fxDimName]
                                    });
                                }
                                break;

                              case i.DIMENSIONS.json_structure[3]:
                                fxDimName = i.DIMENSIONS.json_structure[3];
                                for (reg of Object.keys(e)) {
                                    c[reg] = {};
                                    for (mod of Object.keys(e[reg])) {
                                        c[reg][mod] = {};
                                        for (met of Object.keys(e[reg][mod])) c[reg][mod][met] = {}, 
                                        Object.keys(e[reg][mod][met]).includes(r[fxDimName]) ? c[reg][mod][met][r[fxDimName]] = e[reg][mod][met][r[fxDimName]] : c[reg][mod][met][r[fxDimName]] = p(i, {
                                            [fxDimName]: r[fxDimName]
                                        });
                                    }
                                }
                                break;

                              case i.DIMENSIONS.json_structure[4]:
                                fxDimName = i.DIMENSIONS.json_structure[4];
                                for (reg of Object.keys(e)) {
                                    c[reg] = {};
                                    for (mod of Object.keys(e[reg])) {
                                        c[reg][mod] = {};
                                        for (met of Object.keys(e[reg][mod])) {
                                            c[reg][mod][met] = {};
                                            for (dm4 of Object.keys(e[reg][mod][met])) c[reg][mod][met][dm4] = {}, 
                                            Object.keys(e[reg][mod][met][dm4]).includes(r[fxDimName]) ? c[reg][mod][met][dm4][r[fxDimName]] = e[reg][mod][met][dm4][r[fxDimName]] : c[reg][mod][met][dm4][r[fxDimName]] = p(i, {
                                                [fxDimName]: r[fxDimName]
                                            });
                                        }
                                    }
                                }
                                break;

                              case i.DIMENSIONS.json_structure[5]:
                                fxDimName = i.DIMENSIONS.json_structure[5];
                                for (reg of Object.keys(e)) {
                                    c[reg] = {};
                                    for (mod of Object.keys(e[reg])) {
                                        c[reg][mod] = {};
                                        for (met of Object.keys(e[reg][mod])) {
                                            c[reg][mod][met] = {};
                                            for (dm4 of Object.keys(e[reg][mod][met])) {
                                                c[reg][mod][met][dm4] = {};
                                                for (dm5 of Object.keys(e[reg][mod][met][dm4])) c[reg][mod][met][dm4][dm5] = {}, 
                                                Object.keys(e[reg][mod][met][dm4][dm5]).includes(r[fxDimName]) ? c[reg][mod][met][dm4][dm5][r[fxDimName]] = e[reg][mod][met][dm4][dm5][r[fxDimName]] : c[reg][mod][met][dm4][dm5][r[fxDimName]] = p(i, {
                                                    [fxDimName]: r[fxDimName]
                                                });
                                            }
                                        }
                                    }
                                }
                                break;

                              default:
                                alert("fixed dimension not exist in the json file");
                            }
                            e = Object.assign(c, {});
                        }
                        i.DIMENSIONS.json_structure.indexOf(n), i.DIMENSIONS.json_structure.indexOf(s);
                        var u = i.DIMENSIONS.json_structure, d = [];
                        for (dm of u) dm !== n && dm != s || d.push(dm), dm in r && d.push(r[dm]);
                        let t = e;
                        xdimVal = "statistic" == n && i.DIMENSIONS.dimensions[n].hasOwnProperty("indices") ? i.DIMENSIONS.dimensions[n].indices : Object.keys(i.DIMENSIONS.dimensions[n]), 
                        ydimVal = "statistic" == s && i.DIMENSIONS.dimensions[s].hasOwnProperty("indices") ? i.DIMENSIONS.dimensions[s].indices : Object.keys(i.DIMENSIONS.dimensions[s]);
                        for (dm of d) n != dm && s != dm && (t = t[dm]), n === dm && (xKeys = Object.keys(t), 
                        t = t[xKeys[0]]), s === dm && (yKeys = Object.keys(t), t = t[yKeys[0]]);
                        xkey = xdimVal, ykey = ydimVal, xKeys = xdimVal, yKeys = ydimVal;
                        let o = [];
                        var h = {};
                        for (yk of yKeys) {
                            (h = {}).row_name = yk;
                            for (xk of xKeys) {
                                t = e;
                                for (dm of d) t = n === dm ? xk in t ? t[xk] : {} : s === dm ? yk in t ? t[yk] : {} : null != t && dm in t ? t[dm] : null;
                                null == t ? h[xk] = -999 : h[xk] = t;
                            }
                            (1 == l || h.row_name.includes("::") || h.row_name.includes("!!")) && (l = 1), 
                            o.push(h);
                        }
                        return o = 1 == l && 1 == a ? function(e) {
                            var t = [];
                            var o = Object.assign(e, {});
                            for (rowline of o) {
                                var i = {};
                                if (!rowline.row_name.includes("::") && !rowline.row_name.includes("!!")) {
                                    (i = rowline)._children = [], parentName = rowline.row_name;
                                    var n = o.filter(e => e.row_name.includes(parentName.concat("::")) && !e.row_name.includes("!!")), n = JSON.parse(JSON.stringify(n));
                                    for (chd of n) {
                                        chd._children = [], childName = chd.row_name, 
                                        chd.row_name = chd.row_name.split("::").slice(-1)[0];
                                        var s = o.filter(e => e.row_name.includes(childName.concat("!!"))), s = JSON.parse(JSON.stringify(s));
                                        for (grd of s) grd.row_name = grd.row_name.split("!!").slice(-1)[0];
                                        chd._children = s;
                                    }
                                    i._children = n, t.push(i);
                                }
                            }
                            return t;
                        }
                        // tabulator json format can be used by tabulator.js directrly
                        (o) : o;
                    }
                    alert("the size of fixed dimensions is not consistent with the json file");
                } else alert("the dimensions X and Y not in the json file");
            }
        };
        function p(e, t) {
            var o = Object.keys(t)[0], t = t[o];
            let i = {};
            var n = e.DIMENSIONS.json_structure.indexOf(o);
            if (-1 == n && (console.log(e.DIMENSIONS.json_structure), console.log("n=", n, o, t), 
            xxxx), n == e.DIMENSIONS.json_structure.length - 1) if (t.constructor === Array) for (v of t) i[v] = -999; else i = -999; else if (fxdimNamNext = e.DIMENSIONS.json_structure[n + 1], 
            fxdimValNext = "statistic" == fxdimNamNext ? e.DIMENSIONS.dimensions[fxdimNamNext].hasOwnProperty("indices") ? e.DIMENSIONS.dimensions[fxdimNamNext].indices : Object.keys(e.DIMENSIONS.dimensions[fxdimNamNext]) : ("metric" != fxdimNamNext && "model" != fxdimNamNext && fxdimNamNext, 
            Object.keys(e.DIMENSIONS.dimensions[fxdimNamNext])), t.constructor === Array) for (v of t) i[v] = p(e, {
                [fxdimNamNext]: fxdimValNext
            }); else i = p(e, {
                [fxdimNamNext]: fxdimValNext
            });
            return i;
        }
    }, {} ],
    5: [ function(e, t, o) {
        var i = {
            dataTree: !0,
            dataTreeStartExpanded: [ !0, !1 ],
            reactiveData: !0,
            headerSortTristate: !0,
            placeholder: "Loading Data",
            htmlOutputConfig: {
                columnHeaders: !0,
                columnGroups: !1,
                rowGroups: !1,
                columnCalcs: !0,
                dataTree: !0,
                formatCells: !0
            },
            downloadConfig: {
                columnHeaders: !0,
                columnGroups: !1,
                rowGroups: !1,
                columnCalcs: !0,
                dataTree: !0,
                formatCells: !0
            },
            downloadReady: e("./downloadFunctions.js").downloadHTML4CMIP,
            movableColumns: !0,
            layout: "fitColumns",
            tooltips: function(e) {
                return "row_name" != e.getField() && Math.round(100 * (e.getValue() + Number.EPSILON)) / 100;
            },
            columnMinWidth: 10,
            nestedFieldSeparator: "|",
            dataTreeBranchElement: !1,
            dataTreeChildIndent: 15,
            selectable: !0,
            cellClick: function(e, t) {
                var o = [], i = {}, n = /{([^}]+)}/g;
                var s;
                for (;s = n.exec(g); ) o.push(s[1]);
                o.filter((e, t) => o.indexOf(e) === t).filter((e, t) => i[e] = "null");
                var r = t.getColumn().getField().replace(/\s+/g, ""), t = function e(t) {
                    var o;
                    o = t.getCells()[0].getValue().replace(/\s+/g, "");
                    t.getTreeParent() && (o = e(t.getTreeParent()) + "::" + o);
                    return o;
                }(t.getRow());
                var a = b.xdimChoices.getValue(!0), l = b.ydimChoices.getValue(!0);
                if ("row_name" != r) {
                    console.log(o), console.log(i, a, l, r, t);
                    var c = {}, u = (c[a] = r, c[l] = t, console.log(v), Object.keys(v.fxdim).filter((e, t) => c[e] = v.fxdim[e]), 
                    {});
                    for (const [ m, f ] of Object.entries(c)) f.includes("::") || f.includes("!!") ? f.replace(/!!/g, "::").replace(/\s+/g, "").split("::").filter((e, t) => u[m + "." + t.toString()] = e) : u[m] = f.replace(/\s+/g, "");
                    Object.keys(i).forEach(function(e) {
                        u.hasOwnProperty(e) && (i[e] = u[e]);
                    }), console.log("xxx", u, i);
                    var d = g;
                    if (Object.values(i).includes("null")) alert("clickable not avaiable"); else for (var h of Object.keys(i)) {
                        var p = "\\{" + h + "\\}", p = new RegExp(p, "g");
                        d = d.replace(p, i[h]), console.log(h, i[h], d);
                    }
                    console.log(c, "clickinput"), alert("stop for debug");
                }
            },
            dataTreeStartExpanded: function(e, t) {
                return setLevelExpand(e, t);
            },
            columns: [],
            height: "auto"
        };
        o.tabOption = i;
        const g = "{metric.0}/{metric.1}/{metric.2}/{metric.2}.html?model={model}&region={region}";
        var o = e("./globalVars.js"), b = o.dictChoices, v = o.dimSetEvent;
    }, {
        "./downloadFunctions.js": 1,
        "./globalVars.js": 2
    } ],
    6: [ function(e, t, o) {
        /*! choices.js v10.2.0 | © 2022 Josh Johnson | https://github.com/jshjohnson/Choices#readme */
        var i, n;
        i = window, n = function() {
            "use strict";
            var o = {
                282: function(e, t, o) {
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    }), t.clearChoices = t.activateChoices = t.filterChoices = t.addChoice = void 0;
                    var c = o(883);
                    t.addChoice = function(e) {
                        var t = e.value, o = e.label, i = e.id, n = e.groupId, s = e.disabled, r = e.elementId, a = e.customProperties, l = e.placeholder, e = e.keyCode;
                        return {
                            type: c.ACTION_TYPES.ADD_CHOICE,
                            value: t,
                            label: o,
                            id: i,
                            groupId: n,
                            disabled: s,
                            elementId: r,
                            customProperties: a,
                            placeholder: l,
                            keyCode: e
                        };
                    }, t.filterChoices = function(e) {
                        return {
                            type: c.ACTION_TYPES.FILTER_CHOICES,
                            results: e
                        };
                    }, t.activateChoices = function(e) {
                        return {
                            type: c.ACTION_TYPES.ACTIVATE_CHOICES,
                            active: e = void 0 === e ? !0 : e
                        };
                    };
                    t.clearChoices = function() {
                        return {
                            type: c.ACTION_TYPES.CLEAR_CHOICES
                        };
                    };
                },
                783: function(e, t, o) {
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    }), t.addGroup = void 0;
                    var n = o(883);
                    t.addGroup = function(e) {
                        var t = e.value, o = e.id, i = e.active, e = e.disabled;
                        return {
                            type: n.ACTION_TYPES.ADD_GROUP,
                            value: t,
                            id: o,
                            active: i,
                            disabled: e
                        };
                    };
                },
                464: function(e, t, o) {
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    }), t.highlightItem = t.removeItem = t.addItem = void 0;
                    var l = o(883);
                    t.addItem = function(e) {
                        var t = e.value, o = e.label, i = e.id, n = e.choiceId, s = e.groupId, r = e.customProperties, a = e.placeholder, e = e.keyCode;
                        return {
                            type: l.ACTION_TYPES.ADD_ITEM,
                            value: t,
                            label: o,
                            id: i,
                            choiceId: n,
                            groupId: s,
                            customProperties: r,
                            placeholder: a,
                            keyCode: e
                        };
                    }, t.removeItem = function(e, t) {
                        return {
                            type: l.ACTION_TYPES.REMOVE_ITEM,
                            id: e,
                            choiceId: t
                        };
                    };
                    t.highlightItem = function(e, t) {
                        return {
                            type: l.ACTION_TYPES.HIGHLIGHT_ITEM,
                            id: e,
                            highlighted: t
                        };
                    };
                },
                137: function(e, t, o) {
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    }), t.setIsLoading = t.resetTo = t.clearAll = void 0;
                    var i = o(883);
                    t.clearAll = function() {
                        return {
                            type: i.ACTION_TYPES.CLEAR_ALL
                        };
                    }, t.resetTo = function(e) {
                        return {
                            type: i.ACTION_TYPES.RESET_TO,
                            state: e
                        };
                    };
                    t.setIsLoading = function(e) {
                        return {
                            type: i.ACTION_TYPES.SET_IS_LOADING,
                            isLoading: e
                        };
                    };
                },
                373: function(e, t, o) {
                    var m = this && this.__spreadArray || function(e, t, o) {
                        if (o || 2 === arguments.length) for (var i, n = 0, s = t.length; n < s; n++) !i && n in t || ((i = i || Array.prototype.slice.call(t, 0, n))[n] = t[n]);
                        return e.concat(i || Array.prototype.slice.call(t));
                    }, i = this && this.__importDefault || function(e) {
                        return e && e.__esModule ? e : {
                            default: e
                        };
                    }, n = (Object.defineProperty(t, "__esModule", {
                        value: !0
                    }), i(o(996))), s = i(o(221)), u = o(282), l = o(783), c = o(464), r = o(137), a = o(520), g = o(883), d = o(789), f = o(799), h = o(655), p = i(o(744)), b = i(o(686)), v = "-ms-scroll-limit" in document.documentElement.style && "-ms-ime-align" in document.documentElement.style, y = {};
                    function w(e, t) {
                        void 0 === e && (e = "[data-choice]");
                        var o = this, i = (void 0 === (t = void 0 === t ? {} : t).allowHTML && console.warn("Deprecation warning: allowHTML will default to false in a future release. To render HTML in Choices, you will need to set it to true. Setting allowHTML will suppress this message."), 
                        this.config = n.default.all([ d.DEFAULT_CONFIG, w.defaults.options, t ], {
                            arrayMerge: function(e, t) {
                                return m([], t, !0);
                            }
                        }), (0, f.diff)(this.config, d.DEFAULT_CONFIG)), i = (i.length && console.warn("Unknown config option(s) passed", i.join(", ")), 
                        "string" == typeof e ? document.querySelector(e) : e);
                        if (!(i instanceof HTMLInputElement || i instanceof HTMLSelectElement)) throw TypeError("Expected one of the following types text|select-one|select-multiple");
                        this._isTextElement = i.type === g.TEXT_TYPE, this._isSelectOneElement = i.type === g.SELECT_ONE_TYPE, 
                        this._isSelectMultipleElement = i.type === g.SELECT_MULTIPLE_TYPE, 
                        this._isSelectElement = this._isSelectOneElement || this._isSelectMultipleElement, 
                        this.config.searchEnabled = this._isSelectMultipleElement || this.config.searchEnabled, 
                        [ "auto", "always" ].includes("".concat(this.config.renderSelectedChoices)) || (this.config.renderSelectedChoices = "auto"), 
                        t.addItemFilter && "function" != typeof t.addItemFilter && (t = t.addItemFilter instanceof RegExp ? t.addItemFilter : new RegExp(t.addItemFilter), 
                        this.config.addItemFilter = t.test.bind(t)), this._isTextElement ? this.passedElement = new a.WrappedInput({
                            element: i,
                            classNames: this.config.classNames,
                            delimiter: this.config.delimiter
                        }) : this.passedElement = new a.WrappedSelect({
                            element: i,
                            classNames: this.config.classNames,
                            template: function(e) {
                                return o._templates.option(e);
                            }
                        }), this.initialised = !1, this._store = new p.default(), 
                        this._initialState = h.defaultState, this._currentState = h.defaultState, 
                        this._prevState = h.defaultState, this._currentValue = "", 
                        this._canSearch = !!this.config.searchEnabled, this._isScrollingOnIe = !1, 
                        this._highlightPosition = 0, this._wasTap = !0, this._placeholderValue = this._generatePlaceholderValue(), 
                        this._baseId = (0, f.generateId)(this.passedElement.element, "choices-"), 
                        this._direction = this.passedElement.dir, this._direction || (t = window.getComputedStyle(this.passedElement.element).direction) !== window.getComputedStyle(document.documentElement).direction && (this._direction = t), 
                        this._idNames = {
                            itemChoice: "item-choice"
                        }, this._isSelectElement && (this._presetGroups = this.passedElement.optionGroups, 
                        this._presetOptions = this.passedElement.options), this._presetChoices = this.config.choices, 
                        this._presetItems = this.config.items, this.passedElement.value && this._isTextElement && (i = this.passedElement.value.split(this.config.delimiter), 
                        this._presetItems = this._presetItems.concat(i)), this.passedElement.options && this.passedElement.options.forEach(function(e) {
                            o._presetChoices.push({
                                value: e.value,
                                label: e.innerHTML,
                                selected: !!e.selected,
                                disabled: e.disabled || e.parentNode.disabled,
                                placeholder: "" === e.value || e.hasAttribute("placeholder"),
                                customProperties: (0, f.parseCustomProperties)(e.dataset.customProperties)
                            });
                        }), this._render = this._render.bind(this), this._onFocus = this._onFocus.bind(this), 
                        this._onBlur = this._onBlur.bind(this), this._onKeyUp = this._onKeyUp.bind(this), 
                        this._onKeyDown = this._onKeyDown.bind(this), this._onClick = this._onClick.bind(this), 
                        this._onTouchMove = this._onTouchMove.bind(this), this._onTouchEnd = this._onTouchEnd.bind(this), 
                        this._onMouseDown = this._onMouseDown.bind(this), this._onMouseOver = this._onMouseOver.bind(this), 
                        this._onFormReset = this._onFormReset.bind(this), this._onSelectKey = this._onSelectKey.bind(this), 
                        this._onEnterKey = this._onEnterKey.bind(this), this._onEscapeKey = this._onEscapeKey.bind(this), 
                        this._onDirectionKey = this._onDirectionKey.bind(this), 
                        this._onDeleteKey = this._onDeleteKey.bind(this), this.passedElement.isActive ? (this.config.silent || console.warn("Trying to initialise Choices on element already initialised", {
                            element: e
                        }), this.initialised = !0) : this.init();
                    }
                    Object.defineProperty(w, "defaults", {
                        get: function() {
                            return Object.preventExtensions({
                                get options() {
                                    return y;
                                },
                                get templates() {
                                    return b.default;
                                }
                            });
                        },
                        enumerable: !1,
                        configurable: !0
                    }), w.prototype.init = function() {
                        var e;
                        this.initialised || (this._createTemplates(), this._createElements(), 
                        this._createStructure(), this._store.subscribe(this._render), 
                        this._render(), this._addEventListeners(), this.config.addItems && !this.passedElement.element.hasAttribute("disabled") || this.disable(), 
                        this.initialised = !0, (e = this.config.callbackOnInit) && "function" == typeof e && e.call(this));
                    }, w.prototype.destroy = function() {
                        this.initialised && (this._removeEventListeners(), this.passedElement.reveal(), 
                        this.containerOuter.unwrap(this.passedElement.element), 
                        this.clearStore(), this._isSelectElement && (this.passedElement.options = this._presetOptions), 
                        this._templates = b.default, this.initialised = !1);
                    }, w.prototype.enable = function() {
                        return this.passedElement.isDisabled && this.passedElement.enable(), 
                        this.containerOuter.isDisabled && (this._addEventListeners(), 
                        this.input.enable(), this.containerOuter.enable()), this;
                    }, w.prototype.disable = function() {
                        return this.passedElement.isDisabled || this.passedElement.disable(), 
                        this.containerOuter.isDisabled || (this._removeEventListeners(), 
                        this.input.disable(), this.containerOuter.disable()), this;
                    }, w.prototype.highlightItem = function(e, t) {
                        var o, i, n;
                        return void 0 === t && (t = !0), e && e.id && (o = e.id, 
                        n = e.groupId, i = void 0 === (i = e.value) ? "" : i, e = void 0 === (e = e.label) ? "" : e, 
                        n = 0 <= (n = void 0 === n ? -1 : n) ? this._store.getGroupById(n) : null, 
                        this._store.dispatch((0, c.highlightItem)(o, !0)), t) && this.passedElement.triggerEvent(g.EVENTS.highlightItem, {
                            id: o,
                            value: i,
                            label: e,
                            groupValue: n && n.value ? n.value : null
                        }), this;
                    }, w.prototype.unhighlightItem = function(e) {
                        var t, o, i;
                        return e && e.id && (t = e.id, i = e.groupId, o = void 0 === (o = e.value) ? "" : o, 
                        e = void 0 === (e = e.label) ? "" : e, i = 0 <= (i = void 0 === i ? -1 : i) ? this._store.getGroupById(i) : null, 
                        this._store.dispatch((0, c.highlightItem)(t, !1)), this.passedElement.triggerEvent(g.EVENTS.highlightItem, {
                            id: t,
                            value: o,
                            label: e,
                            groupValue: i && i.value ? i.value : null
                        })), this;
                    }, w.prototype.highlightAll = function() {
                        var t = this;
                        return this._store.items.forEach(function(e) {
                            return t.highlightItem(e);
                        }), this;
                    }, w.prototype.unhighlightAll = function() {
                        var t = this;
                        return this._store.items.forEach(function(e) {
                            return t.unhighlightItem(e);
                        }), this;
                    }, w.prototype.removeActiveItemsByValue = function(t) {
                        var o = this;
                        return this._store.activeItems.filter(function(e) {
                            return e.value === t;
                        }).forEach(function(e) {
                            return o._removeItem(e);
                        }), this;
                    }, w.prototype.removeActiveItems = function(t) {
                        var o = this;
                        return this._store.activeItems.filter(function(e) {
                            return e.id !== t;
                        }).forEach(function(e) {
                            return o._removeItem(e);
                        }), this;
                    }, w.prototype.removeHighlightedItems = function(t) {
                        var o = this;
                        return void 0 === t && (t = !1), this._store.highlightedActiveItems.forEach(function(e) {
                            o._removeItem(e), t && o._triggerChange(e.value);
                        }), this;
                    }, w.prototype.showDropdown = function(e) {
                        var t = this;
                        return this.dropdown.isActive || requestAnimationFrame(function() {
                            t.dropdown.show(), t.containerOuter.open(t.dropdown.distanceFromTopWindow), 
                            !e && t._canSearch && t.input.focus(), t.passedElement.triggerEvent(g.EVENTS.showDropdown, {});
                        }), this;
                    }, w.prototype.hideDropdown = function(e) {
                        var t = this;
                        return this.dropdown.isActive && requestAnimationFrame(function() {
                            t.dropdown.hide(), t.containerOuter.close(), !e && t._canSearch && (t.input.removeActiveDescendant(), 
                            t.input.blur()), t.passedElement.triggerEvent(g.EVENTS.hideDropdown, {});
                        }), this;
                    }, w.prototype.getValue = function(o) {
                        void 0 === o && (o = !1);
                        var e = this._store.activeItems.reduce(function(e, t) {
                            t = o ? t.value : t;
                            return e.push(t), e;
                        }, []);
                        return this._isSelectOneElement ? e[0] : e;
                    }, w.prototype.setValue = function(e) {
                        var t = this;
                        return this.initialised && e.forEach(function(e) {
                            return t._setChoiceOrItem(e);
                        }), this;
                    }, w.prototype.setChoiceByValue = function(e) {
                        var t = this;
                        return this.initialised && !this._isTextElement && (Array.isArray(e) ? e : [ e ]).forEach(function(e) {
                            return t._findAndSelectChoiceByValue(e);
                        }), this;
                    }, w.prototype.setChoices = function(e, t, o, i) {
                        var n = this;
                        if (void 0 === e && (e = []), void 0 === t && (t = "value"), 
                        void 0 === o && (o = "label"), void 0 === i && (i = !1), 
                        !this.initialised) throw new ReferenceError("setChoices was called on a non-initialized instance of Choices");
                        if (!this._isSelectElement) throw new TypeError("setChoices can't be used with INPUT based Choices");
                        if ("string" != typeof t || !t) throw new TypeError("value parameter must be a name of 'value' field in passed objects");
                        if (i && this.clearChoices(), "function" == typeof e) {
                            var s = e(this);
                            if ("function" == typeof Promise && s instanceof Promise) return new Promise(function(e) {
                                return requestAnimationFrame(e);
                            }).then(function() {
                                return n._handleLoadingState(!0);
                            }).then(function() {
                                return s;
                            }).then(function(e) {
                                return n.setChoices(e, t, o, i);
                            }).catch(function(e) {
                                n.config.silent || console.error(e);
                            }).then(function() {
                                return n._handleLoadingState(!1);
                            }).then(function() {
                                return n;
                            });
                            if (Array.isArray(s)) return this.setChoices(s, t, o, !1);
                            throw new TypeError(".setChoices first argument function must return either array of choices or Promise, got: ".concat(typeof s));
                        }
                        if (Array.isArray(e)) return this.containerOuter.removeLoadingState(), 
                        this._startLoading(), e.forEach(function(e) {
                            e.choices ? n._addGroup({
                                id: e.id ? parseInt("".concat(e.id), 10) : null,
                                group: e,
                                valueKey: t,
                                labelKey: o
                            }) : n._addChoice({
                                value: e[t],
                                label: e[o],
                                isSelected: !!e.selected,
                                isDisabled: !!e.disabled,
                                placeholder: !!e.placeholder,
                                customProperties: e.customProperties
                            });
                        }), this._stopLoading(), this;
                        throw new TypeError(".setChoices must be called either with array of choices with a function resulting into Promise of array of choices");
                    }, w.prototype.clearChoices = function() {
                        return this._store.dispatch((0, u.clearChoices)()), this;
                    }, w.prototype.clearStore = function() {
                        return this._store.dispatch((0, r.clearAll)()), this;
                    }, w.prototype.clearInput = function() {
                        var e = !this._isSelectOneElement;
                        return this.input.clear(e), !this._isTextElement && this._canSearch && (this._isSearching = !1, 
                        this._store.dispatch((0, u.activateChoices)(!0))), this;
                    }, w.prototype._render = function() {
                        var e, t, o;
                        this._store.isLoading() || (this._currentState = this._store.state, 
                        e = this._currentState.choices !== this._prevState.choices || this._currentState.groups !== this._prevState.groups || this._currentState.items !== this._prevState.items, 
                        t = this._isSelectElement, o = this._currentState.items !== this._prevState.items, 
                        e && (t && this._renderChoices(), o && this._renderItems(), 
                        this._prevState = this._currentState));
                    }, w.prototype._renderChoices = function() {
                        var e, t, o = this, i = this._store, n = i.activeGroups, i = i.activeChoices, s = document.createDocumentFragment();
                        this.choiceList.clear(), this.config.resetScrollPosition && requestAnimationFrame(function() {
                            return o.choiceList.scrollToTop();
                        }), 1 <= n.length && !this._isSearching ? (1 <= (e = i.filter(function(e) {
                            return !0 === e.placeholder && -1 === e.groupId;
                        })).length && (s = this._createChoicesFragment(e, s)), s = this._createGroupsFragment(n, i, s)) : 1 <= i.length && (s = this._createChoicesFragment(i, s)), 
                        s.childNodes && 0 < s.childNodes.length ? (e = this._store.activeItems, 
                        (n = this._canAddItem(e, this.input.value)).response ? (this.choiceList.append(s), 
                        this._highlightChoice()) : (t = this._getTemplate("notice", n.notice), 
                        this.choiceList.append(t))) : (t = i = void 0, i = this._isSearching ? (t = "function" == typeof this.config.noResultsText ? this.config.noResultsText() : this.config.noResultsText, 
                        this._getTemplate("notice", t, "no-results")) : (t = "function" == typeof this.config.noChoicesText ? this.config.noChoicesText() : this.config.noChoicesText, 
                        this._getTemplate("notice", t, "no-choices")), this.choiceList.append(i));
                    }, w.prototype._renderItems = function() {
                        var e = this._store.activeItems || [], e = (this.itemList.clear(), 
                        this._createItemsFragment(e));
                        e.childNodes && this.itemList.append(e);
                    }, w.prototype._createGroupsFragment = function(e, i, n) {
                        var s = this;
                        void 0 === n && (n = document.createDocumentFragment());
                        return this.config.shouldSort && e.sort(this.config.sorter), 
                        e.forEach(function(e) {
                            t = e;
                            var t, o = i.filter(function(e) {
                                return s._isSelectOneElement ? e.groupId === t.id : e.groupId === t.id && ("always" === s.config.renderSelectedChoices || !e.selected);
                            });
                            1 <= o.length && (e = s._getTemplate("choiceGroup", e), 
                            n.appendChild(e), s._createChoicesFragment(o, n, !0));
                        }), n;
                    }, w.prototype._createChoicesFragment = function(e, t, o) {
                        var i = this, n = (void 0 === t && (t = document.createDocumentFragment()), 
                        void 0 === o && (o = !1), this.config), s = n.renderSelectedChoices, r = n.searchResultLimit, n = n.renderChoiceLimit, a = this._isSearching ? f.sortByScore : this.config.sorter, l = e, e = (l = "auto" !== s || this._isSelectOneElement ? l : e.filter(function(e) {
                            return !e.selected;
                        })).reduce(function(e, t) {
                            return (t.placeholder ? e.placeholderChoices : e.normalChoices).push(t), 
                            e;
                        }, {
                            placeholderChoices: [],
                            normalChoices: []
                        }), c = e.placeholderChoices, e = e.normalChoices, u = ((this.config.shouldSort || this._isSearching) && e.sort(a), 
                        l.length), d = this._isSelectOneElement ? m(m([], c, !0), e, !0) : e;
                        this._isSearching ? u = r : n && 0 < n && !o && (u = n);
                        for (var h, p = 0; p < u; p += 1) d[p] && (h = d[p], "auto" === s && !i._isSelectOneElement && h.selected || (h = i._getTemplate("choice", h, i.config.itemSelectText), 
                        t.appendChild(h)));
                        return t;
                    }, w.prototype._createItemsFragment = function(e, t) {
                        var o = this, i = (void 0 === t && (t = document.createDocumentFragment()), 
                        this.config), n = i.shouldSortItems, s = i.sorter, r = i.removeItemButton;
                        n && !this._isSelectOneElement && e.sort(s), this._isTextElement ? this.passedElement.value = e.map(function(e) {
                            return e.value;
                        }).join(this.config.delimiter) : this.passedElement.options = e;
                        return e.forEach(function(e) {
                            e = o._getTemplate("item", e, r);
                            t.appendChild(e);
                        }), t;
                    }, w.prototype._triggerChange = function(e) {
                        null != e && this.passedElement.triggerEvent(g.EVENTS.change, {
                            value: e
                        });
                    }, w.prototype._selectPlaceholderChoice = function(e) {
                        this._addItem({
                            value: e.value,
                            label: e.label,
                            choiceId: e.id,
                            groupId: e.groupId,
                            placeholder: e.placeholder
                        }), this._triggerChange(e.value);
                    }, w.prototype._handleButtonAction = function(e, t) {
                        var o;
                        e && t && this.config.removeItems && this.config.removeItemButton && (t = (o = t.parentNode && t.parentNode.dataset.id) && e.find(function(e) {
                            return e.id === parseInt(o, 10);
                        })) && (this._removeItem(t), this._triggerChange(t.value), 
                        this._isSelectOneElement) && this._store.placeholderChoice && this._selectPlaceholderChoice(this._store.placeholderChoice);
                    }, w.prototype._handleItemAction = function(e, t, o) {
                        var i, n = this;
                        void 0 === o && (o = !1), e && t && this.config.removeItems && !this._isSelectOneElement && (i = t.dataset.id, 
                        e.forEach(function(e) {
                            e.id !== parseInt("".concat(i), 10) || e.highlighted ? !o && e.highlighted && n.unhighlightItem(e) : n.highlightItem(e);
                        }), this.input.focus());
                    }, w.prototype._handleChoiceAction = function(e, t) {
                        var o, i;
                        e && t && (t = (t = t.dataset.id) && this._store.getChoiceById(t)) && (o = e[0] && e[0].keyCode ? e[0].keyCode : void 0, 
                        i = this.dropdown.isActive, t.keyCode = o, this.passedElement.triggerEvent(g.EVENTS.choice, {
                            choice: t
                        }), t.selected || t.disabled || this._canAddItem(e, t.value).response && (this._addItem({
                            value: t.value,
                            label: t.label,
                            choiceId: t.id,
                            groupId: t.groupId,
                            customProperties: t.customProperties,
                            placeholder: t.placeholder,
                            keyCode: t.keyCode
                        }), this._triggerChange(t.value)), this.clearInput(), i) && this._isSelectOneElement && (this.hideDropdown(!0), 
                        this.containerOuter.focus());
                    }, w.prototype._handleBackspace = function(e) {
                        var t;
                        this.config.removeItems && e && (t = e[e.length - 1], e = e.some(function(e) {
                            return e.highlighted;
                        }), this.config.editItems && !e && t ? (this.input.value = t.value, 
                        this.input.setWidth(), this._removeItem(t), this._triggerChange(t.value)) : (e || this.highlightItem(t, !1), 
                        this.removeHighlightedItems(!0)));
                    }, w.prototype._startLoading = function() {
                        this._store.dispatch((0, r.setIsLoading)(!0));
                    }, w.prototype._stopLoading = function() {
                        this._store.dispatch((0, r.setIsLoading)(!1));
                    }, w.prototype._handleLoadingState = function(e) {
                        void 0 === e && (e = !0);
                        var t = this.itemList.getChild(".".concat(this.config.classNames.placeholder));
                        e ? (this.disable(), this.containerOuter.addLoadingState(), 
                        this._isSelectOneElement ? t ? t.innerHTML = this.config.loadingText : (t = this._getTemplate("placeholder", this.config.loadingText)) && this.itemList.append(t) : this.input.placeholder = this.config.loadingText) : (this.enable(), 
                        this.containerOuter.removeLoadingState(), this._isSelectOneElement ? t && (t.innerHTML = this._placeholderValue || "") : this.input.placeholder = this._placeholderValue || "");
                    }, w.prototype._handleSearch = function(e) {
                        var t, o, i;
                        this.input.isFocussed && (o = this._store.choices, i = (t = this.config).searchFloor, 
                        t = t.searchChoices, o = o.some(function(e) {
                            return !e.active;
                        }), null != e && e.length >= i ? (i = t ? this._searchChoices(e) : 0, 
                        this.passedElement.triggerEvent(g.EVENTS.search, {
                            value: e,
                            resultCount: i
                        })) : o && (this._isSearching = !1, this._store.dispatch((0, 
                        u.activateChoices)(!0))));
                    }, w.prototype._canAddItem = function(e, t) {
                        var o, i = !0, n = "function" == typeof this.config.addItemText ? this.config.addItemText(t) : this.config.addItemText;
                        return this._isSelectOneElement || (o = (0, f.existsInArray)(e, t), 
                        0 < this.config.maxItemCount && this.config.maxItemCount <= e.length && (i = !1, 
                        n = "function" == typeof this.config.maxItemText ? this.config.maxItemText(this.config.maxItemCount) : this.config.maxItemText), 
                        !this.config.duplicateItemsAllowed && o && i && (i = !1, 
                        n = "function" == typeof this.config.uniqueItemText ? this.config.uniqueItemText(t) : this.config.uniqueItemText), 
                        this._isTextElement && this.config.addItems && i && "function" == typeof this.config.addItemFilter && !this.config.addItemFilter(t) && (i = !1, 
                        n = "function" == typeof this.config.customAddItemText ? this.config.customAddItemText(t) : this.config.customAddItemText)), 
                        {
                            response: i,
                            notice: n
                        };
                    }, w.prototype._searchChoices = function(e) {
                        var t, o, e = "string" == typeof e ? e.trim() : e, i = "string" == typeof this._currentValue ? this._currentValue.trim() : this._currentValue;
                        return e.length < 1 && e === "".concat(i, " ") ? 0 : (i = this._store.searchableChoices, 
                        t = e, o = Object.assign(this.config.fuseOptions, {
                            keys: m([], this.config.searchFields, !0),
                            includeMatches: !0
                        }), i = new s.default(i, o).search(t), this._currentValue = e, 
                        this._highlightPosition = 0, this._isSearching = !0, this._store.dispatch((0, 
                        u.filterChoices)(i)), i.length);
                    }, w.prototype._addEventListeners = function() {
                        var e = document.documentElement;
                        e.addEventListener("touchend", this._onTouchEnd, !0), this.containerOuter.element.addEventListener("keydown", this._onKeyDown, !0), 
                        this.containerOuter.element.addEventListener("mousedown", this._onMouseDown, !0), 
                        e.addEventListener("click", this._onClick, {
                            passive: !0
                        }), e.addEventListener("touchmove", this._onTouchMove, {
                            passive: !0
                        }), this.dropdown.element.addEventListener("mouseover", this._onMouseOver, {
                            passive: !0
                        }), this._isSelectOneElement && (this.containerOuter.element.addEventListener("focus", this._onFocus, {
                            passive: !0
                        }), this.containerOuter.element.addEventListener("blur", this._onBlur, {
                            passive: !0
                        })), this.input.element.addEventListener("keyup", this._onKeyUp, {
                            passive: !0
                        }), this.input.element.addEventListener("focus", this._onFocus, {
                            passive: !0
                        }), this.input.element.addEventListener("blur", this._onBlur, {
                            passive: !0
                        }), this.input.element.form && this.input.element.form.addEventListener("reset", this._onFormReset, {
                            passive: !0
                        }), this.input.addEventListeners();
                    }, w.prototype._removeEventListeners = function() {
                        var e = document.documentElement;
                        e.removeEventListener("touchend", this._onTouchEnd, !0), 
                        this.containerOuter.element.removeEventListener("keydown", this._onKeyDown, !0), 
                        this.containerOuter.element.removeEventListener("mousedown", this._onMouseDown, !0), 
                        e.removeEventListener("click", this._onClick), e.removeEventListener("touchmove", this._onTouchMove), 
                        this.dropdown.element.removeEventListener("mouseover", this._onMouseOver), 
                        this._isSelectOneElement && (this.containerOuter.element.removeEventListener("focus", this._onFocus), 
                        this.containerOuter.element.removeEventListener("blur", this._onBlur)), 
                        this.input.element.removeEventListener("keyup", this._onKeyUp), 
                        this.input.element.removeEventListener("focus", this._onFocus), 
                        this.input.element.removeEventListener("blur", this._onBlur), 
                        this.input.element.form && this.input.element.form.removeEventListener("reset", this._onFormReset), 
                        this.input.removeEventListeners();
                    }, w.prototype._onKeyDown = function(e) {
                        var t = e.keyCode, o = this._store.activeItems, i = this.input.isFocussed, n = this.dropdown.isActive, s = this.itemList.hasChildren(), r = String.fromCharCode(t), r = /[^\x00-\x1F]/.test(r), a = g.KEY_CODES.BACK_KEY, l = g.KEY_CODES.DELETE_KEY, c = g.KEY_CODES.ENTER_KEY, u = g.KEY_CODES.A_KEY, d = g.KEY_CODES.ESC_KEY, h = g.KEY_CODES.UP_KEY, p = g.KEY_CODES.DOWN_KEY, m = g.KEY_CODES.PAGE_UP_KEY, f = g.KEY_CODES.PAGE_DOWN_KEY;
                        switch (this._isTextElement || n || !r || (this.showDropdown(), 
                        this.input.isFocussed) || (this.input.value += e.key.toLowerCase()), 
                        t) {
                          case u:
                            return this._onSelectKey(e, s);

                          case c:
                            return this._onEnterKey(e, o, n);

                          case d:
                            return this._onEscapeKey(n);

                          case h:
                          case m:
                          case p:
                          case f:
                            return this._onDirectionKey(e, n);

                          case l:
                          case a:
                            return this._onDeleteKey(e, o, i);
                        }
                    }, w.prototype._onKeyUp = function(e) {
                        var t = e.target, e = e.keyCode, o = this.input.value, i = this._store.activeItems, i = this._canAddItem(i, o), n = g.KEY_CODES.BACK_KEY, s = g.KEY_CODES.DELETE_KEY;
                        this._isTextElement ? i.notice && o ? (o = this._getTemplate("notice", i.notice), 
                        this.dropdown.element.innerHTML = o.outerHTML, this.showDropdown(!0)) : this.hideDropdown(!0) : (o = (e === n || e === s) && t && !t.value, 
                        n = !this._isTextElement && this._isSearching, e = this._canSearch && i.response, 
                        o && n ? (this._isSearching = !1, this._store.dispatch((0, 
                        u.activateChoices)(!0))) : e && this._handleSearch(this.input.rawValue)), 
                        this._canSearch = this.config.searchEnabled;
                    }, w.prototype._onSelectKey = function(e, t) {
                        var o = e.ctrlKey, e = e.metaKey;
                        (o || e) && t && (this._canSearch = !1, this.config.removeItems) && !this.input.value && this.input.element === document.activeElement && this.highlightAll();
                    }, w.prototype._onEnterKey = function(e, t, o) {
                        var i, n = e.target, s = g.KEY_CODES.ENTER_KEY, r = n && n.hasAttribute("data-button");
                        this._isTextElement && n && n.value && (i = this.input.value, 
                        this._canAddItem(t, i).response) && (this.hideDropdown(!0), 
                        this._addItem({
                            value: i
                        }), this._triggerChange(i), this.clearInput()), r && (this._handleButtonAction(t, n), 
                        e.preventDefault()), o ? ((i = this.dropdown.getChild(".".concat(this.config.classNames.highlightedState))) && (t[0] && (t[0].keyCode = s), 
                        this._handleChoiceAction(t, i)), e.preventDefault()) : this._isSelectOneElement && (this.showDropdown(), 
                        e.preventDefault());
                    }, w.prototype._onEscapeKey = function(e) {
                        e && (this.hideDropdown(!0), this.containerOuter.focus());
                    }, w.prototype._onDirectionKey = function(e, t) {
                        var o, i = e.keyCode, n = e.metaKey, s = g.KEY_CODES.DOWN_KEY, r = g.KEY_CODES.PAGE_UP_KEY, a = g.KEY_CODES.PAGE_DOWN_KEY;
                        (t || this._isSelectOneElement) && (this.showDropdown(), 
                        this._canSearch = !1, t = i === s || i === a ? 1 : -1, s = "[data-choice-selectable]", 
                        o = void 0, (o = n || i === a || i === r ? 0 < t ? this.dropdown.element.querySelector("".concat(s, ":last-of-type")) : this.dropdown.element.querySelector(s) : (n = this.dropdown.element.querySelector(".".concat(this.config.classNames.highlightedState))) ? (0, 
                        f.getAdjacentEl)(n, s, t) : this.dropdown.element.querySelector(s)) && ((0, 
                        f.isScrolledIntoView)(o, this.choiceList.element, t) || this.choiceList.scrollToChildElement(o, t), 
                        this._highlightChoice(o)), e.preventDefault());
                    }, w.prototype._onDeleteKey = function(e, t, o) {
                        var i = e.target;
                        this._isSelectOneElement || i.value || !o || (this._handleBackspace(t), 
                        e.preventDefault());
                    }, w.prototype._onTouchMove = function() {
                        this._wasTap && (this._wasTap = !1);
                    }, w.prototype._onTouchEnd = function(e) {
                        var t = (e || e.touches[0]).target;
                        this._wasTap && this.containerOuter.element.contains(t) && (t !== this.containerOuter.element && t !== this.containerInner.element || (this._isTextElement ? this.input.focus() : this._isSelectMultipleElement && this.showDropdown()), 
                        e.stopPropagation()), this._wasTap = !0;
                    }, w.prototype._onMouseDown = function(e) {
                        var t, o, i, n = e.target;
                        n instanceof HTMLElement && (v && this.choiceList.element.contains(n) && (t = this.choiceList.element.firstElementChild, 
                        t = "ltr" === this._direction ? e.offsetX >= t.offsetWidth : e.offsetX < t.offsetLeft, 
                        this._isScrollingOnIe = t), n !== this.input.element) && ((t = n.closest("[data-button],[data-item],[data-choice]")) instanceof HTMLElement && (n = e.shiftKey, 
                        o = this._store.activeItems, "button" in (i = t.dataset) ? this._handleButtonAction(o, t) : "item" in i ? this._handleItemAction(o, t, n) : "choice" in i && this._handleChoiceAction(o, t)), 
                        e.preventDefault());
                    }, w.prototype._onMouseOver = function(e) {
                        e = e.target;
                        e instanceof HTMLElement && "choice" in e.dataset && this._highlightChoice(e);
                    }, w.prototype._onClick = function(e) {
                        e = e.target;
                        this.containerOuter.element.contains(e) ? this.dropdown.isActive || this.containerOuter.isDisabled ? this._isSelectOneElement && e !== this.input.element && !this.dropdown.element.contains(e) && this.hideDropdown() : this._isTextElement ? document.activeElement !== this.input.element && this.input.focus() : (this.showDropdown(), 
                        this.containerOuter.focus()) : (0 < this._store.highlightedActiveItems.length && this.unhighlightAll(), 
                        this.containerOuter.removeFocusState(), this.hideDropdown(!0));
                    }, w.prototype._onFocus = function(e) {
                        var t = this, o = e.target;
                        o && this.containerOuter.element.contains(o) && ((e = {})[g.TEXT_TYPE] = function() {
                            o === t.input.element && t.containerOuter.addFocusState();
                        }, e[g.SELECT_ONE_TYPE] = function() {
                            t.containerOuter.addFocusState(), o === t.input.element && t.showDropdown(!0);
                        }, e[g.SELECT_MULTIPLE_TYPE] = function() {
                            o === t.input.element && (t.showDropdown(!0), t.containerOuter.addFocusState());
                        }, e[this.passedElement.element.type]());
                    }, w.prototype._onBlur = function(e) {
                        var t, o = this, i = e.target;
                        i && this.containerOuter.element.contains(i) && !this._isScrollingOnIe ? (t = this._store.activeItems.some(function(e) {
                            return e.highlighted;
                        }), (e = {})[g.TEXT_TYPE] = function() {
                            i === o.input.element && (o.containerOuter.removeFocusState(), 
                            t && o.unhighlightAll(), o.hideDropdown(!0));
                        }, e[g.SELECT_ONE_TYPE] = function() {
                            o.containerOuter.removeFocusState(), i !== o.input.element && (i !== o.containerOuter.element || o._canSearch) || o.hideDropdown(!0);
                        }, e[g.SELECT_MULTIPLE_TYPE] = function() {
                            i === o.input.element && (o.containerOuter.removeFocusState(), 
                            o.hideDropdown(!0), t) && o.unhighlightAll();
                        }, e[this.passedElement.element.type]()) : (this._isScrollingOnIe = !1, 
                        this.input.element.focus());
                    }, w.prototype._onFormReset = function() {
                        this._store.dispatch((0, r.resetTo)(this._initialState));
                    }, w.prototype._highlightChoice = function(e) {
                        var t = this, o = (void 0 === e && (e = null), Array.from(this.dropdown.element.querySelectorAll("[data-choice-selectable]")));
                        o.length && (e = e, Array.from(this.dropdown.element.querySelectorAll(".".concat(this.config.classNames.highlightedState))).forEach(function(e) {
                            e.classList.remove(t.config.classNames.highlightedState), 
                            e.setAttribute("aria-selected", "false");
                        }), e ? this._highlightPosition = o.indexOf(e) : e = (e = o.length > this._highlightPosition ? o[this._highlightPosition] : o[o.length - 1]) || o[0], 
                        e.classList.add(this.config.classNames.highlightedState), 
                        e.setAttribute("aria-selected", "true"), this.passedElement.triggerEvent(g.EVENTS.highlightChoice, {
                            el: e
                        }), this.dropdown.isActive) && (this.input.setActiveDescendant(e.id), 
                        this.containerOuter.setActiveDescendant(e.id));
                    }, w.prototype._addItem = function(e) {
                        var t = e.value, o = e.label, o = void 0 === o ? null : o, i = e.choiceId, i = void 0 === i ? -1 : i, n = e.groupId, n = void 0 === n ? -1 : n, s = e.customProperties, s = void 0 === s ? {} : s, r = e.placeholder, r = void 0 !== r && r, e = e.keyCode, e = void 0 === e ? -1 : e, t = "string" == typeof t ? t.trim() : t, a = this._store.items, o = o || t, i = i || -1, l = 0 <= n ? this._store.getGroupById(n) : null, a = a ? a.length + 1 : 1;
                        this.config.prependValue && (t = this.config.prependValue + t.toString()), 
                        this.config.appendValue && (t += this.config.appendValue.toString()), 
                        this._store.dispatch((0, c.addItem)({
                            value: t,
                            label: o,
                            id: a,
                            choiceId: i,
                            groupId: n,
                            customProperties: s,
                            placeholder: r,
                            keyCode: e
                        })), this._isSelectOneElement && this.removeActiveItems(a), 
                        this.passedElement.triggerEvent(g.EVENTS.addItem, {
                            id: a,
                            value: t,
                            label: o,
                            customProperties: s,
                            groupValue: l && l.value ? l.value : null,
                            keyCode: e
                        });
                    }, w.prototype._removeItem = function(e) {
                        var t = e.id, o = e.value, i = e.label, n = e.customProperties, s = e.choiceId, e = e.groupId, e = e && 0 <= e ? this._store.getGroupById(e) : null;
                        t && s && (this._store.dispatch((0, c.removeItem)(t, s)), 
                        this.passedElement.triggerEvent(g.EVENTS.removeItem, {
                            id: t,
                            value: o,
                            label: i,
                            customProperties: n,
                            groupValue: e && e.value ? e.value : null
                        }));
                    }, w.prototype._addChoice = function(e) {
                        var t, o, i = e.value, n = e.label, s = e.isSelected, s = void 0 !== s && s, r = e.isDisabled, r = void 0 !== r && r, a = e.groupId, a = void 0 === a ? -1 : a, l = e.customProperties, l = void 0 === l ? {} : l, c = e.placeholder, c = void 0 !== c && c, e = e.keyCode, e = void 0 === e ? -1 : e;
                        null != i && (n = (void 0 === n ? null : n) || i, t = (t = this._store.choices) ? t.length + 1 : 1, 
                        o = "".concat(this._baseId, "-").concat(this._idNames.itemChoice, "-").concat(t), 
                        this._store.dispatch((0, u.addChoice)({
                            id: t,
                            groupId: a,
                            elementId: o,
                            value: i,
                            label: n,
                            disabled: r,
                            customProperties: l,
                            placeholder: c,
                            keyCode: e
                        })), s) && this._addItem({
                            value: i,
                            label: n,
                            choiceId: t,
                            customProperties: l,
                            placeholder: c,
                            keyCode: e
                        });
                    }, w.prototype._addGroup = function(e) {
                        var o = this, t = e.group, i = e.id, n = e.valueKey, s = void 0 === n ? "value" : n, n = e.labelKey, r = void 0 === n ? "label" : n, e = (0, 
                        f.isType)("Object", t) ? t.choices : Array.from(t.getElementsByTagName("OPTION")), a = i || Math.floor(new Date().valueOf() * Math.random()), n = t.disabled || !1;
                        e ? (this._store.dispatch((0, l.addGroup)({
                            value: t.label,
                            id: a,
                            active: !0,
                            disabled: n
                        })), e.forEach(function(e) {
                            var t = e.disabled || e.parentNode && e.parentNode.disabled;
                            o._addChoice({
                                value: e[s],
                                label: (0, f.isType)("Object", e) ? e[r] : e.innerHTML,
                                isSelected: e.selected,
                                isDisabled: t,
                                groupId: a,
                                customProperties: e.customProperties,
                                placeholder: e.placeholder
                            });
                        })) : this._store.dispatch((0, l.addGroup)({
                            value: t.label,
                            id: t.id,
                            active: !1,
                            disabled: t.disabled
                        }));
                    }, w.prototype._getTemplate = function(e) {
                        for (var t = [], o = 1; o < arguments.length; o++) t[o - 1] = arguments[o];
                        return (e = this._templates[e]).call.apply(e, m([ this, this.config ], t, !1));
                    }, w.prototype._createTemplates = function() {
                        var e = this.config.callbackOnCreateTemplates, t = {};
                        e && "function" == typeof e && (t = e.call(this, f.strToEl)), 
                        this._templates = (0, n.default)(b.default, t);
                    }, w.prototype._createElements = function() {
                        this.containerOuter = new a.Container({
                            element: this._getTemplate("containerOuter", this._direction, this._isSelectElement, this._isSelectOneElement, this.config.searchEnabled, this.passedElement.element.type, this.config.labelId),
                            classNames: this.config.classNames,
                            type: this.passedElement.element.type,
                            position: this.config.position
                        }), this.containerInner = new a.Container({
                            element: this._getTemplate("containerInner"),
                            classNames: this.config.classNames,
                            type: this.passedElement.element.type,
                            position: this.config.position
                        }), this.input = new a.Input({
                            element: this._getTemplate("input", this._placeholderValue),
                            classNames: this.config.classNames,
                            type: this.passedElement.element.type,
                            preventPaste: !this.config.paste
                        }), this.choiceList = new a.List({
                            element: this._getTemplate("choiceList", this._isSelectOneElement)
                        }), this.itemList = new a.List({
                            element: this._getTemplate("itemList", this._isSelectOneElement)
                        }), this.dropdown = new a.Dropdown({
                            element: this._getTemplate("dropdown"),
                            classNames: this.config.classNames,
                            type: this.passedElement.element.type
                        });
                    }, w.prototype._createStructure = function() {
                        this.passedElement.conceal(), this.containerInner.wrap(this.passedElement.element), 
                        this.containerOuter.wrap(this.containerInner.element), this._isSelectOneElement ? this.input.placeholder = this.config.searchPlaceholderValue || "" : this._placeholderValue && (this.input.placeholder = this._placeholderValue, 
                        this.input.setWidth()), this.containerOuter.element.appendChild(this.containerInner.element), 
                        this.containerOuter.element.appendChild(this.dropdown.element), 
                        this.containerInner.element.appendChild(this.itemList.element), 
                        this._isTextElement || this.dropdown.element.appendChild(this.choiceList.element), 
                        this._isSelectOneElement ? this.config.searchEnabled && this.dropdown.element.insertBefore(this.input.element, this.dropdown.element.firstChild) : this.containerInner.element.appendChild(this.input.element), 
                        this._isSelectElement && (this._highlightPosition = 0, this._isSearching = !1, 
                        this._startLoading(), this._presetGroups.length ? this._addPredefinedGroups(this._presetGroups) : this._addPredefinedChoices(this._presetChoices), 
                        this._stopLoading()), this._isTextElement && this._addPredefinedItems(this._presetItems);
                    }, w.prototype._addPredefinedGroups = function(e) {
                        var t = this, o = this.passedElement.placeholderOption;
                        o && o.parentNode && "SELECT" === o.parentNode.tagName && this._addChoice({
                            value: o.value,
                            label: o.innerHTML,
                            isSelected: o.selected,
                            isDisabled: o.disabled,
                            placeholder: !0
                        }), e.forEach(function(e) {
                            return t._addGroup({
                                group: e,
                                id: e.id || null
                            });
                        });
                    }, w.prototype._addPredefinedChoices = function(e) {
                        var a = this, l = (this.config.shouldSort && e.sort(this.config.sorter), 
                        e.some(function(e) {
                            return e.selected;
                        })), c = e.findIndex(function(e) {
                            return void 0 === e.disabled || !e.disabled;
                        });
                        e.forEach(function(e, t) {
                            var o, i = e.value, i = void 0 === i ? "" : i, n = e.label, s = e.customProperties, r = e.placeholder;
                            a._isSelectElement ? e.choices ? a._addGroup({
                                group: e,
                                id: e.id || null
                            }) : (t = !!(a._isSelectOneElement && !l && t === c) || e.selected, 
                            o = e.disabled, a._addChoice({
                                value: i,
                                label: n,
                                isSelected: !!t,
                                isDisabled: !!o,
                                placeholder: !!r,
                                customProperties: s
                            })) : a._addChoice({
                                value: i,
                                label: n,
                                isSelected: !!e.selected,
                                isDisabled: !!e.disabled,
                                placeholder: !!e.placeholder,
                                customProperties: s
                            });
                        });
                    }, w.prototype._addPredefinedItems = function(e) {
                        var t = this;
                        e.forEach(function(e) {
                            "object" == typeof e && e.value && t._addItem({
                                value: e.value,
                                label: e.label,
                                choiceId: e.id,
                                customProperties: e.customProperties,
                                placeholder: e.placeholder
                            }), "string" == typeof e && t._addItem({
                                value: e
                            });
                        });
                    }, w.prototype._setChoiceOrItem = function(e) {
                        var t = this;
                        ({
                            object: function() {
                                e.value && (t._isTextElement ? t._addItem({
                                    value: e.value,
                                    label: e.label,
                                    choiceId: e.id,
                                    customProperties: e.customProperties,
                                    placeholder: e.placeholder
                                }) : t._addChoice({
                                    value: e.value,
                                    label: e.label,
                                    isSelected: !0,
                                    isDisabled: !1,
                                    customProperties: e.customProperties,
                                    placeholder: e.placeholder
                                }));
                            },
                            string: function() {
                                t._isTextElement ? t._addItem({
                                    value: e
                                }) : t._addChoice({
                                    value: e,
                                    label: e,
                                    isSelected: !0,
                                    isDisabled: !1
                                });
                            }
                        })[(0, f.getType)(e).toLowerCase()]();
                    }, w.prototype._findAndSelectChoiceByValue = function(t) {
                        var o = this, e = this._store.choices.find(function(e) {
                            return o.config.valueComparer(e.value, t);
                        });
                        e && !e.selected && this._addItem({
                            value: e.value,
                            label: e.label,
                            choiceId: e.id,
                            groupId: e.groupId,
                            customProperties: e.customProperties,
                            placeholder: e.placeholder,
                            keyCode: e.keyCode
                        });
                    }, w.prototype._generatePlaceholderValue = function() {
                        if (this._isSelectElement && this.passedElement.placeholderOption) return (e = this.passedElement.placeholderOption) ? e.text : null;
                        var e = this.config, t = e.placeholder, e = e.placeholderValue, o = this.passedElement.element.dataset;
                        if (t) {
                            if (e) return e;
                            if (o.placeholder) return o.placeholder;
                        }
                        return null;
                    }, t.default = w;
                },
                613: function(e, t, o) {
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    var i = o(799), n = o(883);
                    function s(e) {
                        var t = e.element, o = e.type, i = e.classNames, e = e.position;
                        this.element = t, this.classNames = i, this.type = o, this.position = e, 
                        this.isOpen = !1, this.isFlipped = !1, this.isFocussed = !1, 
                        this.isDisabled = !1, this.isLoading = !1, this._onFocus = this._onFocus.bind(this), 
                        this._onBlur = this._onBlur.bind(this);
                    }
                    s.prototype.addEventListeners = function() {
                        this.element.addEventListener("focus", this._onFocus), this.element.addEventListener("blur", this._onBlur);
                    }, s.prototype.removeEventListeners = function() {
                        this.element.removeEventListener("focus", this._onFocus), 
                        this.element.removeEventListener("blur", this._onBlur);
                    }, s.prototype.shouldFlip = function(e) {
                        var t;
                        return "number" == typeof e && (t = !1, "auto" === this.position ? t = !window.matchMedia("(min-height: ".concat(e + 1, "px)")).matches : "top" === this.position && (t = !0), 
                        t);
                    }, s.prototype.setActiveDescendant = function(e) {
                        this.element.setAttribute("aria-activedescendant", e);
                    }, s.prototype.removeActiveDescendant = function() {
                        this.element.removeAttribute("aria-activedescendant");
                    }, s.prototype.open = function(e) {
                        this.element.classList.add(this.classNames.openState), this.element.setAttribute("aria-expanded", "true"), 
                        this.isOpen = !0, this.shouldFlip(e) && (this.element.classList.add(this.classNames.flippedState), 
                        this.isFlipped = !0);
                    }, s.prototype.close = function() {
                        this.element.classList.remove(this.classNames.openState), 
                        this.element.setAttribute("aria-expanded", "false"), this.removeActiveDescendant(), 
                        this.isOpen = !1, this.isFlipped && (this.element.classList.remove(this.classNames.flippedState), 
                        this.isFlipped = !1);
                    }, s.prototype.focus = function() {
                        this.isFocussed || this.element.focus();
                    }, s.prototype.addFocusState = function() {
                        this.element.classList.add(this.classNames.focusState);
                    }, s.prototype.removeFocusState = function() {
                        this.element.classList.remove(this.classNames.focusState);
                    }, s.prototype.enable = function() {
                        this.element.classList.remove(this.classNames.disabledState), 
                        this.element.removeAttribute("aria-disabled"), this.type === n.SELECT_ONE_TYPE && this.element.setAttribute("tabindex", "0"), 
                        this.isDisabled = !1;
                    }, s.prototype.disable = function() {
                        this.element.classList.add(this.classNames.disabledState), 
                        this.element.setAttribute("aria-disabled", "true"), this.type === n.SELECT_ONE_TYPE && this.element.setAttribute("tabindex", "-1"), 
                        this.isDisabled = !0;
                    }, s.prototype.wrap = function(e) {
                        (0, i.wrap)(e, this.element);
                    }, s.prototype.unwrap = function(e) {
                        this.element.parentNode && (this.element.parentNode.insertBefore(e, this.element), 
                        this.element.parentNode.removeChild(this.element));
                    }, s.prototype.addLoadingState = function() {
                        this.element.classList.add(this.classNames.loadingState), 
                        this.element.setAttribute("aria-busy", "true"), this.isLoading = !0;
                    }, s.prototype.removeLoadingState = function() {
                        this.element.classList.remove(this.classNames.loadingState), 
                        this.element.removeAttribute("aria-busy"), this.isLoading = !1;
                    }, s.prototype._onFocus = function() {
                        this.isFocussed = !0;
                    }, s.prototype._onBlur = function() {
                        this.isFocussed = !1;
                    }, t.default = s;
                },
                217: function(e, t) {
                    function o(e) {
                        var t = e.element, o = e.type, e = e.classNames;
                        this.element = t, this.classNames = e, this.type = o, this.isActive = !1;
                    }
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    }), Object.defineProperty(o.prototype, "distanceFromTopWindow", {
                        get: function() {
                            return this.element.getBoundingClientRect().bottom;
                        },
                        enumerable: !1,
                        configurable: !0
                    }), o.prototype.getChild = function(e) {
                        return this.element.querySelector(e);
                    }, o.prototype.show = function() {
                        return this.element.classList.add(this.classNames.activeState), 
                        this.element.setAttribute("aria-expanded", "true"), this.isActive = !0, 
                        this;
                    }, o.prototype.hide = function() {
                        return this.element.classList.remove(this.classNames.activeState), 
                        this.element.setAttribute("aria-expanded", "false"), this.isActive = !1, 
                        this;
                    }, t.default = o;
                },
                520: function(e, t, o) {
                    var i = this && this.__importDefault || function(e) {
                        return e && e.__esModule ? e : {
                            default: e
                        };
                    }, n = (Object.defineProperty(t, "__esModule", {
                        value: !0
                    }), t.WrappedSelect = t.WrappedInput = t.List = t.Input = t.Container = t.Dropdown = void 0, 
                    i(o(217))), n = (t.Dropdown = n.default, i(o(613))), n = (t.Container = n.default, 
                    i(o(11))), n = (t.Input = n.default, i(o(624))), n = (t.List = n.default, 
                    i(o(541))), n = (t.WrappedInput = n.default, i(o(982)));
                    t.WrappedSelect = n.default;
                },
                11: function(e, t, o) {
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    var i = o(799), n = o(883);
                    function s(e) {
                        var t = e.element, o = e.type, i = e.classNames, e = e.preventPaste;
                        this.element = t, this.type = o, this.classNames = i, this.preventPaste = e, 
                        this.isFocussed = this.element.isEqualNode(document.activeElement), 
                        this.isDisabled = t.disabled, this._onPaste = this._onPaste.bind(this), 
                        this._onInput = this._onInput.bind(this), this._onFocus = this._onFocus.bind(this), 
                        this._onBlur = this._onBlur.bind(this);
                    }
                    Object.defineProperty(s.prototype, "placeholder", {
                        set: function(e) {
                            this.element.placeholder = e;
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(s.prototype, "value", {
                        get: function() {
                            return (0, i.sanitise)(this.element.value);
                        },
                        set: function(e) {
                            this.element.value = e;
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(s.prototype, "rawValue", {
                        get: function() {
                            return this.element.value;
                        },
                        enumerable: !1,
                        configurable: !0
                    }), s.prototype.addEventListeners = function() {
                        this.element.addEventListener("paste", this._onPaste), this.element.addEventListener("input", this._onInput, {
                            passive: !0
                        }), this.element.addEventListener("focus", this._onFocus, {
                            passive: !0
                        }), this.element.addEventListener("blur", this._onBlur, {
                            passive: !0
                        });
                    }, s.prototype.removeEventListeners = function() {
                        this.element.removeEventListener("input", this._onInput), 
                        this.element.removeEventListener("paste", this._onPaste), 
                        this.element.removeEventListener("focus", this._onFocus), 
                        this.element.removeEventListener("blur", this._onBlur);
                    }, s.prototype.enable = function() {
                        this.element.removeAttribute("disabled"), this.isDisabled = !1;
                    }, s.prototype.disable = function() {
                        this.element.setAttribute("disabled", ""), this.isDisabled = !0;
                    }, s.prototype.focus = function() {
                        this.isFocussed || this.element.focus();
                    }, s.prototype.blur = function() {
                        this.isFocussed && this.element.blur();
                    }, s.prototype.clear = function(e) {
                        return void 0 === e && (e = !0), this.element.value && (this.element.value = ""), 
                        e && this.setWidth(), this;
                    }, s.prototype.setWidth = function() {
                        var e = this.element, t = e.style, o = e.value, e = e.placeholder;
                        t.minWidth = "".concat(e.length + 1, "ch"), t.width = "".concat(o.length + 1, "ch");
                    }, s.prototype.setActiveDescendant = function(e) {
                        this.element.setAttribute("aria-activedescendant", e);
                    }, s.prototype.removeActiveDescendant = function() {
                        this.element.removeAttribute("aria-activedescendant");
                    }, s.prototype._onInput = function() {
                        this.type !== n.SELECT_ONE_TYPE && this.setWidth();
                    }, s.prototype._onPaste = function(e) {
                        this.preventPaste && e.preventDefault();
                    }, s.prototype._onFocus = function() {
                        this.isFocussed = !0;
                    }, s.prototype._onBlur = function() {
                        this.isFocussed = !1;
                    }, t.default = s;
                },
                624: function(e, t, o) {
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    var r = o(883);
                    function i(e) {
                        e = e.element;
                        this.element = e, this.scrollPos = this.element.scrollTop, 
                        this.height = this.element.offsetHeight;
                    }
                    i.prototype.clear = function() {
                        this.element.innerHTML = "";
                    }, i.prototype.append = function(e) {
                        this.element.appendChild(e);
                    }, i.prototype.getChild = function(e) {
                        return this.element.querySelector(e);
                    }, i.prototype.hasChildren = function() {
                        return this.element.hasChildNodes();
                    }, i.prototype.scrollToTop = function() {
                        this.element.scrollTop = 0;
                    }, i.prototype.scrollToChildElement = function(e, t) {
                        var o, i, n, s = this;
                        e && (o = this.element.offsetHeight, o = this.element.scrollTop + o, 
                        i = e.offsetHeight, i = e.offsetTop + i, n = 0 < t ? this.element.scrollTop + i - o : e.offsetTop, 
                        requestAnimationFrame(function() {
                            s._animateScroll(n, t);
                        }));
                    }, i.prototype._scrollDown = function(e, t, o) {
                        o = (o - e) / t;
                        this.element.scrollTop = e + (1 < o ? o : 1);
                    }, i.prototype._scrollUp = function(e, t, o) {
                        o = (e - o) / t;
                        this.element.scrollTop = e - (1 < o ? o : 1);
                    }, i.prototype._animateScroll = function(e, t) {
                        var o = this, i = r.SCROLLING_SPEED, n = this.element.scrollTop, s = !1;
                        0 < t ? (this._scrollDown(n, i, e), n < e && (s = !0)) : (this._scrollUp(n, i, e), 
                        e < n && (s = !0)), s && requestAnimationFrame(function() {
                            o._animateScroll(e, t);
                        });
                    }, t.default = i;
                },
                730: function(e, t, o) {
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    var i = o(799);
                    function n(e) {
                        var t = e.element, e = e.classNames;
                        if (this.element = t, this.classNames = e, !(t instanceof HTMLInputElement || t instanceof HTMLSelectElement)) throw new TypeError("Invalid element passed");
                        this.isDisabled = !1;
                    }
                    Object.defineProperty(n.prototype, "isActive", {
                        get: function() {
                            return "active" === this.element.dataset.choice;
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(n.prototype, "dir", {
                        get: function() {
                            return this.element.dir;
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(n.prototype, "value", {
                        get: function() {
                            return this.element.value;
                        },
                        set: function(e) {
                            this.element.value = e;
                        },
                        enumerable: !1,
                        configurable: !0
                    }), n.prototype.conceal = function() {
                        this.element.classList.add(this.classNames.input), this.element.hidden = !0, 
                        this.element.tabIndex = -1;
                        var e = this.element.getAttribute("style");
                        e && this.element.setAttribute("data-choice-orig-style", e), 
                        this.element.setAttribute("data-choice", "active");
                    }, n.prototype.reveal = function() {
                        this.element.classList.remove(this.classNames.input), this.element.hidden = !1, 
                        this.element.removeAttribute("tabindex");
                        var e = this.element.getAttribute("data-choice-orig-style");
                        e ? (this.element.removeAttribute("data-choice-orig-style"), 
                        this.element.setAttribute("style", e)) : this.element.removeAttribute("style"), 
                        this.element.removeAttribute("data-choice"), this.element.value = this.element.value;
                    }, n.prototype.enable = function() {
                        this.element.removeAttribute("disabled"), this.element.disabled = !1, 
                        this.isDisabled = !1;
                    }, n.prototype.disable = function() {
                        this.element.setAttribute("disabled", ""), this.element.disabled = !0, 
                        this.isDisabled = !0;
                    }, n.prototype.triggerEvent = function(e, t) {
                        (0, i.dispatchEvent)(this.element, e, t);
                    }, t.default = n;
                },
                541: function(e, t, o) {
                    var i, n, s = this && this.__extends || (i = function(e, t) {
                        return (i = Object.setPrototypeOf || ({
                            __proto__: []
                        } instanceof Array ? function(e, t) {
                            e.__proto__ = t;
                        } : function(e, t) {
                            for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
                        }))(e, t);
                    }, function(e, t) {
                        if ("function" != typeof t && null !== t) throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
                        function o() {
                            this.constructor = e;
                        }
                        i(e, t), e.prototype = null === t ? Object.create(t) : (o.prototype = t.prototype, 
                        new o());
                    }), r = this && this.__importDefault || function(e) {
                        return e && e.__esModule ? e : {
                            default: e
                        };
                    }, r = (Object.defineProperty(t, "__esModule", {
                        value: !0
                    }), r(o(730))), o = (n = r.default, s(a, n), Object.defineProperty(a.prototype, "value", {
                        get: function() {
                            return this.element.value;
                        },
                        set: function(e) {
                            this.element.setAttribute("value", e), this.element.value = e;
                        },
                        enumerable: !1,
                        configurable: !0
                    }), a);
                    function a(e) {
                        var t = e.element, o = e.classNames, e = e.delimiter, t = n.call(this, {
                            element: t,
                            classNames: o
                        }) || this;
                        return t.delimiter = e, t;
                    }
                    t.default = o;
                },
                982: function(e, t, o) {
                    var i, n, s = this && this.__extends || (i = function(e, t) {
                        return (i = Object.setPrototypeOf || ({
                            __proto__: []
                        } instanceof Array ? function(e, t) {
                            e.__proto__ = t;
                        } : function(e, t) {
                            for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
                        }))(e, t);
                    }, function(e, t) {
                        if ("function" != typeof t && null !== t) throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
                        function o() {
                            this.constructor = e;
                        }
                        i(e, t), e.prototype = null === t ? Object.create(t) : (o.prototype = t.prototype, 
                        new o());
                    }), r = this && this.__importDefault || function(e) {
                        return e && e.__esModule ? e : {
                            default: e
                        };
                    }, r = (Object.defineProperty(t, "__esModule", {
                        value: !0
                    }), r(o(730))), o = (n = r.default, s(a, n), Object.defineProperty(a.prototype, "placeholderOption", {
                        get: function() {
                            return this.element.querySelector('option[value=""]') || this.element.querySelector("option[placeholder]");
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(a.prototype, "optionGroups", {
                        get: function() {
                            return Array.from(this.element.getElementsByTagName("OPTGROUP"));
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(a.prototype, "options", {
                        get: function() {
                            return Array.from(this.element.options);
                        },
                        set: function(e) {
                            var t = this, o = document.createDocumentFragment();
                            e.forEach(function(e) {
                                e = t.template(e), o.appendChild(e);
                            }), this.appendDocFragment(o);
                        },
                        enumerable: !1,
                        configurable: !0
                    }), a.prototype.appendDocFragment = function(e) {
                        this.element.innerHTML = "", this.element.appendChild(e);
                    }, a);
                    function a(e) {
                        var t = e.element, o = e.classNames, e = e.template, t = n.call(this, {
                            element: t,
                            classNames: o
                        }) || this;
                        return t.template = e, t;
                    }
                    t.default = o;
                },
                883: function(e, t) {
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    }), t.SCROLLING_SPEED = t.SELECT_MULTIPLE_TYPE = t.SELECT_ONE_TYPE = t.TEXT_TYPE = t.KEY_CODES = t.ACTION_TYPES = t.EVENTS = void 0, 
                    t.EVENTS = {
                        showDropdown: "showDropdown",
                        hideDropdown: "hideDropdown",
                        change: "change",
                        choice: "choice",
                        search: "search",
                        addItem: "addItem",
                        removeItem: "removeItem",
                        highlightItem: "highlightItem",
                        highlightChoice: "highlightChoice",
                        unhighlightItem: "unhighlightItem"
                    }, t.ACTION_TYPES = {
                        ADD_CHOICE: "ADD_CHOICE",
                        FILTER_CHOICES: "FILTER_CHOICES",
                        ACTIVATE_CHOICES: "ACTIVATE_CHOICES",
                        CLEAR_CHOICES: "CLEAR_CHOICES",
                        ADD_GROUP: "ADD_GROUP",
                        ADD_ITEM: "ADD_ITEM",
                        REMOVE_ITEM: "REMOVE_ITEM",
                        HIGHLIGHT_ITEM: "HIGHLIGHT_ITEM",
                        CLEAR_ALL: "CLEAR_ALL",
                        RESET_TO: "RESET_TO",
                        SET_IS_LOADING: "SET_IS_LOADING"
                    }, t.KEY_CODES = {
                        BACK_KEY: 46,
                        DELETE_KEY: 8,
                        ENTER_KEY: 13,
                        A_KEY: 65,
                        ESC_KEY: 27,
                        UP_KEY: 38,
                        DOWN_KEY: 40,
                        PAGE_UP_KEY: 33,
                        PAGE_DOWN_KEY: 34
                    }, t.TEXT_TYPE = "text", t.SELECT_ONE_TYPE = "select-one", t.SELECT_MULTIPLE_TYPE = "select-multiple", 
                    t.SCROLLING_SPEED = 4;
                },
                789: function(e, t, o) {
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    }), t.DEFAULT_CONFIG = t.DEFAULT_CLASSNAMES = void 0;
                    var i = o(799);
                    t.DEFAULT_CLASSNAMES = {
                        containerOuter: "choices",
                        containerInner: "choices__inner",
                        input: "choices__input",
                        inputCloned: "choices__input--cloned",
                        list: "choices__list",
                        listItems: "choices__list--multiple",
                        listSingle: "choices__list--single",
                        listDropdown: "choices__list--dropdown",
                        item: "choices__item",
                        itemSelectable: "choices__item--selectable",
                        itemDisabled: "choices__item--disabled",
                        itemChoice: "choices__item--choice",
                        placeholder: "choices__placeholder",
                        group: "choices__group",
                        groupHeading: "choices__heading",
                        button: "choices__button",
                        activeState: "is-active",
                        focusState: "is-focused",
                        openState: "is-open",
                        disabledState: "is-disabled",
                        highlightedState: "is-highlighted",
                        selectedState: "is-selected",
                        flippedState: "is-flipped",
                        loadingState: "is-loading",
                        noResults: "has-no-results",
                        noChoices: "has-no-choices"
                    }, t.DEFAULT_CONFIG = {
                        items: [],
                        choices: [],
                        silent: !1,
                        renderChoiceLimit: -1,
                        maxItemCount: -1,
                        addItems: !0,
                        addItemFilter: null,
                        removeItems: !0,
                        removeItemButton: !1,
                        editItems: !1,
                        allowHTML: !0,
                        duplicateItemsAllowed: !0,
                        delimiter: ",",
                        paste: !0,
                        searchEnabled: !0,
                        searchChoices: !0,
                        searchFloor: 1,
                        searchResultLimit: 4,
                        searchFields: [ "label", "value" ],
                        position: "auto",
                        resetScrollPosition: !0,
                        shouldSort: !0,
                        shouldSortItems: !1,
                        sorter: i.sortByAlpha,
                        placeholder: !0,
                        placeholderValue: null,
                        searchPlaceholderValue: null,
                        prependValue: null,
                        appendValue: null,
                        renderSelectedChoices: "auto",
                        loadingText: "Loading...",
                        noResultsText: "No results found",
                        noChoicesText: "No choices to choose from",
                        itemSelectText: "Press to select",
                        uniqueItemText: "Only unique values can be added",
                        customAddItemText: "Only values matching specific conditions can be added",
                        addItemText: function(e) {
                            return 'Press Enter to add <b>"'.concat((0, i.sanitise)(e), '"</b>');
                        },
                        maxItemText: function(e) {
                            return "Only ".concat(e, " values can be added");
                        },
                        valueComparer: function(e, t) {
                            return e === t;
                        },
                        fuseOptions: {
                            includeScore: !0
                        },
                        labelId: "",
                        callbackOnInit: null,
                        callbackOnCreateTemplates: null,
                        classNames: t.DEFAULT_CLASSNAMES
                    };
                },
                18: function(e, t) {
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                },
                978: function(e, t) {
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                },
                948: function(e, t) {
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                },
                359: function(e, t) {
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                },
                285: function(e, t) {
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                },
                533: function(e, t) {
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                },
                187: function(e, t, o) {
                    var i = this && this.__createBinding || (Object.create ? function(e, t, o, i) {
                        void 0 === i && (i = o);
                        var n = Object.getOwnPropertyDescriptor(t, o);
                        n && ("get" in n ? t.__esModule : !n.writable && !n.configurable) || (n = {
                            enumerable: !0,
                            get: function() {
                                return t[o];
                            }
                        }), Object.defineProperty(e, i, n);
                    } : function(e, t, o, i) {
                        e[i = void 0 === i ? o : i] = t[o];
                    }), n = this && this.__exportStar || function(e, t) {
                        for (var o in e) "default" === o || Object.prototype.hasOwnProperty.call(t, o) || i(t, e, o);
                    };
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    }), n(o(18), t), n(o(978), t), n(o(948), t), n(o(359), t), n(o(285), t), 
                    n(o(533), t), n(o(287), t), n(o(132), t), n(o(837), t), n(o(598), t), 
                    n(o(369), t), n(o(37), t), n(o(47), t), n(o(923), t), n(o(876), t);
                },
                287: function(e, t) {
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                },
                132: function(e, t) {
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                },
                837: function(e, t) {
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                },
                598: function(e, t) {
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                },
                37: function(e, t) {
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                },
                369: function(e, t) {
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                },
                47: function(e, t) {
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                },
                923: function(e, t) {
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                },
                876: function(e, t) {
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                },
                799: function(e, o) {
                    Object.defineProperty(o, "__esModule", {
                        value: !0
                    }), o.parseCustomProperties = o.diff = o.cloneObject = o.existsInArray = o.dispatchEvent = o.sortByScore = o.sortByAlpha = o.strToEl = o.sanitise = o.isScrolledIntoView = o.getAdjacentEl = o.wrap = o.isType = o.getType = o.generateId = o.generateChars = o.getRandomNumber = void 0;
                    var t;
                    o.getRandomNumber = function(e, t) {
                        return Math.floor(Math.random() * (t - e) + e);
                    }, o.generateChars = function(e) {
                        return Array.from({
                            length: e
                        }, function() {
                            return (0, o.getRandomNumber)(0, 36).toString(36);
                        }).join("");
                    }, o.generateId = function(e, t) {
                        e = (e = e.id || e.name && "".concat(e.name, "-").concat((0, 
                        o.generateChars)(2)) || (0, o.generateChars)(4)).replace(/(:|\.|\[|\]|,)/g, "");
                        return e = "".concat(t, "-").concat(e);
                    }, o.getType = function(e) {
                        return Object.prototype.toString.call(e).slice(8, -1);
                    }, o.isType = function(e, t) {
                        return null != t && (0, o.getType)(t) === e;
                    }, o.wrap = function(e, t) {
                        return void 0 === t && (t = document.createElement("div")), 
                        e.parentNode && (e.nextSibling ? e.parentNode.insertBefore(t, e.nextSibling) : e.parentNode.appendChild(t)), 
                        t.appendChild(e);
                    }, o.getAdjacentEl = function(e, t, o) {
                        for (var i = "".concat(0 < (o = void 0 === o ? 1 : o) ? "next" : "previous", "ElementSibling"), n = e[i]; n; ) {
                            if (n.matches(t)) return n;
                            n = n[i];
                        }
                        return n;
                    }, o.isScrolledIntoView = function(e, t, o) {
                        return !!e && (0 < (o = void 0 === o ? 1 : o) ? t.scrollTop + t.offsetHeight >= e.offsetTop + e.offsetHeight : e.offsetTop >= t.scrollTop);
                    }, o.sanitise = function(e) {
                        return "string" != typeof e ? e : e.replace(/&/g, "&amp;").replace(/>/g, "&gt;").replace(/</g, "&lt;").replace(/"/g, "&quot;");
                    }, o.strToEl = (t = document.createElement("div"), function(e) {
                        for (e = e.trim(), t.innerHTML = e, e = t.children[0]; t.firstChild; ) t.removeChild(t.firstChild);
                        return e;
                    }), o.sortByAlpha = function(e, t) {
                        var o = e.value, e = e.label, o = void 0 === e ? o : e, e = t.value, t = t.label;
                        return o.localeCompare(void 0 === t ? e : t, [], {
                            sensitivity: "base",
                            ignorePunctuation: !0,
                            numeric: !0
                        });
                    }, o.sortByScore = function(e, t) {
                        e = e.score, t = t.score;
                        return (void 0 === e ? 0 : e) - (void 0 === t ? 0 : t);
                    }, o.dispatchEvent = function(e, t, o) {
                        void 0 === o && (o = null);
                        t = new CustomEvent(t, {
                            detail: o,
                            bubbles: !0,
                            cancelable: !0
                        });
                        return e.dispatchEvent(t);
                    }, o.existsInArray = function(e, t, o) {
                        return void 0 === o && (o = "value"), e.some(function(e) {
                            return "string" == typeof t ? e[o] === t.trim() : e[o] === t;
                        });
                    }, o.cloneObject = function(e) {
                        return JSON.parse(JSON.stringify(e));
                    }, o.diff = function(e, t) {
                        var e = Object.keys(e).sort(), o = Object.keys(t).sort();
                        return e.filter(function(e) {
                            return o.indexOf(e) < 0;
                        });
                    };
                    o.parseCustomProperties = function(t) {
                        if (void 0 !== t) try {
                            return JSON.parse(t);
                        } catch (e) {
                            return t;
                        }
                        return {};
                    };
                },
                273: function(e, a) {
                    var l = this && this.__spreadArray || function(e, t, o) {
                        if (o || 2 === arguments.length) for (var i, n = 0, s = t.length; n < s; n++) !i && n in t || ((i = i || Array.prototype.slice.call(t, 0, n))[n] = t[n]);
                        return e.concat(i || Array.prototype.slice.call(t));
                    };
                    Object.defineProperty(a, "__esModule", {
                        value: !0
                    }), a.defaultState = void 0, a.defaultState = [], a.default = function(e, t) {
                        switch (void 0 === e && (e = a.defaultState), (t = void 0 === t ? {} : t).type) {
                          case "ADD_CHOICE":
                            var o = t, o = {
                                id: o.id,
                                elementId: o.elementId,
                                groupId: o.groupId,
                                value: o.value,
                                label: o.label || o.value,
                                disabled: o.disabled || !1,
                                selected: !1,
                                active: !0,
                                score: 9999,
                                customProperties: o.customProperties,
                                placeholder: o.placeholder || !1
                            };
                            return l(l([], e, !0), [ o ], !1);

                          case "ADD_ITEM":
                            var i = t;
                            return -1 < i.choiceId ? e.map(function(e) {
                                return e.id === parseInt("".concat(i.choiceId), 10) && (e.selected = !0), 
                                e;
                            }) : e;

                          case "REMOVE_ITEM":
                            var n = t;
                            return n.choiceId && -1 < n.choiceId ? e.map(function(e) {
                                return e.id === parseInt("".concat(n.choiceId), 10) && (e.selected = !1), 
                                e;
                            }) : e;

                          case "FILTER_CHOICES":
                            var s = t;
                            return e.map(function(e) {
                                var o = e;
                                return o.active = s.results.some(function(e) {
                                    var t = e.item, e = e.score;
                                    return t.id === o.id && (o.score = e, !0);
                                }), o;
                            });

                          case "ACTIVATE_CHOICES":
                            var r = t;
                            return e.map(function(e) {
                                return e.active = r.active, e;
                            });

                          case "CLEAR_CHOICES":
                            return a.defaultState;

                          default:
                            return e;
                        }
                    };
                },
                871: function(e, i) {
                    var n = this && this.__spreadArray || function(e, t, o) {
                        if (o || 2 === arguments.length) for (var i, n = 0, s = t.length; n < s; n++) !i && n in t || ((i = i || Array.prototype.slice.call(t, 0, n))[n] = t[n]);
                        return e.concat(i || Array.prototype.slice.call(t));
                    };
                    Object.defineProperty(i, "__esModule", {
                        value: !0
                    }), i.defaultState = void 0, i.defaultState = [], i.default = function(e, t) {
                        switch (void 0 === e && (e = i.defaultState), (t = void 0 === t ? {} : t).type) {
                          case "ADD_GROUP":
                            var o = t;
                            return n(n([], e, !0), [ {
                                id: o.id,
                                value: o.value,
                                active: o.active,
                                disabled: o.disabled
                            } ], !1);

                          case "CLEAR_CHOICES":
                            return [];

                          default:
                            return e;
                        }
                    };
                },
                655: function(e, o, t) {
                    var i = this && this.__importDefault || function(e) {
                        return e && e.__esModule ? e : {
                            default: e
                        };
                    }, n = (Object.defineProperty(o, "__esModule", {
                        value: !0
                    }), o.defaultState = void 0, t(791)), s = i(t(52)), r = i(t(871)), a = i(t(273)), i = i(t(502)), l = t(799), c = (o.defaultState = {
                        groups: [],
                        items: [],
                        choices: [],
                        loading: !1
                    }, (0, n.combineReducers)({
                        items: s.default,
                        groups: r.default,
                        choices: a.default,
                        loading: i.default
                    }));
                    o.default = function(e, t) {
                        if ("CLEAR_ALL" === t.type) e = o.defaultState; else if ("RESET_TO" === t.type) return (0, 
                        l.cloneObject)(t.state);
                        return c(e, t);
                    };
                },
                52: function(e, n) {
                    var s = this && this.__spreadArray || function(e, t, o) {
                        if (o || 2 === arguments.length) for (var i, n = 0, s = t.length; n < s; n++) !i && n in t || ((i = i || Array.prototype.slice.call(t, 0, n))[n] = t[n]);
                        return e.concat(i || Array.prototype.slice.call(t));
                    };
                    Object.defineProperty(n, "__esModule", {
                        value: !0
                    }), n.defaultState = void 0, n.defaultState = [], n.default = function(e, t) {
                        switch (void 0 === e && (e = n.defaultState), (t = void 0 === t ? {} : t).type) {
                          case "ADD_ITEM":
                            var o = t;
                            return s(s([], e, !0), [ {
                                id: o.id,
                                choiceId: o.choiceId,
                                groupId: o.groupId,
                                value: o.value,
                                label: o.label,
                                active: !0,
                                highlighted: !1,
                                customProperties: o.customProperties,
                                placeholder: o.placeholder || !1,
                                keyCode: null
                            } ], !1).map(function(e) {
                                return e.highlighted = !1, e;
                            });

                          case "REMOVE_ITEM":
                            return e.map(function(e) {
                                return e.id === t.id && (e.active = !1), e;
                            });

                          case "HIGHLIGHT_ITEM":
                            var i = t;
                            return e.map(function(e) {
                                return e.id === i.id && (e.highlighted = i.highlighted), 
                                e;
                            });

                          default:
                            return e;
                        }
                    };
                },
                502: function(e, o) {
                    Object.defineProperty(o, "__esModule", {
                        value: !0
                    }), o.defaultState = void 0, o.defaultState = !1;
                    o.default = function(e, t) {
                        return void 0 === e && (e = o.defaultState), "SET_IS_LOADING" !== (t = void 0 === t ? {} : t).type ? e : t.isLoading;
                    };
                },
                744: function(e, t, o) {
                    var i = this && this.__spreadArray || function(e, t, o) {
                        if (o || 2 === arguments.length) for (var i, n = 0, s = t.length; n < s; n++) !i && n in t || ((i = i || Array.prototype.slice.call(t, 0, n))[n] = t[n]);
                        return e.concat(i || Array.prototype.slice.call(t));
                    }, n = this && this.__importDefault || function(e) {
                        return e && e.__esModule ? e : {
                            default: e
                        };
                    }, s = (Object.defineProperty(t, "__esModule", {
                        value: !0
                    }), o(791)), r = n(o(655));
                    function a() {
                        this._store = (0, s.createStore)(r.default, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());
                    }
                    a.prototype.subscribe = function(e) {
                        this._store.subscribe(e);
                    }, a.prototype.dispatch = function(e) {
                        this._store.dispatch(e);
                    }, Object.defineProperty(a.prototype, "state", {
                        get: function() {
                            return this._store.getState();
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(a.prototype, "items", {
                        get: function() {
                            return this.state.items;
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(a.prototype, "activeItems", {
                        get: function() {
                            return this.items.filter(function(e) {
                                return !0 === e.active;
                            });
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(a.prototype, "highlightedActiveItems", {
                        get: function() {
                            return this.items.filter(function(e) {
                                return e.active && e.highlighted;
                            });
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(a.prototype, "choices", {
                        get: function() {
                            return this.state.choices;
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(a.prototype, "activeChoices", {
                        get: function() {
                            return this.choices.filter(function(e) {
                                return !0 === e.active;
                            });
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(a.prototype, "selectableChoices", {
                        get: function() {
                            return this.choices.filter(function(e) {
                                return !0 !== e.disabled;
                            });
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(a.prototype, "searchableChoices", {
                        get: function() {
                            return this.selectableChoices.filter(function(e) {
                                return !0 !== e.placeholder;
                            });
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(a.prototype, "placeholderChoice", {
                        get: function() {
                            return i([], this.choices, !0).reverse().find(function(e) {
                                return !0 === e.placeholder;
                            });
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(a.prototype, "groups", {
                        get: function() {
                            return this.state.groups;
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(a.prototype, "activeGroups", {
                        get: function() {
                            var e = this.groups, o = this.choices;
                            return e.filter(function(e) {
                                var e = !0 === e.active && !1 === e.disabled, t = o.some(function(e) {
                                    return !0 === e.active && !1 === e.disabled;
                                });
                                return e && t;
                            }, []);
                        },
                        enumerable: !1,
                        configurable: !0
                    }), a.prototype.isLoading = function() {
                        return this.state.loading;
                    }, a.prototype.getChoiceById = function(t) {
                        return this.activeChoices.find(function(e) {
                            return e.id === parseInt(t, 10);
                        });
                    }, a.prototype.getGroupById = function(t) {
                        return this.groups.find(function(e) {
                            return e.id === t;
                        });
                    }, t.default = a;
                },
                686: function(e, t) {
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    }), t.default = {
                        containerOuter: function(e, t, o, i, n, s, r) {
                            e = e.classNames.containerOuter, e = Object.assign(document.createElement("div"), {
                                className: e
                            });
                            return e.dataset.type = s, t && (e.dir = t), i && (e.tabIndex = 0), 
                            o && (e.setAttribute("role", n ? "combobox" : "listbox"), 
                            n) && e.setAttribute("aria-autocomplete", "list"), e.setAttribute("aria-haspopup", "true"), 
                            e.setAttribute("aria-expanded", "false"), r && e.setAttribute("aria-labelledby", r), 
                            e;
                        },
                        containerInner: function(e) {
                            e = e.classNames.containerInner;
                            return Object.assign(document.createElement("div"), {
                                className: e
                            });
                        },
                        itemList: function(e, t) {
                            var e = e.classNames, o = e.list, i = e.listSingle, e = e.listItems;
                            return Object.assign(document.createElement("div"), {
                                className: "".concat(o, " ").concat(t ? i : e)
                            });
                        },
                        placeholder: function(e, t) {
                            var o = e.allowHTML, e = e.classNames.placeholder;
                            return Object.assign(document.createElement("div"), ((e = {
                                className: e
                            })[o ? "innerHTML" : "innerText"] = t, e));
                        },
                        item: function(e, t, o) {
                            var i = e.allowHTML, e = e.classNames, n = e.item, s = e.button, r = e.highlightedState, a = e.itemSelectable, e = e.placeholder, l = t.id, c = t.value, u = t.label, d = t.customProperties, h = t.active, p = t.disabled, m = t.highlighted, t = t.placeholder, u = Object.assign(document.createElement("div"), ((n = {
                                className: n
                            })[i ? "innerHTML" : "innerText"] = u, n));
                            return Object.assign(u.dataset, {
                                item: "",
                                id: l,
                                value: c,
                                customProperties: d
                            }), h && u.setAttribute("aria-selected", "true"), p && u.setAttribute("aria-disabled", "true"), 
                            t && u.classList.add(e), u.classList.add(m ? r : a), 
                            o && (p && u.classList.remove(a), u.dataset.deletable = "", 
                            n = "Remove item", (d = Object.assign(document.createElement("button"), ((l = {
                                type: "button",
                                className: s
                            })[i ? "innerHTML" : "innerText"] = n, l))).setAttribute("aria-label", "".concat(n, ": '").concat(c, "'")), 
                            d.dataset.button = "", u.appendChild(d)), u;
                        },
                        choiceList: function(e, t) {
                            e = e.classNames.list, e = Object.assign(document.createElement("div"), {
                                className: e
                            });
                            return t || e.setAttribute("aria-multiselectable", "true"), 
                            e.setAttribute("role", "listbox"), e;
                        },
                        choiceGroup: function(e, t) {
                            var o = e.allowHTML, e = e.classNames, i = e.group, n = e.groupHeading, e = e.itemDisabled, s = t.id, r = t.value, t = t.disabled, i = Object.assign(document.createElement("div"), {
                                className: "".concat(i, " ").concat(t ? e : "")
                            });
                            return i.setAttribute("role", "group"), Object.assign(i.dataset, {
                                group: "",
                                id: s,
                                value: r
                            }), t && i.setAttribute("aria-disabled", "true"), i.appendChild(Object.assign(document.createElement("div"), ((e = {
                                className: n
                            })[o ? "innerHTML" : "innerText"] = r, e))), i;
                        },
                        choice: function(e, t, o) {
                            var i = e.allowHTML, e = e.classNames, n = e.item, s = e.itemChoice, r = e.itemSelectable, a = e.selectedState, l = e.itemDisabled, e = e.placeholder, c = t.id, u = t.value, d = t.label, h = t.groupId, p = t.elementId, m = t.disabled, f = t.selected, t = t.placeholder, i = Object.assign(document.createElement("div"), ((p = {
                                id: p
                            })[i ? "innerHTML" : "innerText"] = d, p.className = "".concat(n, " ").concat(s), 
                            p));
                            return f && i.classList.add(a), t && i.classList.add(e), 
                            i.setAttribute("role", h && 0 < h ? "treeitem" : "option"), 
                            Object.assign(i.dataset, {
                                choice: "",
                                id: c,
                                value: u,
                                selectText: o
                            }), m ? (i.classList.add(l), i.dataset.choiceDisabled = "", 
                            i.setAttribute("aria-disabled", "true")) : (i.classList.add(r), 
                            i.dataset.choiceSelectable = ""), i;
                        },
                        input: function(e, t) {
                            var e = e.classNames, o = e.input, e = e.inputCloned, o = Object.assign(document.createElement("input"), {
                                type: "search",
                                name: "search_terms",
                                className: "".concat(o, " ").concat(e),
                                autocomplete: "off",
                                autocapitalize: "off",
                                spellcheck: !1
                            });
                            return o.setAttribute("role", "textbox"), o.setAttribute("aria-autocomplete", "list"), 
                            o.setAttribute("aria-label", t), o;
                        },
                        dropdown: function(e) {
                            var e = e.classNames, t = e.list, e = e.listDropdown, o = document.createElement("div");
                            return o.classList.add(t, e), o.setAttribute("aria-expanded", "false"), 
                            o;
                        },
                        notice: function(e, t, o) {
                            var i = e.allowHTML, e = e.classNames, n = e.item, s = e.itemChoice, r = e.noResults, e = e.noChoices, n = [ n, s ];
                            return "no-choices" === (o = void 0 === o ? "" : o) ? n.push(e) : "no-results" === o && n.push(r), 
                            Object.assign(document.createElement("div"), ((s = {})[i ? "innerHTML" : "innerText"] = t, 
                            s.className = n.join(" "), s));
                        },
                        option: function(e) {
                            var t = e.label, o = e.value, i = e.customProperties, n = e.active, e = e.disabled, t = new Option(t, o, !1, n);
                            return i && (t.dataset.customProperties = "".concat(i)), 
                            t.disabled = !!e, t;
                        }
                    };
                },
                996: function(e) {
                    function n(e) {
                        return !(!(t = e) || "object" != typeof t || (t = e, "[object RegExp]" === (e = Object.prototype.toString.call(t))) || "[object Date]" === e || function(e) {
                            return e.$$typeof === o;
                        }(t));
                        var t;
                    }
                    var o = "function" == typeof Symbol && Symbol.for ? Symbol.for("react.element") : 60103;
                    function a(e, t) {
                        return !1 !== t.clone && t.isMergeableObject(e) ? c(Array.isArray(e) ? [] : {}, e, t) : e;
                    }
                    function s(e, t, o) {
                        return e.concat(t).map(function(e) {
                            return a(e, o);
                        });
                    }
                    function t(e) {
                        return Object.keys(e).concat((t = e, Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(t).filter(function(e) {
                            return t.propertyIsEnumerable(e);
                        }) : []));
                        var t;
                    }
                    function l(e, t) {
                        try {
                            return t in e;
                        } catch (e) {
                            return !1;
                        }
                    }
                    function r(i, n, s) {
                        var r = {};
                        return s.isMergeableObject(i) && t(i).forEach(function(e) {
                            r[e] = a(i[e], s);
                        }), t(n).forEach(function(e) {
                            var t, o;
                            (!l(t = i, o = e) || Object.hasOwnProperty.call(t, o) && Object.propertyIsEnumerable.call(t, o)) && (l(i, e) && s.isMergeableObject(n[e]) ? r[e] = (t = e, 
                            ((o = s).customMerge && "function" == typeof (o = o.customMerge(t)) ? o : c)(i[e], n[e], s)) : r[e] = a(n[e], s));
                        }), r;
                    }
                    function c(e, t, o) {
                        (o = o || {}).arrayMerge = o.arrayMerge || s, o.isMergeableObject = o.isMergeableObject || n, 
                        o.cloneUnlessOtherwiseSpecified = a;
                        var i = Array.isArray(t);
                        return i === Array.isArray(e) ? i ? o.arrayMerge(e, t, o) : r(e, t, o) : a(t, o);
                    }
                    c.all = function(e, o) {
                        if (Array.isArray(e)) return e.reduce(function(e, t) {
                            return c(e, t, o);
                        }, {});
                        throw new Error("first argument should be an array");
                    }, e.exports = c;
                },
                221: function(N, e, t) {
                    /**
 * Fuse.js v6.6.2 - Lightweight fuzzy-search (http://fusejs.io)
 *
 * Copyright (c) 2022 Kiro Risk (http://kiro.me)
 * All Rights Reserved. Apache Software License 2.0
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 */
                    function c(e) {
                        return Array.isArray ? Array.isArray(e) : "[object Array]" === i(e);
                    }
                    t.r(e), t.d(e, {
                        default: function() {
                            return P;
                        }
                    });
                    const o = 1 / 0;
                    function l(e) {
                        return null == e ? "" : "string" == typeof (e = e) ? e : "0" == (t = e + "") && 1 / e == -o ? "-0" : t;
                        var t;
                    }
                    function d(e) {
                        return "string" == typeof e;
                    }
                    function h(e) {
                        return "number" == typeof e;
                    }
                    function u(e) {
                        return !0 === e || !1 === e || p(t = e) && null !== t && "[object Boolean]" == i(e);
                        var t;
                    }
                    function p(e) {
                        return "object" == typeof e;
                    }
                    function m(e) {
                        return null != e;
                    }
                    function f(e) {
                        return !e.trim().length;
                    }
                    function i(e) {
                        return null == e ? void 0 === e ? "[object Undefined]" : "[object Null]" : Object.prototype.toString.call(e);
                    }
                    const a = Object.prototype.hasOwnProperty;
                    class n {
                        constructor(e) {
                            this._keys = [], this._keyMap = {};
                            let t = 0;
                            e.forEach(e => {
                                e = s(e);
                                t += e.weight, this._keys.push(e), this._keyMap[e.id] = e, 
                                t += e.weight;
                            }), this._keys.forEach(e => {
                                e.weight /= t;
                            });
                        }
                        get(e) {
                            return this._keyMap[e];
                        }
                        keys() {
                            return this._keys;
                        }
                        toJSON() {
                            return JSON.stringify(this._keys);
                        }
                    }
                    function s(e) {
                        let t = null, o = null, i = null, n = 1, s = null;
                        if (d(e) || c(e)) i = e, t = g(e), o = b(e); else {
                            if (!a.call(e, "name")) throw new Error("Missing name property in key");
                            var r = e.name;
                            if (i = r, a.call(e, "weight") && (n = e.weight) <= 0) throw new Error(`Property 'weight' in key '${r}' must be a positive integer`);
                            t = g(r), o = b(r), s = e.getFn;
                        }
                        return {
                            path: t,
                            id: o,
                            weight: n,
                            src: i,
                            getFn: s
                        };
                    }
                    function g(e) {
                        return c(e) ? e : e.split(".");
                    }
                    function b(e) {
                        return c(e) ? e.join(".") : e;
                    }
                    var S = {
                        isCaseSensitive: !1,
                        includeScore: !1,
                        keys: [],
                        shouldSort: !0,
                        sortFn: (e, t) => e.score === t.score ? e.idx < t.idx ? -1 : 1 : e.score < t.score ? -1 : 1,
                        includeMatches: !1,
                        findAllMatches: !1,
                        minMatchCharLength: 1,
                        location: 0,
                        threshold: .6,
                        distance: 100,
                        ...{
                            useExtendedSearch: !1,
                            getFn: function(e, t) {
                                let s = [], r = !1;
                                const a = (e, o, i) => {
                                    if (m(e)) if (o[i]) {
                                        var n = e[o[i]];
                                        if (m(n)) if (i === o.length - 1 && (d(n) || h(n) || u(n))) s.push(l(n)); else if (c(n)) {
                                            r = !0;
                                            for (let e = 0, t = n.length; e < t; e += 1) a(n[e], o, i + 1);
                                        } else o.length && a(n, o, i + 1);
                                    } else s.push(e);
                                };
                                return a(e, d(t) ? t.split(".") : t, 0), r ? s : s[0];
                            },
                            ignoreLocation: !1,
                            ignoreFieldNorm: !1,
                            fieldNormWeight: 1
                        }
                    };
                    const H = /[^ ]+/g;
                    class r {
                        constructor({
                            getFn: e = S.getFn,
                            fieldNormWeight: t = S.fieldNormWeight
                        } = {}) {
                            this.norm = function(o = 1, e) {
                                const i = new Map(), n = Math.pow(10, e);
                                return {
                                    get(e) {
                                        var t, e = e.match(H).length;
                                        return i.has(e) ? i.get(e) : (t = 1 / Math.pow(e, .5 * o), 
                                        t = parseFloat(Math.round(t * n) / n), i.set(e, t), 
                                        t);
                                    },
                                    clear() {
                                        i.clear();
                                    }
                                };
                            }(t, 3), this.getFn = e, this.isCreated = !1, this.setIndexRecords();
                        }
                        setSources(e = []) {
                            this.docs = e;
                        }
                        setIndexRecords(e = []) {
                            this.records = e;
                        }
                        setKeys(e = []) {
                            this.keys = e, this._keysMap = {}, e.forEach((e, t) => {
                                this._keysMap[e.id] = t;
                            });
                        }
                        create() {
                            !this.isCreated && this.docs.length && (this.isCreated = !0, 
                            d(this.docs[0]) ? this.docs.forEach((e, t) => {
                                this._addString(e, t);
                            }) : this.docs.forEach((e, t) => {
                                this._addObject(e, t);
                            }), this.norm.clear());
                        }
                        add(e) {
                            var t = this.size();
                            d(e) ? this._addString(e, t) : this._addObject(e, t);
                        }
                        removeAt(o) {
                            this.records.splice(o, 1);
                            for (let e = o, t = this.size(); e < t; e += 1) --this.records[e].i;
                        }
                        getValueForItemAtKeyId(e, t) {
                            return e[this._keysMap[t]];
                        }
                        size() {
                            return this.records.length;
                        }
                        _addString(e, t) {
                            m(e) && !f(e) && (t = {
                                v: e,
                                i: t,
                                n: this.norm.get(e)
                            }, this.records.push(t));
                        }
                        _addObject(a, e) {
                            let l = {
                                i: e,
                                $: {}
                            };
                            this.keys.forEach((e, t) => {
                                let o = e.getFn ? e.getFn(a) : this.getFn(a, e.path);
                                if (m(o)) if (c(o)) {
                                    var i, n = [];
                                    const s = [ {
                                        nestedArrIndex: -1,
                                        value: o
                                    } ];
                                    for (;s.length; ) {
                                        const {
                                            nestedArrIndex: r,
                                            value: o
                                        } = s.pop();
                                        m(o) && (d(o) && !f(o) ? (i = {
                                            v: o,
                                            i: r,
                                            n: this.norm.get(o)
                                        }, n.push(i)) : c(o) && o.forEach((e, t) => {
                                            s.push({
                                                nestedArrIndex: t,
                                                value: e
                                            });
                                        }));
                                    }
                                    l.$[t] = n;
                                } else d(o) && !f(o) && (e = {
                                    v: o,
                                    n: this.norm.get(o)
                                }, l.$[t] = e);
                            }), this.records.push(l);
                        }
                        toJSON() {
                            return {
                                keys: this.keys,
                                records: this.records
                            };
                        }
                    }
                    function v(e, t, {
                        getFn: o = S.getFn,
                        fieldNormWeight: i = S.fieldNormWeight
                    } = {}) {
                        o = new r({
                            getFn: o,
                            fieldNormWeight: i
                        });
                        return o.setKeys(e.map(s)), o.setSources(t), o.create(), 
                        o;
                    }
                    function L(e, {
                        errors: t = 0,
                        currentLocation: o = 0,
                        expectedLocation: i = 0,
                        distance: n = S.distance,
                        ignoreLocation: s = S.ignoreLocation
                    } = {}) {
                        t /= e.length;
                        return s ? t : (e = Math.abs(i - o), n ? t + e / n : e ? 1 : t);
                    }
                    function F(n, s, r, {
                        location: e = S.location,
                        distance: a = S.distance,
                        threshold: t = S.threshold,
                        findAllMatches: l = S.findAllMatches,
                        minMatchCharLength: o = S.minMatchCharLength,
                        includeMatches: i = S.includeMatches,
                        ignoreLocation: c = S.ignoreLocation
                    } = {}) {
                        if (32 < s.length) throw new Error("Pattern length exceeds max of 32.");
                        var u = s.length, d = n.length, h = Math.max(0, Math.min(e, d));
                        let p = t, m = h;
                        for (var f, g = 1 < o || i, b = g ? Array(d) : []; -1 < (f = n.indexOf(s, m)); ) {
                            var v = L(s, {
                                currentLocation: f,
                                expectedLocation: h,
                                distance: a,
                                ignoreLocation: c
                            });
                            if (p = Math.min(v, p), m = f + u, g) {
                                let e = 0;
                                for (;e < u; ) b[f + e] = 1, e += 1;
                            }
                        }
                        m = -1;
                        let y = [], w = 1, E = u + d;
                        var C = 1 << u - 1;
                        for (let i = 0; i < u; i += 1) {
                            let e = 0, t = E;
                            for (;e < t; ) L(s, {
                                errors: i,
                                currentLocation: h + t,
                                expectedLocation: h,
                                distance: a,
                                ignoreLocation: c
                            }) <= p ? e = t : E = t, t = Math.floor((E - e) / 2 + e);
                            E = t;
                            let o = Math.max(1, h - t + 1);
                            var x = l ? d : Math.min(h + t, d) + u, _ = Array(x + 2);
                            _[x + 1] = (1 << i) - 1;
                            for (let e = x; e >= o; --e) {
                                var M = e - 1, R = r[n.charAt(M)];
                                if (g && (b[M] = +!!R), _[e] = (_[e + 1] << 1 | 1) & R, 
                                i && (_[e] |= (y[e + 1] | y[e]) << 1 | 1 | y[e + 1]), 
                                _[e] & C && (w = L(s, {
                                    errors: i,
                                    currentLocation: M,
                                    expectedLocation: h,
                                    distance: a,
                                    ignoreLocation: c
                                })) <= p) {
                                    if (p = w, (m = M) <= h) break;
                                    o = Math.max(1, 2 * h - m);
                                }
                            }
                            if (L(s, {
                                errors: i + 1,
                                currentLocation: h,
                                expectedLocation: h,
                                distance: a,
                                ignoreLocation: c
                            }) > p) break;
                            y = _;
                        }
                        e = {
                            isMatch: 0 <= m,
                            score: Math.max(.001, w)
                        };
                        return g && ((t = function(e = [], t = S.minMatchCharLength) {
                            var o = [];
                            let i = -1, n = 0;
                            for (var s = e.length; n < s; n += 1) {
                                var r = e[n];
                                r && -1 === i ? i = n : r || -1 === i || ((r = n - 1) - i + 1 >= t && o.push([ i, r ]), 
                                i = -1);
                            }
                            return e[n - 1] && n - i >= t && o.push([ i, n - 1 ]), 
                            o;
                        }(b, o)).length ? i && (e.indices = t) : e.isMatch = !1), 
                        e;
                    }
                    class y {
                        constructor(e, {
                            location: t = S.location,
                            threshold: o = S.threshold,
                            distance: i = S.distance,
                            includeMatches: n = S.includeMatches,
                            findAllMatches: s = S.findAllMatches,
                            minMatchCharLength: r = S.minMatchCharLength,
                            isCaseSensitive: a = S.isCaseSensitive,
                            ignoreLocation: l = S.ignoreLocation
                        } = {}) {
                            if (this.options = {
                                location: t,
                                threshold: o,
                                distance: i,
                                includeMatches: n,
                                findAllMatches: s,
                                minMatchCharLength: r,
                                isCaseSensitive: a,
                                ignoreLocation: l
                            }, this.pattern = a ? e : e.toLowerCase(), this.chunks = [], 
                            this.pattern.length) {
                                var c = (e, t) => {
                                    this.chunks.push({
                                        pattern: e,
                                        alphabet: function(o) {
                                            var i = {};
                                            for (let e = 0, t = o.length; e < t; e += 1) {
                                                var n = o.charAt(e);
                                                i[n] = (i[n] || 0) | 1 << t - e - 1;
                                            }
                                            return i;
                                        }(e),
                                        startIndex: t
                                    });
                                }, t = this.pattern.length;
                                if (32 < t) {
                                    let e = 0;
                                    for (var o = t % 32, u = t - o; e < u; ) c(this.pattern.substr(e, 32), e), 
                                    e += 32;
                                    o && c(this.pattern.substr(i = t - 32), i);
                                } else c(this.pattern, 0);
                            }
                        }
                        searchIn(i) {
                            const {
                                isCaseSensitive: e,
                                includeMatches: n
                            } = this.options;
                            if (e || (i = i.toLowerCase()), this.pattern === i) return t = {
                                isMatch: !0,
                                score: 0
                            }, n && (t.indices = [ [ 0, i.length - 1 ] ]), t;
                            const {
                                location: s,
                                distance: r,
                                threshold: a,
                                findAllMatches: l,
                                minMatchCharLength: c,
                                ignoreLocation: u
                            } = this.options;
                            let d = [], h = 0, p = !1;
                            this.chunks.forEach(({
                                pattern: e,
                                alphabet: t,
                                startIndex: o
                            }) => {
                                var {
                                    isMatch: e,
                                    score: t,
                                    indices: o
                                } = F(i, e, t, {
                                    location: s + o,
                                    distance: r,
                                    threshold: a,
                                    findAllMatches: l,
                                    minMatchCharLength: c,
                                    includeMatches: n,
                                    ignoreLocation: u
                                });
                                e && (p = !0), h += t, e && o && (d = [ ...d, ...o ]);
                            });
                            var t = {
                                isMatch: p,
                                score: p ? h / this.chunks.length : 1
                            };
                            return p && n && (t.indices = d), t;
                        }
                    }
                    class w {
                        constructor(e) {
                            this.pattern = e;
                        }
                        static isMultiMatch(e) {
                            return E(e, this.multiRegex);
                        }
                        static isSingleMatch(e) {
                            return E(e, this.singleRegex);
                        }
                        search() {}
                    }
                    function E(e, t) {
                        e = e.match(t);
                        return e ? e[1] : null;
                    }
                    class C extends w {
                        constructor(e, {
                            location: t = S.location,
                            threshold: o = S.threshold,
                            distance: i = S.distance,
                            includeMatches: n = S.includeMatches,
                            findAllMatches: s = S.findAllMatches,
                            minMatchCharLength: r = S.minMatchCharLength,
                            isCaseSensitive: a = S.isCaseSensitive,
                            ignoreLocation: l = S.ignoreLocation
                        } = {}) {
                            super(e), this._bitapSearch = new y(e, {
                                location: t,
                                threshold: o,
                                distance: i,
                                includeMatches: n,
                                findAllMatches: s,
                                minMatchCharLength: r,
                                isCaseSensitive: a,
                                ignoreLocation: l
                            });
                        }
                        static get type() {
                            return "fuzzy";
                        }
                        static get multiRegex() {
                            return /^"(.*)"$/;
                        }
                        static get singleRegex() {
                            return /^(.*)$/;
                        }
                        search(e) {
                            return this._bitapSearch.searchIn(e);
                        }
                    }
                    class x extends w {
                        constructor(e) {
                            super(e);
                        }
                        static get type() {
                            return "include";
                        }
                        static get multiRegex() {
                            return /^'"(.*)"$/;
                        }
                        static get singleRegex() {
                            return /^'(.*)$/;
                        }
                        search(e) {
                            let t = 0;
                            for (var o, i = [], n = this.pattern.length; -1 < (o = e.indexOf(this.pattern, t)); ) t = o + n, 
                            i.push([ o, t - 1 ]);
                            var s = !!i.length;
                            return {
                                isMatch: s,
                                score: s ? 0 : 1,
                                indices: i
                            };
                        }
                    }
                    const _ = [ class extends w {
                        constructor(e) {
                            super(e);
                        }
                        static get type() {
                            return "exact";
                        }
                        static get multiRegex() {
                            return /^="(.*)"$/;
                        }
                        static get singleRegex() {
                            return /^=(.*)$/;
                        }
                        search(e) {
                            e = e === this.pattern;
                            return {
                                isMatch: e,
                                score: e ? 0 : 1,
                                indices: [ 0, this.pattern.length - 1 ]
                            };
                        }
                    }, x, class extends w {
                        constructor(e) {
                            super(e);
                        }
                        static get type() {
                            return "prefix-exact";
                        }
                        static get multiRegex() {
                            return /^\^"(.*)"$/;
                        }
                        static get singleRegex() {
                            return /^\^(.*)$/;
                        }
                        search(e) {
                            e = e.startsWith(this.pattern);
                            return {
                                isMatch: e,
                                score: e ? 0 : 1,
                                indices: [ 0, this.pattern.length - 1 ]
                            };
                        }
                    }, class extends w {
                        constructor(e) {
                            super(e);
                        }
                        static get type() {
                            return "inverse-prefix-exact";
                        }
                        static get multiRegex() {
                            return /^!\^"(.*)"$/;
                        }
                        static get singleRegex() {
                            return /^!\^(.*)$/;
                        }
                        search(e) {
                            var t = !e.startsWith(this.pattern);
                            return {
                                isMatch: t,
                                score: t ? 0 : 1,
                                indices: [ 0, e.length - 1 ]
                            };
                        }
                    }, class extends w {
                        constructor(e) {
                            super(e);
                        }
                        static get type() {
                            return "inverse-suffix-exact";
                        }
                        static get multiRegex() {
                            return /^!"(.*)"\$$/;
                        }
                        static get singleRegex() {
                            return /^!(.*)\$$/;
                        }
                        search(e) {
                            var t = !e.endsWith(this.pattern);
                            return {
                                isMatch: t,
                                score: t ? 0 : 1,
                                indices: [ 0, e.length - 1 ]
                            };
                        }
                    }, class extends w {
                        constructor(e) {
                            super(e);
                        }
                        static get type() {
                            return "suffix-exact";
                        }
                        static get multiRegex() {
                            return /^"(.*)"\$$/;
                        }
                        static get singleRegex() {
                            return /^(.*)\$$/;
                        }
                        search(e) {
                            var t = e.endsWith(this.pattern);
                            return {
                                isMatch: t,
                                score: t ? 0 : 1,
                                indices: [ e.length - this.pattern.length, e.length - 1 ]
                            };
                        }
                    }, class extends w {
                        constructor(e) {
                            super(e);
                        }
                        static get type() {
                            return "inverse-exact";
                        }
                        static get multiRegex() {
                            return /^!"(.*)"$/;
                        }
                        static get singleRegex() {
                            return /^!(.*)$/;
                        }
                        search(e) {
                            var t = -1 === e.indexOf(this.pattern);
                            return {
                                isMatch: t,
                                score: t ? 0 : 1,
                                indices: [ 0, e.length - 1 ]
                            };
                        }
                    }, C ], M = _.length, z = / +(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/;
                    const j = new Set([ C.type, x.type ]);
                    class B {
                        constructor(e, {
                            isCaseSensitive: t = S.isCaseSensitive,
                            includeMatches: o = S.includeMatches,
                            minMatchCharLength: i = S.minMatchCharLength,
                            ignoreLocation: n = S.ignoreLocation,
                            findAllMatches: s = S.findAllMatches,
                            location: r = S.location,
                            threshold: a = S.threshold,
                            distance: l = S.distance
                        } = {}) {
                            var u;
                            this.query = null, this.options = {
                                isCaseSensitive: t,
                                includeMatches: o,
                                minMatchCharLength: i,
                                findAllMatches: s,
                                ignoreLocation: n,
                                location: r,
                                threshold: a,
                                distance: l
                            }, this.pattern = t ? e : e.toLowerCase(), this.query = ([ o, u = {} ] = [ this.pattern, this.options ], 
                            o.split("|").map(e => {
                                var i = e.trim().split(z).filter(e => e && !!e.trim()), n = [];
                                for (let o = 0, e = i.length; o < e; o += 1) {
                                    var s = i[o];
                                    let e = !1, t = -1;
                                    for (;!e && ++t < M; ) {
                                        var r = _[t], a = r.isMultiMatch(s);
                                        a && (n.push(new r(a, u)), e = !0);
                                    }
                                    if (!e) for (t = -1; ++t < M; ) {
                                        var l = _[t], c = l.isSingleMatch(s);
                                        if (c) {
                                            n.push(new l(c, u));
                                            break;
                                        }
                                    }
                                }
                                return n;
                            }));
                        }
                        static condition(e, t) {
                            return t.useExtendedSearch;
                        }
                        searchIn(s) {
                            var r = this.query;
                            if (r) {
                                var {
                                    includeMatches: a,
                                    isCaseSensitive: e
                                } = this.options;
                                s = e ? s : s.toLowerCase();
                                let o = 0, i = [], n = 0;
                                for (let e = 0, t = r.length; e < t; e += 1) {
                                    var l, c = r[e];
                                    i.length = 0;
                                    for (let e = o = 0, t = c.length; e < t; e += 1) {
                                        var u = c[e], {
                                            isMatch: d,
                                            indices: h,
                                            score: p
                                        } = u.search(s);
                                        if (!d) {
                                            n = 0, o = 0, i.length = 0;
                                            break;
                                        }
                                        o += 1, n += p, a && (d = u.constructor.type, 
                                        j.has(d) ? i = [ ...i, ...h ] : i.push(h));
                                    }
                                    if (o) return l = {
                                        isMatch: !0,
                                        score: n / o
                                    }, a && (l.indices = i), l;
                                }
                            }
                            return {
                                isMatch: !1,
                                score: 1
                            };
                        }
                    }
                    const R = [];
                    function T(o, i) {
                        for (let e = 0, t = R.length; e < t; e += 1) {
                            var n = R[e];
                            if (n.condition(o, i)) return new n(o, i);
                        }
                        return new y(o, i);
                    }
                    const D = {
                        AND: "$and",
                        OR: "$or"
                    }, k = {
                        PATH: "$path",
                        PATTERN: "$val"
                    }, I = e => !(!e[D.AND] && !e[D.OR]), O = t => ({
                        [D.AND]: Object.keys(t).map(e => ({
                            [e]: t[e]
                        }))
                    });
                    function A(e, r, {
                        auto: a = !0
                    } = {}) {
                        const l = t => {
                            var e = Object.keys(t), o = !!t[k.PATH];
                            if (!o && 1 < e.length && !I(t)) return l(O(t));
                            if (!c(n = t) && p(n) && !I(n)) {
                                var i, n = o ? t[k.PATH] : e[0], o = o ? t[k.PATTERN] : t[n];
                                if (d(o)) return i = {
                                    keyId: b(n),
                                    pattern: o
                                }, a && (i.searcher = T(o, r)), i;
                                throw new Error("Invalid value for key " + n);
                            }
                            let s = {
                                children: [],
                                operator: e[0]
                            };
                            return e.forEach(e => {
                                e = t[e];
                                c(e) && e.forEach(e => {
                                    s.children.push(l(e));
                                });
                            }), s;
                        };
                        return I(e) || (e = O(e)), l(e);
                    }
                    function V(e, i) {
                        e = e.matches;
                        i.matches = [], m(e) && e.forEach(e => {
                            var t, o;
                            m(e.indices) && e.indices.length && ({
                                indices: o,
                                value: t
                            } = e, o = {
                                indices: o,
                                value: t
                            }, e.key && (o.key = e.key.src), -1 < e.idx && (o.refIndex = e.idx), 
                            i.matches.push(o));
                        });
                    }
                    function W(e, t) {
                        t.score = e.score;
                    }
                    class P {
                        constructor(e, t = {}, o) {
                            this.options = {
                                ...S,
                                ...t
                            }, this.options.useExtendedSearch, this._keyStore = new n(this.options.keys), 
                            this.setCollection(e, o);
                        }
                        setCollection(e, t) {
                            if (this._docs = e, t && !(t instanceof r)) throw new Error("Incorrect 'index' type");
                            this._myIndex = t || v(this.options.keys, this._docs, {
                                getFn: this.options.getFn,
                                fieldNormWeight: this.options.fieldNormWeight
                            });
                        }
                        add(e) {
                            m(e) && (this._docs.push(e), this._myIndex.add(e));
                        }
                        remove(o = () => !1) {
                            var i = [];
                            for (let e = 0, t = this._docs.length; e < t; e += 1) {
                                var n = this._docs[e];
                                o(n, e) && (this.removeAt(e), --e, --t, i.push(n));
                            }
                            return i;
                        }
                        removeAt(e) {
                            this._docs.splice(e, 1), this._myIndex.removeAt(e);
                        }
                        getIndex() {
                            return this._myIndex;
                        }
                        search(e, {
                            limit: t = -1
                        } = {}) {
                            var n, {
                                includeMatches: o,
                                includeScore: i,
                                shouldSort: s,
                                sortFn: r,
                                ignoreFieldNorm: a
                            } = this.options;
                            let l = d(e) ? d(this._docs[0]) ? this._searchStringList(e) : this._searchObjectList(e) : this._searchLogical(e);
                            [ e, {
                                ignoreFieldNorm: n = S.ignoreFieldNorm
                            } ] = [ l, {
                                ignoreFieldNorm: a
                            } ], e.forEach(e => {
                                let i = 1;
                                e.matches.forEach(({
                                    key: e,
                                    norm: t,
                                    score: o
                                }) => {
                                    e = e ? e.weight : null;
                                    i *= Math.pow(0 === o && e ? Number.EPSILON : o, (e || 1) * (n ? 1 : t));
                                }), e.score = i;
                            }), s && l.sort(r), h(t) && -1 < t && (l = l.slice(0, t));
                            {
                                var [ a, c, {
                                    includeMatches: e = S.includeMatches,
                                    includeScore: s = S.includeScore
                                } ] = [ l, this._docs, {
                                    includeMatches: o,
                                    includeScore: i
                                } ];
                                const u = [];
                                return e && u.push(V), s && u.push(W), a.map(t => {
                                    var e = t["idx"];
                                    const o = {
                                        item: c[e],
                                        refIndex: e
                                    };
                                    return u.length && u.forEach(e => {
                                        e(t, o);
                                    }), o;
                                });
                            }
                        }
                        _searchStringList(e) {
                            const r = T(e, this.options);
                            e = this._myIndex.records;
                            const a = [];
                            return e.forEach(({
                                v: e,
                                i: t,
                                n: o
                            }) => {
                                var i, n, s;
                                m(e) && ({
                                    isMatch: i,
                                    score: n,
                                    indices: s
                                } = r.searchIn(e), i) && a.push({
                                    item: e,
                                    idx: t,
                                    matches: [ {
                                        score: n,
                                        value: e,
                                        norm: o,
                                        indices: s
                                    } ]
                                });
                            }), a;
                        }
                        _searchLogical(e) {
                            const i = A(e, this.options), a = (o, i, n) => {
                                var e, t;
                                if (!o.children) return {
                                    keyId: t,
                                    searcher: e
                                } = o, (t = this._findMatches({
                                    key: this._keyStore.get(t),
                                    value: this._myIndex.getValueForItemAtKeyId(i, t),
                                    searcher: e
                                })) && t.length ? [ {
                                    idx: n,
                                    item: i,
                                    matches: t
                                } ] : [];
                                var s = [];
                                for (let e = 0, t = o.children.length; e < t; e += 1) {
                                    var r = o.children[e], r = a(r, i, n);
                                    if (r.length) s.push(...r); else if (o.operator === D.AND) return [];
                                }
                                return s;
                            };
                            e = this._myIndex.records;
                            const n = {}, s = [];
                            return e.forEach(({
                                $: e,
                                i: t
                            }) => {
                                var o;
                                m(e) && (o = a(i, e, t)).length && (n[t] || (n[t] = {
                                    idx: t,
                                    item: e,
                                    matches: []
                                }, s.push(n[t])), o.forEach(({
                                    matches: e
                                }) => {
                                    n[t].matches.push(...e);
                                }));
                            }), s;
                        }
                        _searchObjectList(e) {
                            const n = T(e, this.options), {
                                keys: t,
                                records: o
                            } = this._myIndex, s = [];
                            return o.forEach(({
                                $: i,
                                i: e
                            }) => {
                                if (m(i)) {
                                    let o = [];
                                    t.forEach((e, t) => {
                                        o.push(...this._findMatches({
                                            key: e,
                                            value: i[t],
                                            searcher: n
                                        }));
                                    }), o.length && s.push({
                                        idx: e,
                                        item: i,
                                        matches: o
                                    });
                                }
                            }), s;
                        }
                        _findMatches({
                            key: r,
                            value: e,
                            searcher: a
                        }) {
                            if (!m(e)) return [];
                            let l = [];
                            var t, o, i, n;
                            return c(e) ? e.forEach(({
                                v: e,
                                i: t,
                                n: o
                            }) => {
                                var i, n, s;
                                m(e) && ({
                                    isMatch: i,
                                    score: n,
                                    indices: s
                                } = a.searchIn(e), i) && l.push({
                                    score: n,
                                    key: r,
                                    value: e,
                                    idx: t,
                                    norm: o,
                                    indices: s
                                });
                            }) : ({
                                v: e,
                                n: t
                            } = e, {
                                isMatch: o,
                                score: i,
                                indices: n
                            } = a.searchIn(e), o && l.push({
                                score: i,
                                key: r,
                                value: e,
                                norm: t,
                                indices: n
                            })), l;
                        }
                    }
                    P.version = "6.6.2", P.createIndex = v, P.parseIndex = function(e, {
                        getFn: t = S.getFn,
                        fieldNormWeight: o = S.fieldNormWeight
                    } = {}) {
                        var {
                            keys: e,
                            records: i
                        } = e;
                        return (t = new r({
                            getFn: t,
                            fieldNormWeight: o
                        })).setKeys(e), t.setIndexRecords(i), t;
                    }, P.config = S, P.parseQuery = A, t = [ B ], R.push(...t);
                },
                791: function(e, t, o) {
                    function i(e) {
                        return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                            return typeof e;
                        } : function(e) {
                            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                        })(e);
                    }
                    function s(e) {
                        e = function(e, t) {
                            if ("object" !== i(e) || null === e) return e;
                            var o = e[Symbol.toPrimitive];
                            if (void 0 === o) return ("string" === t ? String : Number)(e);
                            if ("object" !== i(o = o.call(e, t || "default"))) return o;
                            throw new TypeError("@@toPrimitive must return a primitive value.");
                        }(e, "string");
                        return "symbol" === i(e) ? e : String(e);
                    }
                    function r(t, e) {
                        var o, i = Object.keys(t);
                        return Object.getOwnPropertySymbols && (o = Object.getOwnPropertySymbols(t), 
                        e && (o = o.filter(function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable;
                        })), i.push.apply(i, o)), i;
                    }
                    function a(i) {
                        for (var e = 1; e < arguments.length; e++) {
                            var n = null != arguments[e] ? arguments[e] : {};
                            e % 2 ? r(Object(n), !0).forEach(function(e) {
                                var t, o;
                                t = i, o = n[e = e], (e = s(e)) in t ? Object.defineProperty(t, e, {
                                    value: o,
                                    enumerable: !0,
                                    configurable: !0,
                                    writable: !0
                                }) : t[e] = o;
                            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(i, Object.getOwnPropertyDescriptors(n)) : r(Object(n)).forEach(function(e) {
                                Object.defineProperty(i, e, Object.getOwnPropertyDescriptor(n, e));
                            });
                        }
                        return i;
                    }
                    function h(e) {
                        return "Minified Redux error #" + e + "; visit https://redux.js.org/Errors?code=" + e + " for the full message or use the non-minified dev environment for full errors. ";
                    }
                    o.r(t), o.d(t, {
                        __DO_NOT_USE__ActionTypes: function() {
                            return m;
                        },
                        applyMiddleware: function() {
                            return v;
                        },
                        bindActionCreators: function() {
                            return d;
                        },
                        combineReducers: function() {
                            return c;
                        },
                        compose: function() {
                            return b;
                        },
                        createStore: function() {
                            return g;
                        },
                        legacy_createStore: function() {
                            return l;
                        }
                    });
                    function n() {
                        return Math.random().toString(36).substring(7).split("").join(".");
                    }
                    var p = "function" == typeof Symbol && Symbol.observable || "@@observable", m = {
                        INIT: "@@redux/INIT" + n(),
                        REPLACE: "@@redux/REPLACE" + n(),
                        PROBE_UNKNOWN_ACTION: function() {
                            return "@@redux/PROBE_UNKNOWN_ACTION" + n();
                        }
                    };
                    function f(e) {
                        if ("object" == typeof e && null !== e) {
                            for (var t = e; null !== Object.getPrototypeOf(t); ) t = Object.getPrototypeOf(t);
                            return Object.getPrototypeOf(e) === t;
                        }
                    }
                    function g(e, t, o) {
                        if ("function" == typeof t && "function" == typeof o || "function" == typeof o && "function" == typeof arguments[3]) throw new Error(h(0));
                        if ("function" == typeof t && void 0 === o && (o = t, t = void 0), 
                        void 0 !== o) {
                            if ("function" != typeof o) throw new Error(h(1));
                            return o(g)(e, t);
                        }
                        if ("function" != typeof e) throw new Error(h(2));
                        var i = e, n = t, s = [], r = s, a = !1;
                        function l() {
                            r === s && (r = s.slice());
                        }
                        function c() {
                            if (a) throw new Error(h(3));
                            return n;
                        }
                        function u(t) {
                            if ("function" != typeof t) throw new Error(h(4));
                            if (a) throw new Error(h(5));
                            var o = !0;
                            return l(), r.push(t), function() {
                                if (o) {
                                    if (a) throw new Error(h(6));
                                    o = !1, l();
                                    var e = r.indexOf(t);
                                    r.splice(e, 1), s = null;
                                }
                            };
                        }
                        function d(e) {
                            if (!f(e)) throw new Error(h(7));
                            if (void 0 === e.type) throw new Error(h(8));
                            if (a) throw new Error(h(9));
                            try {
                                a = !0, n = i(n, e);
                            } finally {
                                a = !1;
                            }
                            for (var t = s = r, o = 0; o < t.length; o++) (0, t[o])();
                            return e;
                        }
                        return d({
                            type: m.INIT
                        }), (o = {
                            dispatch: d,
                            subscribe: u,
                            getState: c,
                            replaceReducer: function(e) {
                                if ("function" != typeof e) throw new Error(h(10));
                                i = e, d({
                                    type: m.REPLACE
                                });
                            }
                        })[p] = function() {
                            var o = u, e = {
                                subscribe: function(e) {
                                    if ("object" != typeof e || null === e) throw new Error(h(11));
                                    function t() {
                                        e.next && e.next(c());
                                    }
                                    return t(), {
                                        unsubscribe: o(t)
                                    };
                                }
                            };
                            return e[p] = function() {
                                return this;
                            }, e;
                        }, o;
                    }
                    var l = g;
                    function c(e) {
                        for (var t = Object.keys(e), l = {}, o = 0; o < t.length; o++) {
                            var i = t[o];
                            "function" == typeof e[i] && (l[i] = e[i]);
                        }
                        var c, n, u = Object.keys(l);
                        try {
                            n = l, Object.keys(n).forEach(function(e) {
                                e = n[e];
                                if (void 0 === e(void 0, {
                                    type: m.INIT
                                })) throw new Error(h(12));
                                if (void 0 === e(void 0, {
                                    type: m.PROBE_UNKNOWN_ACTION()
                                })) throw new Error(h(13));
                            });
                        } catch (e) {
                            c = e;
                        }
                        return function(e, t) {
                            if (void 0 === e && (e = {}), c) throw c;
                            for (var o = !1, i = {}, n = 0; n < u.length; n++) {
                                var s = u[n], r = l[s], a = e[s], r = r(a, t);
                                if (void 0 === r) throw t && t.type, new Error(h(14));
                                i[s] = r, o = o || r !== a;
                            }
                            return (o = o || u.length !== Object.keys(e).length) ? i : e;
                        };
                    }
                    function u(e, t) {
                        return function() {
                            return t(e.apply(this, arguments));
                        };
                    }
                    function d(e, t) {
                        if ("function" == typeof e) return u(e, t);
                        if ("object" != typeof e || null === e) throw new Error(h(16));
                        var o, i = {};
                        for (o in e) {
                            var n = e[o];
                            "function" == typeof n && (i[o] = u(n, t));
                        }
                        return i;
                    }
                    function b() {
                        for (var e = arguments.length, t = new Array(e), o = 0; o < e; o++) t[o] = arguments[o];
                        return 0 === t.length ? function(e) {
                            return e;
                        } : 1 === t.length ? t[0] : t.reduce(function(e, t) {
                            return function() {
                                return e(t.apply(void 0, arguments));
                            };
                        });
                    }
                    function v() {
                        for (var e = arguments.length, s = new Array(e), t = 0; t < e; t++) s[t] = arguments[t];
                        return function(n) {
                            return function() {
                                var e = n.apply(void 0, arguments), t = function() {
                                    throw new Error(h(15));
                                }, o = {
                                    getState: e.getState,
                                    dispatch: function() {
                                        return t.apply(void 0, arguments);
                                    }
                                }, i = s.map(function(e) {
                                    return e(o);
                                }), t = b.apply(void 0, i)(e.dispatch);
                                return a(a({}, e), {}, {
                                    dispatch: t
                                });
                            };
                        };
                    }
                }
            }, i = {};
            function n(e) {
                var t = i[e];
                return void 0 !== t || (t = i[e] = {
                    exports: {}
                }, o[e].call(t.exports, t, t.exports, n)), t.exports;
            }
            n.n = function(e) {
                var t = e && e.__esModule ? function() {
                    return e.default;
                } : function() {
                    return e;
                };
                return n.d(t, {
                    a: t
                }), t;
            }, n.d = function(e, t) {
                for (var o in t) n.o(t, o) && !n.o(e, o) && Object.defineProperty(e, o, {
                    enumerable: !0,
                    get: t[o]
                });
            }, n.o = function(e, t) {
                return Object.prototype.hasOwnProperty.call(e, t);
            }, n.r = function(e) {
                "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                }), Object.defineProperty(e, "__esModule", {
                    value: !0
                });
            };
            var e = {}, t = n(373), t = n.n(t);
            return n(187), n(883), n(789), n(686), e.default = t(), e = e.default;
        }, "object" == typeof o && "object" == typeof t ? t.exports = n() : "function" == typeof define && define.amd ? define([], n) : "object" == typeof o ? o.Choices = n() : i.Choices = n();
    }, {} ],
    7: [ function(e, t, o) {
        /*! 
 decouple v0.0.2 Copyright (c) @pazguille
* @license MIT
* For the full copyright and license information, 
* please read LICENSE.dependencies and LICENSE that was distributed * with this code in the dist directory 
  */
        "use strict";
        var a = window.requestAnimationFrame || window.webkitRequestAnimationFrame || function(e) {
            window.setTimeout(e, 1e3 / 60);
        };
        t.exports = function(e, t, o) {
            var i, n = !1;
            function s(e) {
                i = e, n || (a(r), n = !0);
            }
            function r() {
                o.call(e, i), n = !1;
            }
            return e.addEventListener(t, s, !1), s;
        };
    }, {} ],
    8: [ function(e, t, o) {
        /*! 
 emitter v0.0.7 Copyright (c) Guille Paz
* @license MIT
* For the full copyright and license information, 
* please read LICENSE.dependencies and LICENSE that was distributed * with this code in the dist directory 
  */
        "use strict";
        o.__esModule = !0, n.prototype.on = function(e, t) {
            return this._eventCollection = this._eventCollection || {}, this._eventCollection[e] = this._eventCollection[e] || [], 
            this._eventCollection[e].push(t), this;
        }, n.prototype.once = function(e, t) {
            var o = this;
            function i() {
                o.off(e, i), t.apply(this, arguments);
            }
            return i.listener = t, this.on(e, i), this;
        }, n.prototype.off = function(e, o) {
            var i = void 0;
            return this._eventCollection && (i = this._eventCollection[e]) && (i.forEach(function(e, t) {
                e !== o && e.listener !== o || i.splice(t, 1);
            }), 0 === i.length) && delete this._eventCollection[e], this;
        }, n.prototype.emit = function(e) {
            for (var t = this, o = arguments.length, i = Array(1 < o ? o - 1 : 0), n = 1; n < o; n++) i[n - 1] = arguments[n];
            var s = void 0;
            return this._eventCollection && (s = this._eventCollection[e]) && (s = s.slice(0)).forEach(function(e) {
                return e.apply(t, i);
            }), this;
        };
        var i = n;
        function n() {
            if (!(this instanceof n)) throw new TypeError("Cannot call a class as a function");
        }
        o.default = i, t.exports = o.default;
    }, {} ],
    9: [ function(e, t, o) {
        /*! 
 slideout v1.0.1 Copyright (c) Guille Paz
* @license MIT
* For the full copyright and license information, 
* please read LICENSE.dependencies and LICENSE that was distributed * with this code in the dist directory 
  */
        "use strict";
        var n, s = e("decouple"), e = e("emitter"), r = !1, a = window.document, l = a.documentElement, i = window.navigator.msPointerEnabled, c = {
            start: i ? "MSPointerDown" : "touchstart",
            move: i ? "MSPointerMove" : "touchmove",
            end: i ? "MSPointerUp" : "touchend"
        }, u = function() {
            var e, t = /^(Webkit|Khtml|Moz|ms|O)(?=[A-Z])/, o = a.getElementsByTagName("script")[0].style;
            for (e in o) if (t.test(e)) return "-" + e.match(t)[0].toLowerCase() + "-";
            return "WebkitOpacity" in o ? "-webkit-" : "KhtmlOpacity" in o ? "-khtml-" : "";
        }();
        function d(e) {
            e = e || {}, this._startOffsetX = 0, this._currentOffsetX = 0, this._opening = !1, 
            this._moved = !1, this._opened = !1, this._preventOpen = !1, this._touch = (void 0 === e.touch || e.touch) && !0, 
            this._side = e.side || "left", this.panel = e.panel, this.menu = e.menu, 
            this.panel.classList.contains("slideout-panel") || this.panel.classList.add("slideout-panel"), 
            this.panel.classList.contains("slideout-panel-" + this._side) || this.panel.classList.add("slideout-panel-" + this._side), 
            this.menu.classList.contains("slideout-menu") || this.menu.classList.add("slideout-menu"), 
            this.menu.classList.contains("slideout-menu-" + this._side) || this.menu.classList.add("slideout-menu-" + this._side), 
            this._fx = e.fx || "ease", this._duration = parseInt(e.duration, 10) || 300, 
            this._tolerance = parseInt(e.tolerance, 10) || 70, this._padding = this._translateTo = parseInt(e.padding, 10) || 256, 
            this._orientation = "right" === this._side ? -1 : 1, this._translateTo *= this._orientation, 
            this._touch && this._initTouchEvents();
        }
        (d.prototype = function(e, t) {
            for (var o in t) t[o] && (e[o] = t[o]);
            return e;
        }(d.prototype || {}, e.prototype)).open = function() {
            var e = this;
            return this.emit("beforeopen"), l.classList.contains("slideout-open") || l.classList.add("slideout-open"), 
            this._setTransition(), this._translateXTo(this._translateTo), this._opened = !0, 
            setTimeout(function() {
                e.panel.style.transition = e.panel.style["-webkit-transition"] = "", 
                e.emit("open");
            }, this._duration + 50), this;
        }, d.prototype.close = function() {
            var e = this;
            return (this.isOpen() || this._opening) && (this.emit("beforeclose"), 
            this._setTransition(), this._translateXTo(0), this._opened = !1, setTimeout(function() {
                l.classList.remove("slideout-open"), e.panel.style.transition = e.panel.style["-webkit-transition"] = e.panel.style[u + "transform"] = e.panel.style.transform = "", 
                e.emit("close");
            }, this._duration + 50)), this;
        }, d.prototype.toggle = function() {
            return this.isOpen() ? this.close() : this.open();
        }, d.prototype.isOpen = function() {
            return this._opened;
        }, d.prototype._translateXTo = function(e) {
            return this._currentOffsetX = e, this.panel.style[u + "transform"] = this.panel.style.transform = "translateX(" + e + "px)", 
            this;
        }, d.prototype._setTransition = function() {
            return this.panel.style[u + "transition"] = this.panel.style.transition = u + "transform " + this._duration + "ms " + this._fx, 
            this;
        }, d.prototype._initTouchEvents = function() {
            var i = this;
            return this._onScrollFn = s(a, "scroll", function() {
                i._moved || (clearTimeout(n), r = !0, n = setTimeout(function() {
                    r = !1;
                }, 250));
            }), this._preventMove = function(e) {
                i._moved && e.preventDefault();
            }, a.addEventListener(c.move, this._preventMove), this._resetTouchFn = function(e) {
                void 0 !== e.touches && (i._moved = !1, i._opening = !1, i._startOffsetX = e.touches[0].pageX, 
                i._preventOpen = !i._touch || !i.isOpen() && 0 !== i.menu.clientWidth);
            }, this.panel.addEventListener(c.start, this._resetTouchFn), this._onTouchCancelFn = function() {
                i._moved = !1, i._opening = !1;
            }, this.panel.addEventListener("touchcancel", this._onTouchCancelFn), 
            this._onTouchEndFn = function() {
                i._moved && (i.emit("translateend"), i._opening && Math.abs(i._currentOffsetX) > i._tolerance ? i.open() : i.close()), 
                i._moved = !1;
            }, this.panel.addEventListener(c.end, this._onTouchEndFn), this._onTouchMoveFn = function(e) {
                var t, o;
                r || i._preventOpen || void 0 === e.touches || function(e) {
                    for (;e.parentNode; ) {
                        if (null !== e.getAttribute("data-slideout-ignore")) return e;
                        e = e.parentNode;
                    }
                }(e.target) || (e = e.touches[0].clientX - i._startOffsetX, t = i._currentOffsetX = e, 
                Math.abs(t) > i._padding) || 20 < Math.abs(e) && (i._opening = !0, 
                o = e * i._orientation, i._opened && 0 < o || !i._opened && o < 0 || (i._moved || i.emit("translatestart"), 
                o <= 0 && (t = e + i._padding * i._orientation, i._opening = !1), 
                i._moved && l.classList.contains("slideout-open") || l.classList.add("slideout-open"), 
                i.panel.style[u + "transform"] = i.panel.style.transform = "translateX(" + t + "px)", 
                i.emit("translate", t), i._moved = !0));
            }, this.panel.addEventListener(c.move, this._onTouchMoveFn), this;
        }, d.prototype.enableTouch = function() {
            return this._touch = !0, this;
        }, d.prototype.disableTouch = function() {
            return this._touch = !1, this;
        }, d.prototype.destroy = function() {
            return this.close(), a.removeEventListener(c.move, this._preventMove), 
            this.panel.removeEventListener(c.start, this._resetTouchFn), this.panel.removeEventListener("touchcancel", this._onTouchCancelFn), 
            this.panel.removeEventListener(c.end, this._onTouchEndFn), this.panel.removeEventListener(c.move, this._onTouchMoveFn), 
            a.removeEventListener("scroll", this._onScrollFn), this.open = this.close = function() {}, 
            this;
        }, t.exports = d;
    }, {
        decouple: 7,
        emitter: 8
    } ],
    10: [ function(t, o, n) {
        var s, r, Q = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e;
        } : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
        };
        /* Tabulator v4.9.3 (c) Oliver Folkerd */
        s = this, r = function() {
            "use strict";
            Array.prototype.findIndex || Object.defineProperty(Array.prototype, "findIndex", {
                value: function(e) {
                    if (null == this) throw new TypeError('"this" is null or not defined');
                    var t = Object(this), o = t.length >>> 0;
                    if ("function" != typeof e) throw new TypeError("predicate must be a function");
                    for (var i = arguments[1], n = 0; n < o; ) {
                        var s = t[n];
                        if (e.call(i, s, n, t)) return n;
                        n++;
                    }
                    return -1;
                }
            }), Array.prototype.find || Object.defineProperty(Array.prototype, "find", {
                value: function(e) {
                    if (null == this) throw new TypeError('"this" is null or not defined');
                    var t = Object(this), o = t.length >>> 0;
                    if ("function" != typeof e) throw new TypeError("predicate must be a function");
                    for (var i = arguments[1], n = 0; n < o; ) {
                        var s = t[n];
                        if (e.call(i, s, n, t)) return s;
                        n++;
                    }
                }
            }), String.prototype.includes || (String.prototype.includes = function(e, t) {
                if (e instanceof RegExp) throw TypeError("first argument must not be a RegExp");
                return -1 !== this.indexOf(e, t = void 0 === t ? 0 : t);
            }), Array.prototype.includes || Object.defineProperty(Array.prototype, "includes", {
                value: function(e, t) {
                    if (null == this) throw new TypeError('"this" is null or not defined');
                    var o = Object(this), i = o.length >>> 0;
                    if (0 != i) for (var n, s, t = 0 | t, r = Math.max(0 <= t ? t : i - Math.abs(t), 0); r < i; ) {
                        if ((n = o[r]) === (s = e) || "number" == typeof n && "number" == typeof s && isNaN(n) && isNaN(s)) return !0;
                        r++;
                    }
                    return !1;
                }
            }), "function" != typeof Object.assign && Object.defineProperty(Object, "assign", {
                value: function(e, t) {
                    if (null == e) throw new TypeError("Cannot convert undefined or null to object");
                    for (var o = Object(e), i = 1; i < arguments.length; i++) {
                        var n = arguments[i];
                        if (null != n) for (var s in n) Object.prototype.hasOwnProperty.call(n, s) && (o[s] = n[s]);
                    }
                    return o;
                },
                writable: !0,
                configurable: !0
            });
            function t(e) {
                this.table = e, this.blockHozScrollEvent = !1, this.headersElement = this.createHeadersElement(), 
                this.element = this.createHeaderElement(), this.rowManager = null, 
                this.columns = [], this.columnsByIndex = [], this.columnsByField = {}, 
                this.scrollLeft = 0, this.element.insertBefore(this.headersElement, this.element.firstChild);
            }
            function o(e) {
                this.table = e, this.element = this.createHolderElement(), this.tableElement = this.createTableElement(), 
                this.heightFixer = this.createTableElement(), this.columnManager = null, 
                this.height = 0, this.firstRender = !1, this.renderMode = "virtual", 
                this.fixedHeight = !1, this.rows = [], this.activeRows = [], this.activeRowsCount = 0, 
                this.displayRows = [], this.displayRowsCount = 0, this.scrollTop = 0, 
                this.scrollLeft = 0, this.vDomRowHeight = 20, this.vDomTop = 0, 
                this.vDomBottom = 0, this.vDomScrollPosTop = 0, this.vDomScrollPosBottom = 0, 
                this.vDomTopPad = 0, this.vDomBottomPad = 0, this.vDomMaxRenderChain = 90, 
                this.vDomWindowBuffer = 0, this.vDomWindowMinTotalRows = 20, this.vDomWindowMinMarginRows = 5, 
                this.vDomTopNewRows = [], this.vDomBottomNewRows = [], this.rowNumColumn = !1, 
                this.redrawBlock = !1, this.redrawBlockRestoreConfig = !1, this.redrawBlockRederInPosition = !1;
            }
            function n(e) {
                this.table = e, this.element = this.table.rowManager.tableElement, 
                this.holderEl = this.table.rowManager.element, this.leftCol = 0, 
                this.rightCol = 0, this.scrollLeft = 0, this.vDomScrollPosLeft = 0, 
                this.vDomScrollPosRight = 0, this.vDomPadLeft = 0, this.vDomPadRight = 0, 
                this.fitDataColAvg = 0, this.window = 200, this.initialized = !1, 
                this.columns = [], this.compatabilityCheck() && this.initialize();
            }
            function g(e) {
                this._cell = e;
            }
            function s(e) {
                this.table = e, this.active = !1, this.element = this.createElement(), 
                this.external = !1, this.links = [], this._initialize();
            }
            function F(e) {
                this.table = e, this.mode = null;
            }
            function r(e) {
                this.table = e, //hold Tabulator object
                this.locale = "default", this.lang = !1, this.bindings = {}, this.langList = {};
            }
            function z(e) {
                this.table = e;
            }
            function j(e) {
                this.table = e, //hold Tabulator object
                this.allowedTypes = [ "", "data", "download", "clipboard", "print", "htmlOutput" ];
            }
            function a(e) {
                this.table = e, //hold Tabulator object
                this.config = !1, this.url = "", this.urlGenerator = !1, this.params = !1, 
                this.loaderElement = this.createLoaderElement(), this.msgElement = this.createMsgElement(), 
                this.loadingElement = !1, this.errorElement = !1, this.loaderPromise = !1, 
                this.progressiveLoad = !1, this.loading = !1, this.requestOrder = 0;
            }
            function B(e) {
                this._row = e;
            }
            function l(e) {
                this.table = e, //hold Tabulator object
                this.topCalcs = [], this.botCalcs = [], this.genColumn = !1, this.topElement = this.createElement(), 
                this.botElement = this.createElement(), this.topRow = !1, this.botRow = !1, 
                this.topInitialized = !1, this.botInitialized = !1, this.initialize();
            }
            function c(e) {
                this.table = e, this.mode = !0, this.pasteParser = function() {}, 
                this.pasteAction = function() {}, this.customSelection = !1, this.rowRange = !1, 
                this.blocked = !0;
            }
            function u(e) {
                this.table = e, this.indent = 10, this.field = "", this.collapseEl = null, 
                this.expandEl = null, this.branchEl = null, this.elementField = !1, 
                this.startOpen = function() {}, this.displayIndex = 0;
            }
            function V(e) {
                this.table = e; //hold Tabulator object
            }
            function d(e) {
                this.table = e, //hold Tabulator object
                this.currentCell = !1, this.mouseClick = !1, this.recursionBlock = !1, 
                this.invalidEdit = !1, this.editedCells = [];
            }
            function W(e, t, o, i) {
                this.type = e, this.columns = t, this.component = o || !1, this.indent = i || 0;
            }
            function G(e, t, o, i, n) {
                this.value = e, this.component = t || !1, this.width = o, this.height = i, 
                this.depth = n;
            }
            function h(e) {
                this.table = e, //hold Tabulator object
                this.config = {}, this.cloneTableStyle = !0, this.colVisProp = "";
            }
            function p(e) {
                this.table = e, //hold Tabulator object
                this.filterList = [], this.headerFilters = {}, this.headerFilterColumns = [], 
                this.prevHeaderFilterChangeCheck = "", this.prevHeaderFilterChangeCheck = "{}", 
                this.changed = !1;
            }
            function m(e) {
                this.table = e; //hold Tabulator object
            }
            function f(e) {
                this.table = e, //hold Tabulator object
                this.leftColumns = [], this.rightColumns = [], this.leftMargin = 0, 
                this.rightMargin = 0, this.rightPadding = 0, this.initializationMode = "left", 
                this.active = !1, this.scrollEndTimer = !1;
            }
            function b(e) {
                this.table = e, //hold Tabulator object
                this.topElement = document.createElement("div"), this.rows = [], 
                this.displayIndex = 0;
            }
            function v(e) {
                this._group = e, this.type = "GroupComponent";
            }
            function y(e) {
                this.table = e, //hold Tabulator object
                this.groupIDLookups = !1, this.startOpen = [ function() {
                    return !1;
                } ], this.headerGenerator = [ function() {
                    return "";
                } ], this.groupList = [], this.allowedValues = !1, this.groups = {}, 
                this.displayIndex = 0;
            }
            function w(e) {
                this.table = e, //hold Tabulator object
                this.history = [], this.index = -1;
            }
            function U(e) {
                this.table = e, //hold Tabulator object
                this.fieldIndex = [], this.hasIndex = !1;
            }
            function E(e) {
                this.table = e, //hold Tabulator object
                this.watchKeys = null, this.pressedKeys = null, this.keyupBinding = !1, 
                this.keydownBinding = !1;
            }
            function C(e) {
                this.table = e, //hold Tabulator object
                this.menuElements = [], this.blurEvent = this.hideMenu.bind(this), 
                this.escEvent = this.escMenu.bind(this), this.nestedMenuBlock = !1, 
                this.positionReversedX = !1;
            }
            function x(e) {
                this.table = e, //hold Tabulator object
                this.placeholderElement = this.createPlaceholderElement(), this.hoverElement = !1, 
                this.checkTimeout = !1, this.checkPeriod = 250, this.moving = !1, 
                this.toCol = !1, this.toColAfter = !1, this.startX = 0, this.autoScrollMargin = 40, 
                this.autoScrollStep = 5, this.autoScrollTimeout = !1, this.touchMove = !1, 
                this.moveHover = this.moveHover.bind(this), this.endMove = this.endMove.bind(this);
            }
            function _(e) {
                this.table = e, //hold Tabulator object
                this.placeholderElement = this.createPlaceholderElement(), this.hoverElement = !1, 
                this.checkTimeout = !1, this.checkPeriod = 150, this.moving = !1, 
                this.toRow = !1, this.toRowAfter = !1, this.hasHandle = !1, this.startY = 0, 
                this.startX = 0, this.moveHover = this.moveHover.bind(this), this.endMove = this.endMove.bind(this), 
                this.tableRowDropEvent = !1, this.touchMove = !1, this.connection = !1, 
                this.connectionSelectorsTables = !1, this.connectionSelectorsElements = !1, 
                this.connectionElements = [], this.connections = [], this.connectedTable = !1, 
                this.connectedRow = !1;
            }
            function K(e) {
                this.table = e, //hold Tabulator object
                this.allowedTypes = [ "", "data", "edit", "clipboard" ], this.enabled = !0;
            }
            function M(e) {
                this.table = e, //hold Tabulator object
                this.mode = "local", this.progressiveLoad = !1, this.size = 0, this.page = 1, 
                this.count = 5, this.max = 1, this.displayIndex = 0, this.initialLoad = !0, 
                this.pageSizes = [], this.dataReceivedNames = {}, this.dataSentNames = {}, 
                this.createElements();
            }
            function R(e) {
                this.table = e, //hold Tabulator object
                this.mode = "", this.id = "", this.defWatcherBlock = !1, this.config = {}, 
                this.readFunc = !1, this.writeFunc = !1;
            }
            function Y(e) {
                this.table = e, //hold Tabulator object
                this.element = !1, this.manualBlock = !1;
            }
            function S(e) {
                this.table = e, //hold Tabulator object
                this.data = !1, this.blocked = !1, this.origFuncs = {}, this.currentVersion = 0;
            }
            function q(e) {
                this.table = e, //hold Tabulator object
                this.startColumn = !1, this.startX = !1, this.startWidth = !1, this.handle = null, 
                this.prevHandle = null;
            }
            function X(e) {
                this.table = e, //hold Tabulator object
                this.startColumn = !1, this.startY = !1, this.startHeight = !1, 
                this.handle = null, this.prevHandle = null;
            }
            function $(e) {
                this.table = e, //hold Tabulator object
                this.binding = !1, this.observer = !1, this.containerObserver = !1, 
                this.tableHeight = 0, this.tableWidth = 0, this.containerHeight = 0, 
                this.containerWidth = 0, this.autoResize = !1;
            }
            function L(e) {
                this.table = e, //hold Tabulator object
                this.columns = [], this.hiddenColumns = [], this.mode = "", this.index = 0, 
                this.collapseFormatter = [], this.collapseStartOpen = !0, this.collapseHandleColumn = !1;
            }
            function T(e) {
                this.table = e, //hold Tabulator object
                this.selecting = !1, this.lastClickedRow = !1, this.selectPrev = [], 
                this.selectedRows = [], this.headerCheckboxElement = null;
            }
            function D(e) {
                this.table = e, //hold Tabulator object
                this.sortList = [], this.changed = !1;
            }
            function J(e) {
                this.table = e, this.invalidCells = [];
            }
            t.prototype.createHeadersElement = function() {
                var e = document.createElement("div");
                return e.classList.add("tabulator-headers"), e;
            }, t.prototype.createHeaderElement = function() {
                var e = document.createElement("div");
                return e.classList.add("tabulator-header"), this.table.options.headerVisible || e.classList.add("tabulator-header-hidden"), 
                e;
            }, t.prototype.initialize = function() {}, t.prototype.setRowManager = function(e) {
                this.rowManager = e;
            }, t.prototype.getElement = function() {
                return this.element;
            }, t.prototype.getHeadersElement = function() {
                return this.headersElement;
            }, t.prototype.scrollHorizontal = function(e) {
                var t = this.element.scrollWidth - this.table.element.clientWidth;
                this.element.scrollLeft = e, this.element.style.marginLeft = t < e ? -(e - t) + "px" : 0, 
                this.scrollLeft = e, this.table.modExists("frozenColumns") && this.table.modules.frozenColumns.scrollHorizontal();
            }, t.prototype.generateColumnsFromRowData = function(e) {
                var t, o, i = [], n = this.table.options.autoColumnsDefinitions;
                if (e && e.length) {
                    for (var s in t = e[0]) {
                        var r = {
                            field: s,
                            title: s
                        }, a = t[s];
                        switch (void 0 === a ? "undefined" : Q(a)) {
                          case "undefined":
                            o = "string";
                            break;

                          case "boolean":
                            o = "boolean";
                            break;

                          case "object":
                            o = Array.isArray(a) ? "array" : "string";
                            break;

                          default:
                            o = isNaN(a) || "" === a ? a.match(/((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+$/i) ? "alphanum" : "string" : "number";
                        }
                        r.sorter = o, i.push(r);
                    }
                    if (n) switch (void 0 === n ? "undefined" : Q(n)) {
                      case "function":
                        this.table.options.columns = n.call(this.table, i);
                        break;

                      case "object":
                        Array.isArray(n) ? i.forEach(function(t) {
                            var e = n.find(function(e) {
                                return e.field === t.field;
                            });
                            e && Object.assign(t, e);
                        }) : i.forEach(function(e) {
                            n[e.field] && Object.assign(e, n[e.field]);
                        }), this.table.options.columns = i;
                    } else this.table.options.columns = i;
                    this.setColumns(this.table.options.columns);
                }
            }, t.prototype.setColumns = function(e, t) {
                for (var o = this; o.headersElement.firstChild; ) o.headersElement.removeChild(o.headersElement.firstChild);
                o.columns = [], o.columnsByIndex = [], o.columnsByField = {}, o.table.modExists("frozenColumns") && o.table.modules.frozenColumns.reset(), 
                e.forEach(function(e, t) {
                    o._addColumn(e);
                }), o._reIndexColumns(), o.table.options.responsiveLayout && o.table.modExists("responsiveLayout", !0) && o.table.modules.responsiveLayout.initialize(), 
                this.table.options.virtualDomHoz && this.table.vdomHoz.reinitialize(!1, !0), 
                o.redraw(!0);
            }, t.prototype._addColumn = function(e, t, o) {
                var e = new I(e, this), i = e.getElement(), n = o && this.findColumnIndex(o);
                return o && -1 < n ? (n = this.columns.indexOf(o.getTopColumn()), 
                o = o.getElement(), t ? (this.columns.splice(n, 0, e), o.parentNode.insertBefore(i, o)) : (this.columns.splice(n + 1, 0, e), 
                o.parentNode.insertBefore(i, o.nextSibling))) : (t ? (this.columns.unshift(e), 
                this.headersElement.insertBefore(e.getElement(), this.headersElement.firstChild)) : (this.columns.push(e), 
                this.headersElement.appendChild(e.getElement())), e.columnRendered()), 
                e;
            }, t.prototype.registerColumnField = function(e) {
                e.definition.field && (this.columnsByField[e.definition.field] = e);
            }, t.prototype.registerColumnPosition = function(e) {
                this.columnsByIndex.push(e);
            }, t.prototype._reIndexColumns = function() {
                this.columnsByIndex = [], this.columns.forEach(function(e) {
                    e.reRegisterPosition();
                });
            }, t.prototype._verticalAlignHeaders = function() {
                var t = this, o = 0;
                t.columns.forEach(function(e) {
                    e.clearVerticalAlign(), e = e.getHeight(), o < e && (o = e);
                }), t.columns.forEach(function(e) {
                    e.verticalAlign(t.table.options.columnHeaderVertAlign, o);
                }), t.rowManager.adjustTableSize();
            }, t.prototype.findColumn = function(t) {
                return "object" != (void 0 === t ? "undefined" : Q(t)) ? this.columnsByField[t] || !1 : t instanceof I ? t : t instanceof k ? t._getSelf() || !1 : "undefined" != typeof HTMLElement && t instanceof HTMLElement && this.columns.find(function(e) {
                    return e.element === t;
                }) || !1;
            }, t.prototype.getColumnByField = function(e) {
                return this.columnsByField[e];
            }, t.prototype.getColumnsByFieldRoot = function(t) {
                var o = this, i = [];
                return Object.keys(this.columnsByField).forEach(function(e) {
                    e.split(".")[0] === t && i.push(o.columnsByField[e]);
                }), i;
            }, t.prototype.getColumnByIndex = function(e) {
                return this.columnsByIndex[e];
            }, t.prototype.getFirstVisibileColumn = function(e) {
                return -1 < (e = this.columnsByIndex.findIndex(function(e) {
                    return e.visible;
                })) && this.columnsByIndex[e];
            }, t.prototype.getColumns = function() {
                return this.columns;
            }, t.prototype.findColumnIndex = function(t) {
                return this.columnsByIndex.findIndex(function(e) {
                    return t === e;
                });
            }, t.prototype.getRealColumns = function() {
                return this.columnsByIndex;
            }, t.prototype.traverse = function(o) {
                this.columnsByIndex.forEach(function(e, t) {
                    o(e, t);
                });
            }, t.prototype.getDefinitions = function(t) {
                var o = [];
                return this.columnsByIndex.forEach(function(e) {
                    t && !e.visible || o.push(e.getDefinition());
                }), o;
            }, t.prototype.getDefinitionTree = function() {
                var t = [];
                return this.columns.forEach(function(e) {
                    t.push(e.getDefinition(!0));
                }), t;
            }, t.prototype.getComponents = function(e) {
                var t = [];
                return (e ? this.columns : this.columnsByIndex).forEach(function(e) {
                    t.push(e.getComponent());
                }), t;
            }, t.prototype.getWidth = function() {
                var t = 0;
                return this.columnsByIndex.forEach(function(e) {
                    e.visible && (t += e.getWidth());
                }), t;
            }, t.prototype.moveColumn = function(e, t, o) {
                this.moveColumnActual(e, t, o), this.table.options.responsiveLayout && this.table.modExists("responsiveLayout", !0) && this.table.modules.responsiveLayout.initialize(), 
                this.table.modExists("columnCalcs") && this.table.modules.columnCalcs.recalc(this.table.rowManager.activeRows), 
                t.element.parentNode.insertBefore(e.element, t.element), o && t.element.parentNode.insertBefore(t.element, e.element), 
                this._verticalAlignHeaders(), this.table.rowManager.reinitialize();
            }, t.prototype.moveColumnActual = function(e, t, o) {
                e.parent.isGroup ? this._moveColumnInArray(e.parent.columns, e, t, o) : this._moveColumnInArray(this.columns, e, t, o), 
                this._moveColumnInArray(this.columnsByIndex, e, t, o, !0), this.table.options.responsiveLayout && this.table.modExists("responsiveLayout", !0) && this.table.modules.responsiveLayout.initialize(), 
                this.table.options.virtualDomHoz && this.table.vdomHoz.reinitialize(!0), 
                this.table.options.columnMoved && this.table.options.columnMoved.call(this.table, e.getComponent(), this.table.columnManager.getComponents()), 
                this.table.options.persistence && this.table.modExists("persistence", !0) && this.table.modules.persistence.config.columns && this.table.modules.persistence.save("columns");
            }, t.prototype._moveColumnInArray = function(e, t, o, i, n) {
                var s, r = this, a = e.indexOf(t), l = [];
                -1 < a && (e.splice(a, 1), -1 < (s = e.indexOf(o)) ? i && (s += 1) : s = a, 
                e.splice(s, 0, t), n) && (this.table.options.dataTree && this.table.modExists("dataTree", !0) && this.table.rowManager.rows.forEach(function(e) {
                    l = l.concat(r.table.modules.dataTree.getTreeChildren(e, !1, !0));
                }), (l = l.concat(this.table.rowManager.rows)).forEach(function(e) {
                    var t;
                    e.cells.length && (t = e.cells.splice(a, 1)[0], e.cells.splice(s, 0, t));
                }));
            }, t.prototype.scrollToColumn = function(o, i, n) {
                var s, r = this, a = 0, l = o.getElement();
                return new Promise(function(e, t) {
                    if (void 0 === i && (i = r.table.options.scrollToColumnPosition), 
                    void 0 === n && (n = r.table.options.scrollToColumnIfVisible), 
                    o.visible) {
                        switch (i) {
                          case "middle":
                          case "center":
                            a = -r.element.clientWidth / 2;
                            break;

                          case "right":
                            a = l.clientWidth - r.headersElement.clientWidth;
                        }
                        if (!n && 0 < (s = l.offsetLeft) && s + l.offsetWidth < r.element.clientWidth) return !1;
                        s = l.offsetLeft + a, s = Math.max(Math.min(s, r.table.rowManager.element.scrollWidth - r.table.rowManager.element.clientWidth), 0), 
                        r.table.rowManager.scrollHorizontal(s), r.scrollHorizontal(s), 
                        e();
                    } else console.warn("Scroll Error - Column not visible"), t("Scroll Error - Column not visible");
                });
            }, t.prototype.generateCells = function(t) {
                var o = [];
                return this.columnsByIndex.forEach(function(e) {
                    o.push(e.generateCell(t));
                }), o;
            }, t.prototype.getFlexBaseWidth = function() {
                var o = this, i = o.table.element.clientWidth, n = 0;
                return o.rowManager.element.scrollHeight > o.rowManager.element.clientHeight && (i -= o.rowManager.element.offsetWidth - o.rowManager.element.clientWidth), 
                this.columnsByIndex.forEach(function(e) {
                    var t;
                    e.visible && (t = e.definition.width || 0, e = void 0 === e.minWidth ? o.table.options.columnMinWidth : parseInt(e.minWidth), 
                    t = "string" == typeof t ? -1 < t.indexOf("%") ? i / 100 * parseInt(t) : parseInt(t) : t, 
                    n += e < t ? t : e);
                }), n;
            }, t.prototype.addColumn = function(i, n, s) {
                var r = this;
                return new Promise(function(e, t) {
                    var o = r._addColumn(i, n, s);
                    r._reIndexColumns(), r.table.options.responsiveLayout && r.table.modExists("responsiveLayout", !0) && r.table.modules.responsiveLayout.initialize(), 
                    r.table.modExists("columnCalcs") && r.table.modules.columnCalcs.recalc(r.table.rowManager.activeRows), 
                    r.redraw(!0), "fitColumns" != r.table.modules.layout.getMode() && o.reinitializeWidth(), 
                    r._verticalAlignHeaders(), r.table.rowManager.reinitialize(), 
                    r.table.options.virtualDomHoz && r.table.vdomHoz.reinitialize(), 
                    e(o);
                });
            }, t.prototype.deregisterColumn = function(e) {
                var t = e.getField();
                t && delete this.columnsByField[t], -1 < (t = this.columnsByIndex.indexOf(e)) && this.columnsByIndex.splice(t, 1), 
                -1 < (t = this.columns.indexOf(e)) && this.columns.splice(t, 1), 
                this.table.options.responsiveLayout && this.table.modExists("responsiveLayout", !0) && this.table.modules.responsiveLayout.initialize(), 
                this._verticalAlignHeaders(), this.redraw();
            }, t.prototype.redraw = function(e) {
                e && (N.prototype.helpers.elVisible(this.element) && this._verticalAlignHeaders(), 
                this.table.rowManager.resetScroll(), this.table.rowManager.reinitialize()), 
                -1 < [ "fitColumns", "fitDataStretch" ].indexOf(this.table.modules.layout.getMode()) || e ? this.table.modules.layout.layout() : this.table.options.responsiveLayout && this.table.modExists("responsiveLayout", !0) && this.table.modules.responsiveLayout.update(), 
                this.table.modExists("frozenColumns") && this.table.modules.frozenColumns.layout(), 
                this.table.modExists("columnCalcs") && this.table.modules.columnCalcs.recalc(this.table.rowManager.activeRows), 
                e && (this.table.options.persistence && this.table.modExists("persistence", !0) && this.table.modules.persistence.config.columns && this.table.modules.persistence.save("columns"), 
                this.table.modExists("columnCalcs")) && this.table.modules.columnCalcs.redraw(), 
                this.table.footerManager.redraw();
            };
            var k = function(e) {
                this._column = e, this.type = "ColumnComponent";
            }, I = (k.prototype.getElement = function() {
                return this._column.getElement();
            }, k.prototype.getDefinition = function() {
                return this._column.getDefinition();
            }, k.prototype.getField = function() {
                return this._column.getField();
            }, k.prototype.getCells = function() {
                var t = [];
                return this._column.cells.forEach(function(e) {
                    t.push(e.getComponent());
                }), t;
            }, k.prototype.getVisibility = function() {
                return console.warn("getVisibility function is deprecated, you should now use the isVisible function"), 
                this._column.visible;
            }, k.prototype.isVisible = function() {
                return this._column.visible;
            }, k.prototype.show = function() {
                this._column.isGroup ? this._column.columns.forEach(function(e) {
                    e.show();
                }) : this._column.show();
            }, k.prototype.hide = function() {
                this._column.isGroup ? this._column.columns.forEach(function(e) {
                    e.hide();
                }) : this._column.hide();
            }, k.prototype.toggle = function() {
                this._column.visible ? this.hide() : this.show();
            }, k.prototype.delete = function() {
                return this._column.delete();
            }, k.prototype.getSubColumns = function() {
                var t = [];
                return this._column.columns.length && this._column.columns.forEach(function(e) {
                    t.push(e.getComponent());
                }), t;
            }, k.prototype.getParentColumn = function() {
                return this._column.parent instanceof I && this._column.parent.getComponent();
            }, k.prototype._getSelf = function() {
                return this._column;
            }, k.prototype.scrollTo = function() {
                return this._column.table.columnManager.scrollToColumn(this._column);
            }, k.prototype.getTable = function() {
                return this._column.table;
            }, k.prototype.headerFilterFocus = function() {
                this._column.table.modExists("filter", !0) && this._column.table.modules.filter.setHeaderFilterFocus(this._column);
            }, k.prototype.reloadHeaderFilter = function() {
                this._column.table.modExists("filter", !0) && this._column.table.modules.filter.reloadHeaderFilter(this._column);
            }, k.prototype.getHeaderFilterValue = function() {
                if (this._column.table.modExists("filter", !0)) return this._column.table.modules.filter.getHeaderFilterValue(this._column);
            }, k.prototype.setHeaderFilterValue = function(e) {
                this._column.table.modExists("filter", !0) && this._column.table.modules.filter.setHeaderFilterValue(this._column, e);
            }, k.prototype.move = function(e, t) {
                e = this._column.table.columnManager.findColumn(e);
                e ? this._column.table.columnManager.moveColumn(this._column, e, t) : console.warn("Move Error - No matching column found:", e);
            }, k.prototype.getNextColumn = function() {
                var e = this._column.nextColumn();
                return !!e && e.getComponent();
            }, k.prototype.getPrevColumn = function() {
                var e = this._column.prevColumn();
                return !!e && e.getComponent();
            }, k.prototype.updateDefinition = function(e) {
                return this._column.updateDefinition(e);
            }, k.prototype.getWidth = function() {
                return this._column.getWidth();
            }, k.prototype.setWidth = function(e) {
                e = !0 === e ? this._column.reinitializeWidth(!0) : this._column.setWidth(e);
                return this._column.table.options.virtualDomHoz && this._column.table.vdomHoz.reinitialize(!0), 
                e;
            }, k.prototype.validate = function() {
                return this._column.validate();
            }, function o(e, t) {
                var i = this;
                this.table = t.table, this.definition = e, this.parent = t, this.type = "column", 
                this.columns = [], this.cells = [], this.element = this.createElement(), 
                this.contentElement = !1, this.titleHolderElement = !1, this.titleElement = !1, 
                this.groupElement = this.createGroupElement(), this.isGroup = !1, 
                this.tooltip = !1, this.hozAlign = "", this.vertAlign = "", this.field = "", 
                this.fieldStructure = "", this.getFieldValue = "", this.setFieldValue = "", 
                this.titleFormatterRendered = !1, this.setField(this.definition.field), 
                this.table.options.invalidOptionWarnings && this.checkDefinition(), 
                this.modules = {}, this.cellEvents = {
                    cellClick: !1,
                    cellDblClick: !1,
                    cellContext: !1,
                    cellTap: !1,
                    cellDblTap: !1,
                    cellTapHold: !1,
                    cellMouseEnter: !1,
                    cellMouseLeave: !1,
                    cellMouseOver: !1,
                    cellMouseOut: !1,
                    cellMouseMove: !1
                }, this.width = null, this.widthStyled = "", this.maxWidth = null, 
                this.maxWidthStyled = "", this.minWidth = null, this.minWidthStyled = "", 
                this.widthFixed = !1, this.visible = !0, this.component = null, 
                this._mapDepricatedFunctionality(), e.columns ? (this.isGroup = !0, 
                e.columns.forEach(function(e, t) {
                    e = new o(e, i);
                    i.attachColumn(e);
                }), i.checkColumnVisibility()) : t.registerColumnField(this), e.rowHandle && !1 !== this.table.options.movableRows && this.table.modExists("moveRow") && this.table.modules.moveRow.setHandle(!0), 
                this._buildHeader(), this.bindModuleColumns();
            }), O = (I.prototype.createElement = function() {
                var e = document.createElement("div");
                return e.classList.add("tabulator-col"), e.setAttribute("role", "columnheader"), 
                e.setAttribute("aria-sort", "none"), e;
            }, I.prototype.createGroupElement = function() {
                var e = document.createElement("div");
                return e.classList.add("tabulator-col-group-cols"), e;
            }, I.prototype.checkDefinition = function() {
                var t = this;
                Object.keys(this.definition).forEach(function(e) {
                    -1 === t.defaultOptionList.indexOf(e) && console.warn("Invalid column definition option in '" + (t.field || t.definition.title) + "' column:", e);
                });
            }, I.prototype.setField = function(e) {
                this.field = e, this.fieldStructure = e ? this.table.options.nestedFieldSeparator ? e.split(this.table.options.nestedFieldSeparator) : [ e ] : [], 
                this.getFieldValue = 1 < this.fieldStructure.length ? this._getNestedData : this._getFlatData, 
                this.setFieldValue = 1 < this.fieldStructure.length ? this._setNestedData : this._setFlatData;
            }, I.prototype.registerColumnPosition = function(e) {
                this.parent.registerColumnPosition(e);
            }, I.prototype.registerColumnField = function(e) {
                this.parent.registerColumnField(e);
            }, I.prototype.reRegisterPosition = function() {
                this.isGroup ? this.columns.forEach(function(e) {
                    e.reRegisterPosition();
                }) : this.registerColumnPosition(this);
            }, I.prototype._mapDepricatedFunctionality = function() {
                void 0 !== this.definition.hideInHtml && (this.definition.htmlOutput = !this.definition.hideInHtml, 
                console.warn("hideInHtml column definition property is deprecated, you should now use htmlOutput")), 
                void 0 !== this.definition.align && (this.definition.hozAlign = this.definition.align, 
                console.warn("align column definition property is deprecated, you should now use hozAlign")), 
                void 0 !== this.definition.downloadTitle && (this.definition.titleDownload = this.definition.downloadTitle, 
                console.warn("downloadTitle definition property is deprecated, you should now use titleDownload"));
            }, I.prototype.setTooltip = function() {
                var t = this, o = t.definition, e = o.headerTooltip || !1 === o.tooltip ? o.headerTooltip : t.table.options.tooltipsHeader;
                e ? !0 === e ? o.field ? t.table.modules.localize.bind("columns|" + o.field, function(e) {
                    t.element.setAttribute("title", e || o.title);
                }) : t.element.setAttribute("title", o.title) : ("function" == typeof e && !1 === (e = e(t.getComponent())) && (e = ""), 
                t.element.setAttribute("title", e)) : t.element.setAttribute("title", "");
            }, I.prototype._buildHeader = function() {
                for (var t = this, e = t.definition; t.element.firstChild; ) t.element.removeChild(t.element.firstChild);
                e.headerVertical && (t.element.classList.add("tabulator-col-vertical"), 
                "flip" === e.headerVertical) && t.element.classList.add("tabulator-col-vertical-flip"), 
                t.contentElement = t._bindEvents(), t.contentElement = t._buildColumnHeaderContent(), 
                t.element.appendChild(t.contentElement), t.isGroup ? t._buildGroupHeader() : t._buildColumnHeader(), 
                t.setTooltip(), t.table.options.resizableColumns && t.table.modExists("resizeColumns") && t.table.modules.resizeColumns.initializeColumn("header", t, t.element), 
                e.headerFilter && t.table.modExists("filter") && t.table.modExists("edit") && (void 0 !== e.headerFilterPlaceholder && e.field && t.table.modules.localize.setHeaderFilterColumnPlaceholder(e.field, e.headerFilterPlaceholder), 
                t.table.modules.filter.initializeColumn(t)), t.table.modExists("frozenColumns") && t.table.modules.frozenColumns.initializeColumn(t), 
                t.table.options.movableColumns && !t.isGroup && t.table.modExists("moveColumn") && t.table.modules.moveColumn.initializeColumn(t), 
                (e.topCalc || e.bottomCalc) && t.table.modExists("columnCalcs") && t.table.modules.columnCalcs.initializeColumn(t), 
                t.table.modExists("persistence") && t.table.modules.persistence.config.columns && t.table.modules.persistence.initializeColumn(t), 
                t.element.addEventListener("mouseenter", function(e) {
                    t.setTooltip();
                });
            }, I.prototype._bindEvents = function() {
                var t, o, i, n = this, s = n.definition;
                "function" == typeof s.headerClick && n.element.addEventListener("click", function(e) {
                    s.headerClick(e, n.getComponent());
                }), "function" == typeof s.headerDblClick && n.element.addEventListener("dblclick", function(e) {
                    s.headerDblClick(e, n.getComponent());
                }), "function" == typeof s.headerContext && n.element.addEventListener("contextmenu", function(e) {
                    s.headerContext(e, n.getComponent());
                }), "function" == typeof s.headerTap && (i = !1, n.element.addEventListener("touchstart", function(e) {
                    i = !0;
                }, {
                    passive: !0
                }), n.element.addEventListener("touchend", function(e) {
                    i && s.headerTap(e, n.getComponent()), i = !1;
                })), "function" == typeof s.headerDblTap && (t = null, n.element.addEventListener("touchend", function(e) {
                    t ? (clearTimeout(t), t = null, s.headerDblTap(e, n.getComponent())) : t = setTimeout(function() {
                        clearTimeout(t), t = null;
                    }, 300);
                })), "function" == typeof s.headerTapHold && (o = null, n.element.addEventListener("touchstart", function(e) {
                    clearTimeout(o), o = setTimeout(function() {
                        clearTimeout(o), o = null, i = !1, s.headerTapHold(e, n.getComponent());
                    }, 1e3);
                }, {
                    passive: !0
                }), n.element.addEventListener("touchend", function(e) {
                    clearTimeout(o), o = null;
                })), "function" == typeof s.cellClick && (n.cellEvents.cellClick = s.cellClick), 
                "function" == typeof s.cellDblClick && (n.cellEvents.cellDblClick = s.cellDblClick), 
                "function" == typeof s.cellContext && (n.cellEvents.cellContext = s.cellContext), 
                "function" == typeof s.cellMouseEnter && (n.cellEvents.cellMouseEnter = s.cellMouseEnter), 
                "function" == typeof s.cellMouseLeave && (n.cellEvents.cellMouseLeave = s.cellMouseLeave), 
                "function" == typeof s.cellMouseOver && (n.cellEvents.cellMouseOver = s.cellMouseOver), 
                "function" == typeof s.cellMouseOut && (n.cellEvents.cellMouseOut = s.cellMouseOut), 
                "function" == typeof s.cellMouseMove && (n.cellEvents.cellMouseMove = s.cellMouseMove), 
                "function" == typeof s.cellTap && (n.cellEvents.cellTap = s.cellTap), 
                "function" == typeof s.cellDblTap && (n.cellEvents.cellDblTap = s.cellDblTap), 
                "function" == typeof s.cellTapHold && (n.cellEvents.cellTapHold = s.cellTapHold), 
                "function" == typeof s.cellEdited && (n.cellEvents.cellEdited = s.cellEdited), 
                "function" == typeof s.cellEditing && (n.cellEvents.cellEditing = s.cellEditing), 
                "function" == typeof s.cellEditCancelled && (n.cellEvents.cellEditCancelled = s.cellEditCancelled);
            }, I.prototype._buildColumnHeader = function() {
                var t = this, e = this.definition, o = this.table;
                o.modExists("sort") && o.modules.sort.initializeColumn(this, this.titleHolderElement), 
                (e.headerContextMenu || e.headerClickMenu || e.headerMenu) && o.modExists("menu") && o.modules.menu.initializeColumnHeader(this), 
                o.modExists("format") && o.modules.format.initializeColumn(this), 
                void 0 !== e.editor && o.modExists("edit") && o.modules.edit.initializeColumn(this), 
                void 0 !== e.validator && o.modExists("validate") && o.modules.validate.initializeColumn(this), 
                o.modExists("mutator") && o.modules.mutator.initializeColumn(this), 
                o.modExists("accessor") && o.modules.accessor.initializeColumn(this), 
                Q(o.options.responsiveLayout) && o.modExists("responsiveLayout") && o.modules.responsiveLayout.initializeColumn(this), 
                void 0 !== e.visible && (e.visible ? this.show(!0) : this.hide(!0)), 
                e.cssClass && e.cssClass.split(" ").forEach(function(e) {
                    t.element.classList.add(e);
                }), e.field && this.element.setAttribute("tabulator-field", e.field), 
                this.setMinWidth(void 0 === e.minWidth ? this.table.options.columnMinWidth : parseInt(e.minWidth)), 
                (e.maxWidth || this.table.options.columnMaxWidth) && !1 !== e.maxWidth && this.setMaxWidth(void 0 === e.maxWidth ? this.table.options.columnMaxWidth : parseInt(e.maxWidth)), 
                this.reinitializeWidth(), this.tooltip = this.definition.tooltip || !1 === this.definition.tooltip ? this.definition.tooltip : this.table.options.tooltips, 
                this.hozAlign = void 0 === this.definition.hozAlign ? this.table.options.cellHozAlign : this.definition.hozAlign, 
                this.vertAlign = void 0 === this.definition.vertAlign ? this.table.options.cellVertAlign : this.definition.vertAlign, 
                this.titleElement.style.textAlign = this.definition.headerHozAlign || this.table.options.headerHozAlign;
            }, I.prototype._buildColumnHeaderContent = function() {
                this.definition, this.table;
                var e = document.createElement("div");
                return e.classList.add("tabulator-col-content"), this.titleHolderElement = document.createElement("div"), 
                this.titleHolderElement.classList.add("tabulator-col-title-holder"), 
                e.appendChild(this.titleHolderElement), this.titleElement = this._buildColumnHeaderTitle(), 
                this.titleHolderElement.appendChild(this.titleElement), e;
            }, I.prototype._buildColumnHeaderTitle = function() {
                var t, o = this, i = o.definition, e = o.table, n = document.createElement("div");
                return n.classList.add("tabulator-col-title"), i.editableTitle ? ((t = document.createElement("input")).classList.add("tabulator-title-editor"), 
                t.addEventListener("click", function(e) {
                    e.stopPropagation(), t.focus();
                }), t.addEventListener("change", function() {
                    i.title = t.value, e.options.columnTitleChanged.call(o.table, o.getComponent());
                }), n.appendChild(t), i.field ? e.modules.localize.bind("columns|" + i.field, function(e) {
                    t.value = e || i.title || "&nbsp;";
                }) : t.value = i.title || "&nbsp;") : i.field ? e.modules.localize.bind("columns|" + i.field, function(e) {
                    o._formatColumnHeaderTitle(n, e || i.title || "&nbsp;");
                }) : o._formatColumnHeaderTitle(n, i.title || "&nbsp;"), n;
            }, I.prototype._formatColumnHeaderTitle = function(e, t) {
                var o, i, n, s, r, a = this;
                if (this.definition.titleFormatter && this.table.modExists("format")) switch (o = this.table.modules.format.getFormatter(this.definition.titleFormatter), 
                r = function(e) {
                    a.titleFormatterRendered = e;
                }, s = {
                    getValue: function() {
                        return t;
                    },
                    getElement: function() {
                        return e;
                    }
                }, n = "function" == typeof (n = this.definition.titleFormatterParams || {}) ? n() : n, 
                void 0 === (i = o.call(this.table.modules.format, s, n, r)) ? "undefined" : Q(i)) {
                  case "object":
                    i instanceof Node ? e.appendChild(i) : (e.innerHTML = "", console.warn("Format Error - Title formatter has returned a type of object, the only valid formatter object return is an instance of Node, the formatter returned:", i));
                    break;

                  case "undefined":
                  case "null":
                    e.innerHTML = "";
                    break;

                  default:
                    e.innerHTML = i;
                } else e.innerHTML = t;
            }, I.prototype._buildGroupHeader = function() {
                var t = this;
                this.element.classList.add("tabulator-col-group"), this.element.setAttribute("role", "columngroup"), 
                this.element.setAttribute("aria-title", this.definition.title), 
                this.definition.cssClass && this.definition.cssClass.split(" ").forEach(function(e) {
                    t.element.classList.add(e);
                }), (this.definition.headerContextMenu || this.definition.headerMenu) && this.table.modExists("menu") && this.table.modules.menu.initializeColumnHeader(this), 
                this.titleElement.style.textAlign = this.definition.headerHozAlign || this.table.options.headerHozAlign, 
                this.element.appendChild(this.groupElement);
            }, I.prototype._getFlatData = function(e) {
                return e[this.field];
            }, I.prototype._getNestedData = function(e) {
                for (var t, o = e, i = this.fieldStructure, n = i.length, s = 0; s < n && (t = o = o[i[s]]); s++);
                return t;
            }, I.prototype._setFlatData = function(e, t) {
                this.field && (e[this.field] = t);
            }, I.prototype._setNestedData = function(e, t) {
                for (var o = e, i = this.fieldStructure, n = i.length, s = 0; s < n; s++) if (s == n - 1) o[i[s]] = t; else {
                    if (!o[i[s]]) {
                        if (void 0 === t) break;
                        o[i[s]] = {};
                    }
                    o = o[i[s]];
                }
            }, I.prototype.attachColumn = function(e) {
                this.groupElement ? (this.columns.push(e), this.groupElement.appendChild(e.getElement())) : console.warn("Column Warning - Column being attached to another column instead of column group");
            }, I.prototype.verticalAlign = function(t, e) {
                e = this.parent.isGroup ? this.parent.getGroupElement().clientHeight : e || this.parent.getHeadersElement().clientHeight;
                this.element.style.height = e + "px", this.isGroup && (this.groupElement.style.minHeight = e - this.contentElement.offsetHeight + "px"), 
                this.isGroup || "top" === t || (this.element.style.paddingTop = "bottom" === t ? this.element.clientHeight - this.contentElement.offsetHeight + "px" : (this.element.clientHeight - this.contentElement.offsetHeight) / 2 + "px"), 
                this.columns.forEach(function(e) {
                    e.verticalAlign(t);
                });
            }, I.prototype.clearVerticalAlign = function() {
                this.element.style.paddingTop = "", this.element.style.height = "", 
                this.element.style.minHeight = "", this.groupElement.style.minHeight = "", 
                this.columns.forEach(function(e) {
                    e.clearVerticalAlign();
                });
            }, I.prototype.bindModuleColumns = function() {
                "rownum" == this.definition.formatter && (this.table.rowManager.rowNumColumn = this);
            }, I.prototype.getElement = function() {
                return this.element;
            }, I.prototype.getGroupElement = function() {
                return this.groupElement;
            }, I.prototype.getField = function() {
                return this.field;
            }, I.prototype.getFirstColumn = function() {
                return this.isGroup ? !!this.columns.length && this.columns[0].getFirstColumn() : this;
            }, I.prototype.getLastColumn = function() {
                return this.isGroup ? !!this.columns.length && this.columns[this.columns.length - 1].getLastColumn() : this;
            }, I.prototype.getColumns = function() {
                return this.columns;
            }, I.prototype.getCells = function() {
                return this.cells;
            }, I.prototype.getTopColumn = function() {
                return this.parent.isGroup ? this.parent.getTopColumn() : this;
            }, I.prototype.getDefinition = function(e) {
                var t = [];
                return this.isGroup && e && (this.columns.forEach(function(e) {
                    t.push(e.getDefinition(!0));
                }), this.definition.columns = t), this.definition;
            }, I.prototype.checkColumnVisibility = function() {
                var t = !1;
                this.columns.forEach(function(e) {
                    e.visible && (t = !0);
                }), t ? (this.show(), this.parent.table.options.columnVisibilityChanged.call(this.table, this.getComponent(), !1)) : this.hide();
            }, I.prototype.show = function(e, t) {
                this.visible || (this.visible = !0, this.element.style.display = "", 
                this.parent.isGroup && this.parent.checkColumnVisibility(), this.cells.forEach(function(e) {
                    e.show();
                }), this.isGroup || null !== this.width || this.reinitializeWidth(), 
                this.table.columnManager._verticalAlignHeaders(), this.table.options.persistence && this.table.modExists("persistence", !0) && this.table.modules.persistence.config.columns && this.table.modules.persistence.save("columns"), 
                !t && this.table.options.responsiveLayout && this.table.modExists("responsiveLayout", !0) && this.table.modules.responsiveLayout.updateColumnVisibility(this, this.visible), 
                e || this.table.options.columnVisibilityChanged.call(this.table, this.getComponent(), !0), 
                this.parent.isGroup && this.parent.matchChildWidths(), !this.silent && this.table.options.virtualDomHoz && this.table.vdomHoz.reinitialize());
            }, I.prototype.hide = function(e, t) {
                this.visible && (this.visible = !1, this.element.style.display = "none", 
                this.table.columnManager._verticalAlignHeaders(), this.parent.isGroup && this.parent.checkColumnVisibility(), 
                this.cells.forEach(function(e) {
                    e.hide();
                }), this.table.options.persistence && this.table.modExists("persistence", !0) && this.table.modules.persistence.config.columns && this.table.modules.persistence.save("columns"), 
                !t && this.table.options.responsiveLayout && this.table.modExists("responsiveLayout", !0) && this.table.modules.responsiveLayout.updateColumnVisibility(this, this.visible), 
                e || this.table.options.columnVisibilityChanged.call(this.table, this.getComponent(), !1), 
                this.parent.isGroup && this.parent.matchChildWidths(), !this.silent) && this.table.options.virtualDomHoz && this.table.vdomHoz.reinitialize();
            }, I.prototype.matchChildWidths = function() {
                var t = 0;
                this.contentElement && this.columns.length && (this.columns.forEach(function(e) {
                    e.visible && (t += e.getWidth());
                }), this.contentElement.style.maxWidth = t - 1 + "px", this.parent.isGroup) && this.parent.matchChildWidths();
            }, I.prototype.removeChild = function(e) {
                e = this.columns.indexOf(e);
                -1 < e && this.columns.splice(e, 1), this.columns.length || this.delete();
            }, I.prototype.setWidth = function(e) {
                this.widthFixed = !0, this.setWidthActual(e);
            }, I.prototype.setWidthActual = function(e) {
                isNaN(e) && (e = Math.floor(this.table.element.clientWidth / 100 * parseInt(e))), 
                e = Math.max(this.minWidth, e), this.maxWidth && (e = Math.min(this.maxWidth, e)), 
                this.width = e, this.widthStyled = e ? e + "px" : "", this.element.style.width = this.widthStyled, 
                this.isGroup || this.cells.forEach(function(e) {
                    e.setWidth();
                }), this.parent.isGroup && this.parent.matchChildWidths(), this.table.modExists("frozenColumns") && this.table.modules.frozenColumns.layout();
            }, I.prototype.checkCellHeights = function() {
                var t = [];
                this.cells.forEach(function(e) {
                    e.row.heightInitialized && (null !== e.row.getElement().offsetParent ? (t.push(e.row), 
                    e.row.clearCellHeight()) : e.row.heightInitialized = !1);
                }), t.forEach(function(e) {
                    e.calcHeight();
                }), t.forEach(function(e) {
                    e.setCellHeight();
                });
            }, I.prototype.getWidth = function() {
                var t = 0;
                return this.isGroup ? this.columns.forEach(function(e) {
                    e.visible && (t += e.getWidth());
                }) : t = this.width, t;
            }, I.prototype.getHeight = function() {
                return this.element.offsetHeight;
            }, I.prototype.setMinWidth = function(e) {
                this.minWidth = e, this.minWidthStyled = e ? e + "px" : "", this.element.style.minWidth = this.minWidthStyled, 
                this.cells.forEach(function(e) {
                    e.setMinWidth();
                });
            }, I.prototype.setMaxWidth = function(e) {
                this.maxWidth = e, this.maxWidthStyled = e ? e + "px" : "", this.element.style.maxWidth = this.maxWidthStyled, 
                this.cells.forEach(function(e) {
                    e.setMaxWidth();
                });
            }, I.prototype.delete = function() {
                var n = this;
                return new Promise(function(e, t) {
                    n.isGroup && n.columns.forEach(function(e) {
                        e.delete();
                    }), n.table.modExists("edit") && n.table.modules.edit.currentCell.column === n && n.table.modules.edit.cancelEdit();
                    for (var o = n.cells.length, i = 0; i < o; i++) n.cells[0].delete();
                    n.element.parentNode && n.element.parentNode.removeChild(n.element), 
                    n.element = !1, n.contentElement = !1, n.titleElement = !1, 
                    n.groupElement = !1, n.parent.isGroup && n.parent.removeChild(n), 
                    n.table.columnManager.deregisterColumn(n), n.table.options.virtualDomHoz && n.table.vdomHoz.reinitialize(!0), 
                    e();
                });
            }, I.prototype.columnRendered = function() {
                this.titleFormatterRendered && this.titleFormatterRendered();
            }, I.prototype.validate = function() {
                var t = [];
                return this.cells.forEach(function(e) {
                    e.validate() || t.push(e.getComponent());
                }), !t.length || t;
            }, I.prototype.generateCell = function(e) {
                e = new P(this, e);
                return this.cells.push(e), e;
            }, I.prototype.nextColumn = function() {
                var e = this.table.columnManager.findColumnIndex(this);
                return -1 < e && this._nextVisibleColumn(e + 1);
            }, I.prototype._nextVisibleColumn = function(e) {
                var t = this.table.columnManager.getColumnByIndex(e);
                return !t || t.visible ? t : this._nextVisibleColumn(e + 1);
            }, I.prototype.prevColumn = function() {
                var e = this.table.columnManager.findColumnIndex(this);
                return -1 < e && this._prevVisibleColumn(e - 1);
            }, I.prototype._prevVisibleColumn = function(e) {
                var t = this.table.columnManager.getColumnByIndex(e);
                return !t || t.visible ? t : this._prevVisibleColumn(e - 1);
            }, I.prototype.reinitializeWidth = function(e) {
                this.widthFixed = !1, void 0 === this.definition.width || e || this.setWidth(this.definition.width), 
                this.table.modExists("filter") && this.table.modules.filter.hideHeaderFilterElements(), 
                this.fitToData(), this.table.modExists("filter") && this.table.modules.filter.showHeaderFilterElements();
            }, I.prototype.fitToData = function() {
                this.widthFixed || (this.element.style.width = "", this.cells.forEach(function(e) {
                    e.clearWidth();
                }));
                var t = this.element.offsetWidth;
                this.width && this.widthFixed || (this.cells.forEach(function(e) {
                    e = e.getWidth();
                    t < e && (t = e);
                }), t && this.setWidthActual(t + 1));
            }, I.prototype.updateDefinition = function(e) {
                var n = this;
                return new Promise(function(t, o) {
                    var i;
                    n.isGroup || n.parent.isGroup ? (console.warn("Column Update Error - The updateDefinition function is only available on ungrouped columns"), 
                    o("Column Update Error - The updateDefinition function is only available on columns, not column groups")) : (i = Object.assign({}, n.getDefinition()), 
                    i = Object.assign(i, e), n.table.columnManager.addColumn(i, !1, n).then(function(e) {
                        i.field == n.field && (n.field = !1), n.delete().then(function() {
                            t(e.getComponent());
                        }).catch(function(e) {
                            o(e);
                        });
                    }).catch(function(e) {
                        o(e);
                    }));
                });
            }, I.prototype.deleteCell = function(e) {
                e = this.cells.indexOf(e);
                -1 < e && this.cells.splice(e, 1);
            }, I.prototype.defaultOptionList = [ "title", "field", "columns", "visible", "align", "hozAlign", "vertAlign", "width", "minWidth", "maxWidth", "widthGrow", "widthShrink", "resizable", "frozen", "responsive", "tooltip", "cssClass", "rowHandle", "hideInHtml", "print", "htmlOutput", "sorter", "sorterParams", "formatter", "formatterParams", "variableHeight", "editable", "editor", "editorParams", "validator", "mutator", "mutatorParams", "mutatorData", "mutatorDataParams", "mutatorEdit", "mutatorEditParams", "mutatorClipboard", "mutatorClipboardParams", "accessor", "accessorParams", "accessorData", "accessorDataParams", "accessorDownload", "accessorDownloadParams", "accessorClipboard", "accessorClipboardParams", "accessorPrint", "accessorPrintParams", "accessorHtmlOutput", "accessorHtmlOutputParams", "clipboard", "download", "downloadTitle", "topCalc", "topCalcParams", "topCalcFormatter", "topCalcFormatterParams", "bottomCalc", "bottomCalcParams", "bottomCalcFormatter", "bottomCalcFormatterParams", "cellClick", "cellDblClick", "cellContext", "cellTap", "cellDblTap", "cellTapHold", "cellMouseEnter", "cellMouseLeave", "cellMouseOver", "cellMouseOut", "cellMouseMove", "cellEditing", "cellEdited", "cellEditCancelled", "headerSort", "headerSortStartingDir", "headerSortTristate", "headerClick", "headerDblClick", "headerContext", "headerTap", "headerDblTap", "headerTapHold", "headerTooltip", "headerVertical", "headerHozAlign", "editableTitle", "titleFormatter", "titleFormatterParams", "headerFilter", "headerFilterPlaceholder", "headerFilterParams", "headerFilterEmptyCheck", "headerFilterFunc", "headerFilterFuncParams", "headerFilterLiveFilter", "print", "headerContextMenu", "headerMenu", "contextMenu", "clickMenu", "formatterPrint", "formatterPrintParams", "formatterClipboard", "formatterClipboardParams", "formatterHtmlOutput", "formatterHtmlOutputParams", "titlePrint", "titleClipboard", "titleHtmlOutput", "titleDownload" ], 
            I.prototype.getComponent = function() {
                return this.component || (this.component = new k(this)), this.component;
            }, o.prototype.createHolderElement = function() {
                var e = document.createElement("div");
                return e.classList.add("tabulator-tableHolder"), e.setAttribute("tabindex", 0), 
                e;
            }, o.prototype.createTableElement = function() {
                var e = document.createElement("div");
                return e.classList.add("tabulator-table"), e;
            }, o.prototype.getElement = function() {
                return this.element;
            }, o.prototype.getTableElement = function() {
                return this.tableElement;
            }, o.prototype.getRowPosition = function(e, t) {
                return (t ? this.activeRows : this.rows).indexOf(e);
            }, o.prototype.setColumnManager = function(e) {
                this.columnManager = e;
            }, o.prototype.initialize = function() {
                var o = this;
                o.setRenderMode(), o.element.appendChild(o.tableElement), o.firstRender = !0, 
                o.element.addEventListener("scroll", function() {
                    var e = o.element.scrollLeft;
                    o.scrollLeft != e && (o.columnManager.scrollHorizontal(e), o.table.options.groupBy && o.table.modules.groupRows.scrollHeaders(e), 
                    o.table.modExists("columnCalcs") && o.table.modules.columnCalcs.scrollHorizontal(e), 
                    o.table.options.scrollHorizontal(e)), o.scrollLeft = e;
                }), "virtual" === this.renderMode && o.element.addEventListener("scroll", function() {
                    var e = o.element.scrollTop, t = o.scrollTop > e;
                    o.scrollTop != e ? (o.scrollTop = e, o.scrollVertical(t), "scroll" == o.table.options.ajaxProgressiveLoad && o.table.modules.ajax.nextPage(o.element.scrollHeight - o.element.clientHeight - e), 
                    o.table.options.scrollVertical(e)) : o.scrollTop = e;
                });
            }, o.prototype.findRow = function(t) {
                var o = this;
                return "object" != (void 0 === t ? "undefined" : Q(t)) ? null != t && o.rows.find(function(e) {
                    return e.data[o.table.options.index] == t;
                }) || !1 : t instanceof A ? t : t instanceof O ? t._getSelf() || !1 : "undefined" != typeof HTMLElement && t instanceof HTMLElement && o.rows.find(function(e) {
                    return e.getElement() === t;
                }) || !1;
            }, o.prototype.getRowFromDataObject = function(t) {
                return this.rows.find(function(e) {
                    return e.data === t;
                }) || !1;
            }, o.prototype.getRowFromPosition = function(e, t) {
                return (t ? this.activeRows : this.rows)[e];
            }, o.prototype.scrollToRow = function(e, o, i) {
                var n, s, r = this, a = this.getDisplayRows().indexOf(e), l = e.getElement();
                return new Promise(function(e, t) {
                    if (-1 < a) {
                        if (void 0 === o && (o = r.table.options.scrollToRowPosition), 
                        void 0 === i && (i = r.table.options.scrollToRowIfVisible), 
                        "nearest" === o) switch (r.renderMode) {
                          case "classic":
                            n = N.prototype.helpers.elOffset(l).top, o = Math.abs(r.element.scrollTop - n) > Math.abs(r.element.scrollTop + r.element.clientHeight - n) ? "bottom" : "top";
                            break;

                          case "virtual":
                            o = Math.abs(r.vDomTop - a) > Math.abs(r.vDomBottom - a) ? "bottom" : "top";
                        }
                        if (!i && N.prototype.helpers.elVisible(l) && 0 < (s = N.prototype.helpers.elOffset(l).top - N.prototype.helpers.elOffset(r.element).top) && s < r.element.clientHeight - l.offsetHeight) return !1;
                        switch (r.renderMode) {
                          case "classic":
                            r.element.scrollTop = N.prototype.helpers.elOffset(l).top - N.prototype.helpers.elOffset(r.element).top + r.element.scrollTop;
                            break;

                          case "virtual":
                            r._virtualRenderFill(a, !0);
                        }
                        switch (o) {
                          case "middle":
                          case "center":
                            r.element.scrollHeight - r.element.scrollTop == r.element.clientHeight ? r.element.scrollTop = r.element.scrollTop + (l.offsetTop - r.element.scrollTop) - (r.element.scrollHeight - l.offsetTop) / 2 : r.element.scrollTop = r.element.scrollTop - r.element.clientHeight / 2;
                            break;

                          case "bottom":
                            r.element.scrollHeight - r.element.scrollTop == r.element.clientHeight ? r.element.scrollTop = r.element.scrollTop - (r.element.scrollHeight - l.offsetTop) + l.offsetHeight : r.element.scrollTop = r.element.scrollTop - r.element.clientHeight + l.offsetHeight;
                        }
                        e();
                    } else console.warn("Scroll Error - Row not visible"), t("Scroll Error - Row not visible");
                });
            }, o.prototype.setData = function(o, i, n) {
                var s = this, r = this;
                return new Promise(function(e, t) {
                    i && s.getDisplayRows().length ? r.table.options.pagination ? r._setDataActual(o, !0) : s.reRenderInPosition(function() {
                        r._setDataActual(o);
                    }) : (s.table.options.autoColumns && n && s.table.columnManager.generateColumnsFromRowData(o), 
                    s.resetScroll(), s._setDataActual(o)), e();
                });
            }, o.prototype._setDataActual = function(e, t) {
                var i = this;
                i.table.options.dataLoading.call(this.table, e), this._wipeElements(), 
                this.table.options.history && this.table.modExists("history") && this.table.modules.history.clear(), 
                Array.isArray(e) ? (this.table.modExists("selectRow") && this.table.modules.selectRow.clearSelectionData(), 
                this.table.options.reactiveData && this.table.modExists("reactiveData", !0) && this.table.modules.reactiveData.watchData(e), 
                e.forEach(function(e, t) {
                    var o;
                    e && "object" === (void 0 === e ? "undefined" : Q(e)) ? (o = new A(e, i), 
                    i.rows.push(o)) : console.warn("Data Loading Warning - Invalid row data detected and ignored, expecting object but received:", e);
                }), i.refreshActiveData(!1, !1, t), i.table.options.dataLoaded.call(this.table, e)) : console.error("Data Loading Error - Unable to process data due to invalid data type \nExpecting: array \nReceived: ", void 0 === e ? "undefined" : Q(e), "\nData:     ", e);
            }, o.prototype._wipeElements = function() {
                this.rows.forEach(function(e) {
                    e.wipe();
                }), this.table.options.groupBy && this.table.modExists("groupRows") && this.table.modules.groupRows.wipe(), 
                this.rows = [], this.activeRows = [], this.activeRowsCount = 0, 
                this.displayRows = [], this.displayRowsCount = 0, this.adjustTableSize();
            }, o.prototype.deleteRow = function(o, e) {
                var t = this.rows.indexOf(o), i = this.activeRows.indexOf(o);
                -1 < i && this.activeRows.splice(i, 1), -1 < t && this.rows.splice(t, 1), 
                this.setActiveRows(this.activeRows), this.displayRowIterator(function(e) {
                    var t = e.indexOf(o);
                    -1 < t && e.splice(t, 1);
                }), e || this.reRenderInPosition(), this.regenerateRowNumbers(), 
                this.table.options.rowDeleted.call(this.table, o.getComponent()), 
                this.table.options.dataChanged && this.table.options.dataChanged.call(this.table, this.getData()), 
                this.table.options.groupBy && this.table.modExists("groupRows") ? this.table.modules.groupRows.updateGroupRows(!0) : this.table.options.pagination && this.table.modExists("page") ? this.refreshActiveData(!1, !1, !0) : this.table.options.pagination && this.table.modExists("page") && this.refreshActiveData("page");
            }, o.prototype.addRow = function(e, t, o, i) {
                i = this.addRowActual(e, t, o, i);
                return this.table.options.history && this.table.modExists("history") && this.table.modules.history.action("rowAdd", i, {
                    data: e,
                    pos: t,
                    index: o
                }), i;
            }, o.prototype.addRows = function(o, i, n) {
                var s = this, r = this, a = [];
                return new Promise(function(e, t) {
                    i = s.findAddRowPos(i), Array.isArray(o) || (o = [ o ]), o.length, 
                    (void 0 === n && i || void 0 !== n && !i) && o.reverse(), o.forEach(function(e, t) {
                        e = r.addRow(e, i, n, !0);
                        a.push(e);
                    }), s.table.options.groupBy && s.table.modExists("groupRows") ? s.table.modules.groupRows.updateGroupRows(!0) : s.table.options.pagination && s.table.modExists("page") ? s.refreshActiveData(!1, !1, !0) : s.reRenderInPosition(), 
                    s.table.modExists("columnCalcs") && s.table.modules.columnCalcs.recalc(s.table.rowManager.activeRows), 
                    s.regenerateRowNumbers(), e(a);
                });
            }, o.prototype.findAddRowPos = function(e) {
                return e = "bottom" === (e = "pos" === (e = void 0 === e ? this.table.options.addRowPos : e) ? !0 : e) ? !1 : e;
            }, o.prototype.addRowActual = function(e, t, o, i) {
                var n = e instanceof A ? e : new A(e || {}, this), s = this.findAddRowPos(t), e = -1;
                return !o && this.table.options.pagination && "page" == this.table.options.paginationAddRow && (t = this.getDisplayRows(), 
                s ? t.length ? o = t[0] : this.activeRows.length && (o = this.activeRows[this.activeRows.length - 1], 
                s = !1) : t.length && (o = t[t.length - 1], s = !(t.length < this.table.modules.page.getPageSize()))), 
                void 0 !== o && (o = this.findRow(o)), this.table.options.groupBy && this.table.modExists("groupRows") && (this.table.modules.groupRows.assignRowToGroup(n), 
                1 < (t = n.getGroup().rows).length) && (o && -1 != t.indexOf(o) ? this._moveRowInArray(n.getGroup().rows, n, o, !s) : s ? t[0] !== n && (o = t[0], 
                this._moveRowInArray(n.getGroup().rows, n, o, !s)) : t[t.length - 1] !== n && (o = t[t.length - 1], 
                this._moveRowInArray(n.getGroup().rows, n, o, !s))), o && (e = this.rows.indexOf(o)), 
                o && -1 < e ? (t = this.activeRows.indexOf(o), this.displayRowIterator(function(e) {
                    var t = e.indexOf(o);
                    -1 < t && e.splice(s ? t : t + 1, 0, n);
                }), -1 < t && this.activeRows.splice(s ? t : t + 1, 0, n), this.rows.splice(s ? e : e + 1, 0, n)) : s ? (this.displayRowIterator(function(e) {
                    e.unshift(n);
                }), this.activeRows.unshift(n), this.rows.unshift(n)) : (this.displayRowIterator(function(e) {
                    e.push(n);
                }), this.activeRows.push(n), this.rows.push(n)), this.setActiveRows(this.activeRows), 
                this.table.options.rowAdded.call(this.table, n.getComponent()), 
                this.table.options.dataChanged && this.table.options.dataChanged.call(this.table, this.getData()), 
                i || this.reRenderInPosition(), n;
            }, o.prototype.moveRow = function(e, t, o) {
                this.table.options.history && this.table.modExists("history") && this.table.modules.history.action("rowMove", e, {
                    posFrom: this.getRowPosition(e),
                    posTo: this.getRowPosition(t),
                    to: t,
                    after: o
                }), this.moveRowActual(e, t, o), this.regenerateRowNumbers(), this.table.options.rowMoved.call(this.table, e.getComponent());
            }, o.prototype.moveRowActual = function(t, o, i) {
                var e, n, s = this;
                this._moveRowInArray(this.rows, t, o, i), this._moveRowInArray(this.activeRows, t, o, i), 
                this.displayRowIterator(function(e) {
                    s._moveRowInArray(e, t, o, i);
                }), this.table.options.groupBy && this.table.modExists("groupRows") && ((e = (o = !i && o instanceof H ? this.table.rowManager.prevDisplayRow(t) || o : o).getGroup()) === (n = t.getGroup()) ? this._moveRowInArray(e.rows, t, o, i) : (n && n.removeRow(t), 
                e.insertRow(t, o, i)));
            }, o.prototype._moveRowInArray = function(e, t, o, i) {
                var n, s;
                if (t !== o && (-1 < (n = e.indexOf(t)) && (e.splice(n, 1), -1 < (s = e.indexOf(o)) ? i ? e.splice(s + 1, 0, t) : e.splice(s, 0, t) : e.splice(n, 0, t)), 
                e === this.getDisplayRows())) for (var r = n < s ? s : n + 1, a = n < s ? n : s; a <= r; a++) e[a] && this.styleRow(e[a], a);
            }, o.prototype.clearData = function() {
                this.setData([]);
            }, o.prototype.getRowIndex = function(e) {
                return this.findRowIndex(e, this.rows);
            }, o.prototype.getDisplayRowIndex = function(e) {
                e = this.getDisplayRows().indexOf(e);
                return -1 < e && e;
            }, o.prototype.nextDisplayRow = function(e, t) {
                var e = this.getDisplayRowIndex(e), o = !1;
                return !(o = !1 !== e && e < this.displayRowsCount - 1 ? this.getDisplayRows()[e + 1] : o) || o instanceof A && "row" == o.type ? o : this.nextDisplayRow(o, t);
            }, o.prototype.prevDisplayRow = function(e, t) {
                var e = this.getDisplayRowIndex(e), o = !1;
                return e && (o = this.getDisplayRows()[e - 1]), !t || !o || o instanceof A && "row" == o.type ? o : this.prevDisplayRow(o, t);
            }, o.prototype.findRowIndex = function(e, t) {
                return !!((e = this.findRow(e)) && -1 < (t = t.indexOf(e))) && t;
            }, o.prototype.getData = function(e, t) {
                var o = [];
                return this.getRows(e).forEach(function(e) {
                    "row" == e.type && o.push(e.getData(t || "data"));
                }), o;
            }, o.prototype.getComponents = function(e) {
                var t = [];
                return this.getRows(e).forEach(function(e) {
                    t.push(e.getComponent());
                }), t;
            }, o.prototype.getDataCount = function(e) {
                return this.getRows(e).length;
            }, o.prototype._genRemoteRequest = function() {
                var e, t = this, o = this.table, i = o.options, n = {};
                o.modExists("page") && (i.ajaxSorting && ((e = this.table.modules.sort.getSort()).forEach(function(e) {
                    delete e.column;
                }), n[this.table.modules.page.paginationDataSentNames.sorters] = e), 
                i.ajaxFiltering && (e = this.table.modules.filter.getFilters(!0, !0), 
                n[this.table.modules.page.paginationDataSentNames.filters] = e), 
                this.table.modules.ajax.setParams(n, !0)), o.modules.ajax.sendRequest().then(function(e) {
                    t._setDataActual(e, !0);
                }).catch(function(e) {});
            }, o.prototype.filterRefresh = function() {
                var e = this.table, t = e.options, o = this.scrollLeft;
                t.ajaxFiltering ? "remote" == t.pagination && e.modExists("page") ? (e.modules.page.reset(!0), 
                e.modules.page.setPage(1).then(function() {}).catch(function() {})) : t.ajaxProgressiveLoad ? e.modules.ajax.loadData().then(function() {}).catch(function() {}) : this._genRemoteRequest() : this.refreshActiveData("filter"), 
                this.scrollHorizontal(o);
            }, o.prototype.sorterRefresh = function(e) {
                var t = this.table, o = this.table.options, i = this.scrollLeft;
                o.ajaxSorting ? ("remote" == o.pagination || o.progressiveLoad) && t.modExists("page") ? (t.modules.page.reset(!0), 
                t.modules.page.setPage(1).then(function() {}).catch(function() {})) : o.ajaxProgressiveLoad ? t.modules.ajax.loadData().then(function() {}).catch(function() {}) : this._genRemoteRequest() : this.refreshActiveData(e ? "filter" : "sort"), 
                this.scrollHorizontal(i);
            }, o.prototype.scrollHorizontal = function(e) {
                this.scrollLeft = e, this.element.scrollLeft = e, this.table.options.groupBy && this.table.modules.groupRows.scrollHeaders(e), 
                this.table.modExists("columnCalcs") && this.table.modules.columnCalcs.scrollHorizontal(e);
            }, o.prototype.refreshActiveData = function(e, t, o) {
                var i, n = this, s = this.table, r = [ "all", "filter", "sort", "display", "freeze", "group", "tree", "page" ];
                if (this.redrawBlock) (!this.redrawBlockRestoreConfig || r.indexOf(e) < r.indexOf(this.redrawBlockRestoreConfig.stage)) && (this.redrawBlockRestoreConfig = {
                    stage: e,
                    skipStage: t,
                    renderInPosition: o
                }); else {
                    switch (n.table.modExists("edit") && n.table.modules.edit.cancelEdit(), 
                    e = e || "all", s.options.selectable && !s.options.selectablePersistence && s.modExists("selectRow") && s.modules.selectRow.deselectRows(), 
                    e) {
                      case "all":
                      case "filter":
                        t ? t = !1 : s.modExists("filter") ? n.setActiveRows(s.modules.filter.filter(n.rows)) : n.setActiveRows(n.rows.slice(0));

                      case "sort":
                        t ? t = !1 : s.modExists("sort") && s.modules.sort.sort(this.activeRows), 
                        this.regenerateRowNumbers();

                      case "display":
                        this.resetDisplayRows();

                      case "freeze":
                        t ? t = !1 : this.table.modExists("frozenRows") && s.modules.frozenRows.isFrozen() && (s.modules.frozenRows.getDisplayIndex() || s.modules.frozenRows.setDisplayIndex(this.getNextDisplayIndex()), 
                        i = s.modules.frozenRows.getDisplayIndex(), !0 !== (i = n.setDisplayRows(s.modules.frozenRows.getRows(this.getDisplayRows(i - 1)), i))) && s.modules.frozenRows.setDisplayIndex(i);

                      case "group":
                        t ? t = !1 : s.options.groupBy && s.modExists("groupRows") && (s.modules.groupRows.getDisplayIndex() || s.modules.groupRows.setDisplayIndex(this.getNextDisplayIndex()), 
                        i = s.modules.groupRows.getDisplayIndex(), !0 !== (i = n.setDisplayRows(s.modules.groupRows.getRows(this.getDisplayRows(i - 1)), i))) && s.modules.groupRows.setDisplayIndex(i);

                      case "tree":
                        t ? t = !1 : s.options.dataTree && s.modExists("dataTree") && (s.modules.dataTree.getDisplayIndex() || s.modules.dataTree.setDisplayIndex(this.getNextDisplayIndex()), 
                        i = s.modules.dataTree.getDisplayIndex(), !0 !== (i = n.setDisplayRows(s.modules.dataTree.getRows(this.getDisplayRows(i - 1)), i))) && s.modules.dataTree.setDisplayIndex(i), 
                        s.options.pagination && s.modExists("page") && !o && "local" == s.modules.page.getMode() && s.modules.page.reset();

                      case "page":
                        t ? t = !1 : s.options.pagination && s.modExists("page") && (s.modules.page.getDisplayIndex() || s.modules.page.setDisplayIndex(this.getNextDisplayIndex()), 
                        i = s.modules.page.getDisplayIndex(), "local" == s.modules.page.getMode() && s.modules.page.setMaxRows(this.getDisplayRows(i - 1).length), 
                        !0 !== (i = n.setDisplayRows(s.modules.page.getRows(this.getDisplayRows(i - 1)), i))) && s.modules.page.setDisplayIndex(i);
                    }
                    N.prototype.helpers.elVisible(n.element) && (o ? n.reRenderInPosition() : ("all" === e && this.table.options.virtualDomHoz && this.table.vdomHoz.dataChange(), 
                    n.renderTable(), s.options.layoutColumnsOnNewData && n.table.columnManager.redraw(!0))), 
                    s.modExists("columnCalcs") && s.modules.columnCalcs.recalc(this.activeRows);
                }
            }, o.prototype.regenerateRowNumbers = function() {
                var t = this;
                this.rowNumColumn && this.activeRows.forEach(function(e) {
                    e = e.getCell(t.rowNumColumn);
                    e && e._generateContents();
                });
            }, o.prototype.setActiveRows = function(e) {
                this.activeRows = e, this.activeRowsCount = this.activeRows.length;
            }, o.prototype.resetDisplayRows = function() {
                this.displayRows = [], this.displayRows.push(this.activeRows.slice(0)), 
                this.displayRowsCount = this.displayRows[0].length, this.table.modExists("frozenRows") && this.table.modules.frozenRows.setDisplayIndex(0), 
                this.table.options.groupBy && this.table.modExists("groupRows") && this.table.modules.groupRows.setDisplayIndex(0), 
                this.table.options.pagination && this.table.modExists("page") && this.table.modules.page.setDisplayIndex(0);
            }, o.prototype.getNextDisplayIndex = function() {
                return this.displayRows.length;
            }, o.prototype.setDisplayRows = function(e, t) {
                var o = !0, o = t && void 0 !== this.displayRows[t] ? (this.displayRows[t] = e, 
                !0) : (this.displayRows.push(e), t = this.displayRows.length - 1);
                return t == this.displayRows.length - 1 && (this.displayRowsCount = this.displayRows[this.displayRows.length - 1].length), 
                o;
            }, o.prototype.getDisplayRows = function(e) {
                return void 0 === e ? this.displayRows.length ? this.displayRows[this.displayRows.length - 1] : [] : this.displayRows[e] || [];
            }, o.prototype.getVisibleRows = function(e) {
                var t = this.element.scrollTop, o = this.element.clientHeight + t, i = !1, n = 0, s = 0, r = this.getDisplayRows();
                if (e) {
                    this.getDisplayRows();
                    for (var a = this.vDomTop; a <= this.vDomBottom; a++) if (r[a]) if (i) {
                        if (!(0 <= o - r[a].getElement().offsetTop)) break;
                        s = a;
                    } else if (0 <= t - r[a].getElement().offsetTop) n = a; else {
                        if (i = !0, !(0 <= o - r[a].getElement().offsetTop)) break;
                        s = a;
                    }
                } else n = this.vDomTop, s = this.vDomBottom;
                return r.slice(n, s + 1);
            }, o.prototype.displayRowIterator = function(e) {
                this.displayRows.forEach(e), this.displayRowsCount = this.displayRows[this.displayRows.length - 1].length;
            }, o.prototype.getRows = function(e) {
                var t;
                switch (e) {
                  case "active":
                    t = this.activeRows;
                    break;

                  case "display":
                    t = this.table.rowManager.getDisplayRows();
                    break;

                  case "visible":
                    t = this.getVisibleRows(!0);
                    break;

                  case "selected":
                    t = this.table.modules.selectRow.selectedRows;
                    break;

                  default:
                    t = this.rows;
                }
                return t;
            }, o.prototype.reRenderInPosition = function(e) {
                if ("virtual" == this.getRenderMode()) if (this.redrawBlock) e ? e() : this.redrawBlockRederInPosition = !0; else {
                    for (var t = this.element.scrollTop, o = !1, i = !1, n = this.scrollLeft, s = this.getDisplayRows(), r = this.vDomTop; r <= this.vDomBottom; r++) if (s[r]) {
                        var a = t - s[r].getElement().offsetTop;
                        if (!(!1 === i || Math.abs(a) < i)) break;
                        i = a, o = r;
                    }
                    e && e(), this._virtualRenderFill(!1 === o ? this.displayRowsCount - 1 : o, !0, i || 0), 
                    this.scrollHorizontal(n);
                } else this.renderTable(), e && e();
            }, o.prototype.setRenderMode = function() {
                this.table.options.virtualDom ? (this.renderMode = "virtual", this.table.element.clientHeight || this.table.options.height ? this.fixedHeight = !0 : this.fixedHeight = !1) : this.renderMode = "classic";
            }, o.prototype.getRenderMode = function() {
                return this.renderMode;
            }, o.prototype.renderTable = function() {
                switch (this.table.options.renderStarted.call(this.table), this.element.scrollTop = 0, 
                this.renderMode) {
                  case "classic":
                    this._simpleRender();
                    break;

                  case "virtual":
                    this._virtualRenderFill();
                }
                this.firstRender && (this.displayRowsCount ? (this.firstRender = !1, 
                this.table.modules.layout.layout()) : this.renderEmptyScroll()), 
                this.table.modExists("frozenColumns") && this.table.modules.frozenColumns.layout(), 
                this.displayRowsCount || this.table.options.placeholder && (this.table.options.placeholder.setAttribute("tabulator-render-mode", this.renderMode), 
                this.getElement().appendChild(this.table.options.placeholder), this.table.options.placeholder.style.width = this.table.columnManager.getWidth() + "px"), 
                this.table.options.renderComplete.call(this.table);
            }, o.prototype._simpleRender = function() {
                this._clearVirtualDom(), this.displayRowsCount ? this.checkClassicModeGroupHeaderWidth() : this.renderEmptyScroll();
            }, o.prototype.checkClassicModeGroupHeaderWidth = function() {
                var o = this, i = this.tableElement, n = !0;
                o.getDisplayRows().forEach(function(e, t) {
                    o.styleRow(e, t), i.appendChild(e.getElement()), e.initialize(!0), 
                    "group" !== e.type && (n = !1);
                }), i.style.minWidth = n ? o.table.columnManager.getWidth() + "px" : "";
            }, o.prototype.renderEmptyScroll = function() {
                this.table.options.placeholder ? this.tableElement.style.display = "none" : this.tableElement.style.minWidth = this.table.columnManager.getWidth() + "px";
            }, o.prototype._clearVirtualDom = function() {
                var e = this.tableElement;
                for (this.table.options.placeholder && this.table.options.placeholder.parentNode && this.table.options.placeholder.parentNode.removeChild(this.table.options.placeholder); e.firstChild; ) e.removeChild(e.firstChild);
                e.style.paddingTop = "", e.style.paddingBottom = "", e.style.minWidth = "", 
                e.style.minHeight = "", e.style.display = "", e.style.visibility = "", 
                this.scrollTop = 0, this.scrollLeft = 0, this.vDomTop = 0, this.vDomBottom = 0, 
                this.vDomTopPad = 0, this.vDomBottomPad = 0;
            }, o.prototype.styleRow = function(e, t) {
                e = e.getElement();
                t % 2 ? (e.classList.add("tabulator-row-even"), e.classList.remove("tabulator-row-odd")) : (e.classList.add("tabulator-row-odd"), 
                e.classList.remove("tabulator-row-even"));
            }, o.prototype._virtualRenderFill = function(e, t, o) {
                var i = this, n = i.tableElement, s = i.element, r = 0, a = 0, l = 0, c = 0, u = !0, d = i.getDisplayRows();
                if (o = o || 0, e = e || 0) {
                    for (;n.firstChild; ) n.removeChild(n.firstChild);
                    var h = (i.displayRowsCount - e + 1) * i.vDomRowHeight;
                    h < i.height && (e -= Math.ceil((i.height - h) / i.vDomRowHeight)) < 0 && (e = 0), 
                    e -= r = Math.min(Math.max(Math.floor(i.vDomWindowBuffer / i.vDomRowHeight), i.vDomWindowMinMarginRows), e);
                } else i._clearVirtualDom();
                if (i.displayRowsCount && N.prototype.helpers.elVisible(i.element)) {
                    for (i.vDomTop = e, i.vDomBottom = e - 1; (a <= i.height + i.vDomWindowBuffer || c < i.vDomWindowMinTotalRows) && i.vDomBottom < i.displayRowsCount - 1; ) {
                        var p = i.vDomBottom + 1, m = d[p];
                        i.styleRow(m, p), n.appendChild(m.getElement()), m.initialize(), 
                        m.heightInitialized || m.normalizeHeight(!0), p = m.getHeight(), 
                        c < r ? l += p : a += p, p > this.vDomWindowBuffer && (this.vDomWindowBuffer = 2 * p), 
                        "group" !== m.type && (u = !1), i.vDomBottom++, c++;
                    }
                    e ? (i.vDomTopPad = t ? i.vDomRowHeight * this.vDomTop + o : i.scrollTop - l, 
                    i.vDomBottomPad = i.vDomBottom == i.displayRowsCount - 1 ? 0 : Math.max(i.vDomScrollHeight - i.vDomTopPad - a - l, 0)) : (this.vDomTopPad = 0, 
                    i.vDomRowHeight = Math.floor((a + l) / c), i.vDomBottomPad = i.vDomRowHeight * (i.displayRowsCount - i.vDomBottom - 1), 
                    i.vDomScrollHeight = l + a + i.vDomBottomPad - i.height), n.style.paddingTop = i.vDomTopPad + "px", 
                    n.style.paddingBottom = i.vDomBottomPad + "px", t && (this.scrollTop = i.vDomTopPad + l + o - (this.element.scrollWidth > this.element.clientWidth ? this.element.offsetHeight - this.element.clientHeight : 0)), 
                    this.scrollTop = Math.min(this.scrollTop, this.element.scrollHeight - this.height), 
                    this.element.scrollWidth > this.element.offsetWidth && t && (this.scrollTop += this.element.offsetHeight - this.element.clientHeight), 
                    this.vDomScrollPosTop = this.scrollTop, this.vDomScrollPosBottom = this.scrollTop, 
                    s.scrollTop = this.scrollTop, n.style.minWidth = u ? i.table.columnManager.getWidth() + "px" : "", 
                    i.table.options.groupBy && "fitDataFill" != i.table.modules.layout.getMode() && i.displayRowsCount == i.table.modules.groupRows.countGroups() && (i.tableElement.style.minWidth = i.table.columnManager.getWidth());
                } else this.renderEmptyScroll();
                this.fixedHeight || this.adjustTableSize();
            }, o.prototype.scrollVertical = function(e) {
                var t = this.scrollTop - this.vDomScrollPosTop, o = this.scrollTop - this.vDomScrollPosBottom, i = 2 * this.vDomWindowBuffer;
                i < -t || i < o ? (i = this.scrollLeft, this._virtualRenderFill(Math.floor(this.element.scrollTop / this.element.scrollHeight * this.displayRowsCount)), 
                this.scrollHorizontal(i)) : e ? (t < 0 && this._addTopRow(-t), o < 0 && (this.vDomScrollHeight - this.scrollTop > this.vDomWindowBuffer ? this._removeBottomRow(-o) : this.vDomScrollPosBottom = this.scrollTop)) : (0 <= t && (this.scrollTop > this.vDomWindowBuffer ? this._removeTopRow(t) : this.vDomScrollPosTop = this.scrollTop), 
                0 <= o && this._addBottomRow(o));
            }, o.prototype._addTopRow = function(e) {
                var t, o, i, n = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0, s = this.tableElement, r = this.getDisplayRows();
                this.vDomTop && ((i = (o = r[t = this.vDomTop - 1]).getHeight() || this.vDomRowHeight) <= e && (this.styleRow(o, t), 
                s.insertBefore(o.getElement(), s.firstChild), o.initialized && o.heightInitialized || (this.vDomTopNewRows.push(o), 
                o.heightInitialized) || o.clearCellHeight(), o.initialize(), this.vDomTopPad -= i, 
                this.vDomTopPad < 0 && (this.vDomTopPad = t * this.vDomRowHeight), 
                t || (this.vDomTopPad = 0), s.style.paddingTop = this.vDomTopPad + "px", 
                this.vDomScrollPosTop -= i, this.vDomTop--), e = -(this.scrollTop - this.vDomScrollPosTop), 
                o.getHeight() > this.vDomWindowBuffer && (this.vDomWindowBuffer = 2 * o.getHeight()), 
                n < this.vDomMaxRenderChain && this.vDomTop && e >= (r[this.vDomTop - 1].getHeight() || this.vDomRowHeight) ? this._addTopRow(e, n + 1) : this._quickNormalizeRowHeight(this.vDomTopNewRows));
            }, o.prototype._removeTopRow = function(e) {
                var t = this.tableElement, o = this.getDisplayRows()[this.vDomTop], i = o.getHeight() || this.vDomRowHeight;
                i <= e && ((o = o.getElement()).parentNode.removeChild(o), this.vDomTopPad += i, 
                t.style.paddingTop = this.vDomTopPad + "px", this.vDomScrollPosTop += this.vDomTop ? i : i + this.vDomWindowBuffer, 
                this.vDomTop++, e = this.scrollTop - this.vDomScrollPosTop, this._removeTopRow(e));
            }, o.prototype._addBottomRow = function(e) {
                var t, o, i, n = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0, s = this.tableElement, r = this.getDisplayRows();
                this.vDomBottom < this.displayRowsCount - 1 && ((i = (o = r[t = this.vDomBottom + 1]).getHeight() || this.vDomRowHeight) <= e && (this.styleRow(o, t), 
                s.appendChild(o.getElement()), o.initialized && o.heightInitialized || (this.vDomBottomNewRows.push(o), 
                o.heightInitialized) || o.clearCellHeight(), o.initialize(), this.vDomBottomPad -= i, 
                (this.vDomBottomPad < 0 || t == this.displayRowsCount - 1) && (this.vDomBottomPad = 0), 
                s.style.paddingBottom = this.vDomBottomPad + "px", this.vDomScrollPosBottom += i, 
                this.vDomBottom++), e = this.scrollTop - this.vDomScrollPosBottom, 
                o.getHeight() > this.vDomWindowBuffer && (this.vDomWindowBuffer = 2 * o.getHeight()), 
                n < this.vDomMaxRenderChain && this.vDomBottom < this.displayRowsCount - 1 && e >= (r[this.vDomBottom + 1].getHeight() || this.vDomRowHeight) ? this._addBottomRow(e, n + 1) : this._quickNormalizeRowHeight(this.vDomBottomNewRows));
            }, o.prototype._removeBottomRow = function(e) {
                var t = this.tableElement, o = this.getDisplayRows()[this.vDomBottom], i = o.getHeight() || this.vDomRowHeight;
                i <= e && ((o = o.getElement()).parentNode && o.parentNode.removeChild(o), 
                this.vDomBottomPad += i, this.vDomBottomPad < 0 && (this.vDomBottomPad = 0), 
                t.style.paddingBottom = this.vDomBottomPad + "px", this.vDomScrollPosBottom -= i, 
                this.vDomBottom--, e = -(this.scrollTop - this.vDomScrollPosBottom), 
                this._removeBottomRow(e));
            }, o.prototype._quickNormalizeRowHeight = function(e) {
                e.forEach(function(e) {
                    e.calcHeight();
                }), e.forEach(function(e) {
                    e.setCellHeight();
                }), e.length = 0;
            }, o.prototype.normalizeHeight = function() {
                this.activeRows.forEach(function(e) {
                    e.normalizeHeight();
                });
            }, 
            //adjust the height of the table holder to fit in the Tabulator element
            o.prototype.adjustTableSize = function() {
                var e, t = this.element.clientHeight;
                "virtual" === this.renderMode && (e = Math.floor(this.columnManager.getElement().getBoundingClientRect().height + (this.table.footerManager && this.table.footerManager.active && !this.table.footerManager.external ? this.table.footerManager.getElement().getBoundingClientRect().height : 0)), 
                this.fixedHeight ? (this.element.style.minHeight = "calc(100% - " + e + "px)", 
                this.element.style.height = "calc(100% - " + e + "px)", this.element.style.maxHeight = "calc(100% - " + e + "px)") : (this.element.style.height = "", 
                this.element.style.height = this.table.element.clientHeight - e + "px", 
                this.element.scrollTop = this.scrollTop), this.height = this.element.clientHeight, 
                this.vDomWindowBuffer = this.table.options.virtualDomBuffer || this.height, 
                this.fixedHeight || t == this.element.clientHeight || (!(e = this.table.modExists("resizeTable")) || this.table.modules.resizeTable.autoResize) && e || this.redraw());
            }, o.prototype.reinitialize = function() {
                this.rows.forEach(function(e) {
                    e.reinitialize(!0);
                });
            }, o.prototype.blockRedraw = function() {
                this.redrawBlock = !0, this.redrawBlockRestoreConfig = !1;
            }, o.prototype.restoreRedraw = function() {
                this.redrawBlock = !1, this.redrawBlockRestoreConfig ? (this.refreshActiveData(this.redrawBlockRestoreConfig.stage, this.redrawBlockRestoreConfig.skipStage, this.redrawBlockRestoreConfig.renderInPosition), 
                this.redrawBlockRestoreConfig = !1) : this.redrawBlockRederInPosition && this.reRenderInPosition(), 
                this.redrawBlockRederInPosition = !1;
            }, o.prototype.redraw = function(e) {
                var t = this.scrollLeft;
                this.adjustTableSize(), this.table.tableWidth = this.table.element.clientWidth, 
                e ? this.renderTable() : ("classic" == this.renderMode ? this.table.options.groupBy ? this.refreshActiveData("group", !1, !1) : this._simpleRender() : (this.reRenderInPosition(), 
                this.scrollHorizontal(t)), this.displayRowsCount || this.table.options.placeholder && this.getElement().appendChild(this.table.options.placeholder));
            }, o.prototype.resetScroll = function() {
                var e;
                this.element.scrollLeft = 0, this.element.scrollTop = 0, "ie" === this.table.browser ? ((e = document.createEvent("Event")).initEvent("scroll", !1, !0), 
                this.element.dispatchEvent(e)) : this.element.dispatchEvent(new Event("scroll"));
            }, n.prototype.compatabilityCheck = function() {
                var e = this.table.options, t = !0;
                return "fitDataTable" == e.layout && (console.warn("Horizontal Vitrual DOM is not compatible with fitDataTable layout mode"), 
                t = !1), e.responsiveLayout && (console.warn("Horizontal Vitrual DOM is not compatible with responsive columns"), 
                t = !1), this.table.rtl && (console.warn("Horizontal Vitrual DOM is not currently compatible with RTL text direction"), 
                t = !1), e.columns && e.columns.find(function(e) {
                    return e.frozen;
                }) && (console.warn("Horizontal Vitrual DOM is not compatible with frozen columns"), 
                t = !1), t || (e.virtualDomHoz = !1), t;
            }, n.prototype.initialize = function() {
                var t = this;
                this.holderEl.addEventListener("scroll", function() {
                    var e = t.holderEl.scrollLeft;
                    t.scrollLeft != e && (t.scrollLeft = e, t.scroll(e - (t.vDomScrollPosLeft + t.window)));
                });
            }, n.prototype.deinitialize = function() {
                this.initialized = !1;
            }, n.prototype.clear = function() {
                this.columns = [], this.leftCol = -1, this.rightCol = 0, this.vDomScrollPosLeft = 0, 
                this.vDomScrollPosRight = 0, this.vDomPadLeft = 0, this.vDomPadRight = 0;
            }, n.prototype.dataChange = function() {
                var e, t, o = !1, i = 0, n = 0;
                if ("fitData" === this.table.options.layout) {
                    if (this.table.columnManager.columnsByIndex.forEach(function(e) {
                        !e.definition.width && e.visible && (o = !0);
                    }), o && this.table.rowManager.getDisplayRows().length && (this.vDomScrollPosRight = this.scrollLeft + this.holderEl.clientWidth + this.window, 
                    e = (this.table.options.groupBy ? this.table.modules.groupRows.getGroups(!1)[0].getRows(!1) : this.table.rowManager.getDisplayRows())[0])) {
                        t = e.getElement(), e.generateCells(), this.element.appendChild(t);
                        for (n = 0; n < e.cells.length; n++) {
                            var s = e.cells[n];
                            if (t.appendChild(s.getElement()), s.column.reinitializeWidth(), 
                            (i += s.column.getWidth()) > this.vDomScrollPosRight) break;
                        }
                        for (t.parentNode.removeChild(t), this.fitDataColAvg = Math.floor(i / (n + 1)); n < this.table.columnManager.columnsByIndex.length; n++) this.table.columnManager.columnsByIndex[n].setWidth(this.fitDataColAvg);
                        this.reinitialize(!1, !0);
                    }
                } else "fitColumns" === this.table.options.layout && (this.table.modules.layout.layout(), 
                this.table.vdomHoz.reinitialize(!1, !0));
            }, n.prototype.fitDataLayoutOverride = function() {
                for (var e = this.leftCol; e <= this.rightCol; e++) this.columns[e].reinitializeWidth();
            }, n.prototype.reinitialize = function(e, t) {
                var i, n = this, o = {
                    cols: this.columns,
                    leftCol: this.leftCol,
                    rightCol: this.rightCol
                };
                e && !this.initialized || (this.clear(), this.scrollLeft = this.holderEl.scrollLeft, 
                this.vDomScrollPosLeft = this.scrollLeft - this.window, this.vDomScrollPosRight = this.scrollLeft + this.holderEl.clientWidth + this.window, 
                i = 0, this.table.columnManager.columnsByIndex.forEach(function(e) {
                    var t, o = {};
                    e.visible && (t = e.getWidth(), o.leftPos = i, o.rightPos = i + t, 
                    i + t > n.vDomScrollPosLeft && i < n.vDomScrollPosRight ? (-1 == n.leftCol && (n.leftCol = n.columns.length, 
                    n.vDomPadLeft = i), n.rightCol = n.columns.length) : -1 !== n.leftCol && (n.vDomPadRight += t), 
                    n.columns.push(e), e.modules.vdomHoz = o, i += t);
                }), this.element.style.paddingLeft = this.vDomPadLeft + "px", this.element.style.paddingRight = this.vDomPadRight + "px", 
                this.initialized = !0, t || e && !this.reinitChanged(o) || this.renitializeRows(), 
                this.holderEl.scrollLeft = this.scrollLeft);
            }, n.prototype.reinitChanged = function(e) {
                var o = this, i = !0;
                return e.cols.length !== this.columns.length || e.leftCol !== this.leftCol || e.rightCol !== this.rightCol || (e.cols.forEach(function(e, t) {
                    e !== o.columns[t] && (i = !1);
                }), !i);
            }, n.prototype.renitializeRows = function() {
                var t = this;
                this.table.rowManager.getVisibleRows().forEach(function(e) {
                    t.reinitializeRow(e, !0);
                });
            }, n.prototype.scroll = function(e) {
                this.vDomScrollPosLeft += e, this.vDomScrollPosRight += e, e > .8 * this.holderEl.clientWidth ? this.reinitialize() : 0 < e ? (this.addColRight(), 
                this.removeColLeft()) : (this.addColLeft(), this.removeColRight());
            }, n.prototype.colPositionAdjust = function(e, t, o) {
                for (var i = e; i < t; i++) {
                    var n = this.columns[i];
                    n.modules.vdomHoz.leftPos -= o, n.modules.vdomHoz.rightPos -= o;
                }
            }, n.prototype.addColRight = function() {
                var e, o = this.columns[this.rightCol + 1];
                o && o.modules.vdomHoz.leftPos <= this.vDomScrollPosRight && (this.table.rowManager.getVisibleRows().forEach(function(e) {
                    var t;
                    "group" !== e.type && (t = e.getCell(o), e.getElement().appendChild(t.getElement()), 
                    t.cellRendered());
                }), this.fitDataColAvg && (e = o.getWidth()) === this.fitDataColAvg && (o.reinitializeWidth(), 
                e = e - o.getWidth()) && (o.modules.vdomHoz.rightPos -= e, this.colPositionAdjust(this.rightCol + 1, this.columns.length, e)), 
                this.rightCol++, this.rightCol >= this.columns.length - 1 ? this.vDomPadRight = 0 : this.vDomPadRight -= o.getWidth(), 
                this.element.style.paddingRight = this.vDomPadRight + "px", this.addColRight());
            }, n.prototype.addColLeft = function() {
                var o = this.columns[this.leftCol - 1];
                o && o.modules.vdomHoz.rightPos >= this.vDomScrollPosLeft && (this.table.rowManager.getVisibleRows().forEach(function(e) {
                    var t;
                    "group" !== e.type && (t = e.getCell(o), e.getElement().prepend(t.getElement()), 
                    t.cellRendered());
                }), this.leftCol ? this.vDomPadLeft -= o.getWidth() : this.vDomPadLeft = 0, 
                this.element.style.paddingLeft = this.vDomPadLeft + "px", this.leftCol--, 
                this.addColLeft());
            }, n.prototype.removeColRight = function(o) {
                var e;
                (o = this.columns[this.rightCol]) && o.modules.vdomHoz.leftPos > this.vDomScrollPosRight && (e = this.table.rowManager.getVisibleRows(), 
                o.modules.vdomHoz.visible = !1, e.forEach(function(e) {
                    var t;
                    "group" !== e.type && (t = e.getCell(o), e.getElement().removeChild(t.getElement()));
                }), this.vDomPadRight += o.getWidth(), this.element.style.paddingRight = this.vDomPadRight + "px", 
                this.rightCol--, this.removeColRight());
            }, n.prototype.removeColLeft = function() {
                var o = this.columns[this.leftCol];
                o && o.modules.vdomHoz.rightPos < this.vDomScrollPosLeft && (this.table.rowManager.getVisibleRows().forEach(function(e) {
                    var t;
                    "group" !== e.type && (t = e.getCell(o), e.getElement().removeChild(t.getElement()));
                }), this.vDomPadLeft += o.getWidth(), this.element.style.paddingLeft = this.vDomPadLeft + "px", 
                this.leftCol++, this.removeColLeft());
            }, n.prototype.initializeRow = function(e) {
                if ("group" !== e.type) {
                    e.modules.vdomHoz = {
                        leftCol: this.leftCol,
                        rightCol: this.rightCol
                    };
                    for (var t = this.leftCol; t <= this.rightCol; t++) {
                        var o = this.columns[t];
                        o && o.visible && (o = e.getCell(o), e.getElement().appendChild(o.getElement()), 
                        o.cellRendered());
                    }
                }
            }, n.prototype.reinitializeRow = function(e, t) {
                if ("group" !== e.type && (t || !e.modules.vdomHoz || e.modules.vdomHoz.leftCol !== this.leftCol || e.modules.vdomHoz.rightCol !== this.rightCol)) {
                    for (var o = e.getElement(); o.firstChild; ) o.removeChild(o.firstChild);
                    this.initializeRow(e);
                }
            }, function(e) {
                this._row = e;
            }), A = (O.prototype.getData = function(e) {
                return this._row.getData(e);
            }, O.prototype.getElement = function() {
                return this._row.getElement();
            }, O.prototype.getCells = function() {
                var t = [];
                return this._row.getCells().forEach(function(e) {
                    t.push(e.getComponent());
                }), t;
            }, O.prototype.getCell = function(e) {
                e = this._row.getCell(e);
                return !!e && e.getComponent();
            }, O.prototype.getIndex = function() {
                return this._row.getData("data")[this._row.table.options.index];
            }, O.prototype.getPosition = function(e) {
                return this._row.table.rowManager.getRowPosition(this._row, e);
            }, O.prototype.delete = function() {
                return this._row.delete();
            }, O.prototype.scrollTo = function() {
                return this._row.table.rowManager.scrollToRow(this._row);
            }, O.prototype.pageTo = function() {
                if (this._row.table.modExists("page", !0)) return this._row.table.modules.page.setPageToRow(this._row);
            }, O.prototype.move = function(e, t) {
                this._row.moveToRow(e, t);
            }, O.prototype.update = function(e) {
                return this._row.updateData(e);
            }, O.prototype.normalizeHeight = function() {
                this._row.normalizeHeight(!0);
            }, O.prototype.select = function() {
                this._row.table.modules.selectRow.selectRows(this._row);
            }, O.prototype.deselect = function() {
                this._row.table.modules.selectRow.deselectRows(this._row);
            }, O.prototype.toggleSelect = function() {
                this._row.table.modules.selectRow.toggleRow(this._row);
            }, O.prototype.isSelected = function() {
                return this._row.table.modules.selectRow.isRowSelected(this._row);
            }, O.prototype._getSelf = function() {
                return this._row;
            }, O.prototype.validate = function() {
                return this._row.validate();
            }, O.prototype.freeze = function() {
                this._row.table.modExists("frozenRows", !0) && this._row.table.modules.frozenRows.freezeRow(this._row);
            }, O.prototype.unfreeze = function() {
                this._row.table.modExists("frozenRows", !0) && this._row.table.modules.frozenRows.unfreezeRow(this._row);
            }, O.prototype.isFrozen = function() {
                return !!this._row.table.modExists("frozenRows", !0) && -1 < this._row.table.modules.frozenRows.rows.indexOf(this._row);
            }, O.prototype.treeCollapse = function() {
                this._row.table.modExists("dataTree", !0) && this._row.table.modules.dataTree.collapseRow(this._row);
            }, O.prototype.treeExpand = function() {
                this._row.table.modExists("dataTree", !0) && this._row.table.modules.dataTree.expandRow(this._row);
            }, O.prototype.treeToggle = function() {
                this._row.table.modExists("dataTree", !0) && this._row.table.modules.dataTree.toggleRow(this._row);
            }, O.prototype.getTreeParent = function() {
                return !!this._row.table.modExists("dataTree", !0) && this._row.table.modules.dataTree.getTreeParent(this._row);
            }, O.prototype.getTreeChildren = function() {
                return !!this._row.table.modExists("dataTree", !0) && this._row.table.modules.dataTree.getTreeChildren(this._row, !0);
            }, O.prototype.addTreeChild = function(e, t, o) {
                return !!this._row.table.modExists("dataTree", !0) && this._row.table.modules.dataTree.addTreeChildRow(this._row, e, t, o);
            }, O.prototype.reformat = function() {
                return this._row.reinitialize();
            }, O.prototype.getGroup = function() {
                return this._row.getGroup().getComponent();
            }, O.prototype.getTable = function() {
                return this._row.table;
            }, O.prototype.getNextRow = function() {
                var e = this._row.nextRow();
                return e && e.getComponent();
            }, O.prototype.getPrevRow = function() {
                var e = this._row.prevRow();
                return e && e.getComponent();
            }, function(e, t) {
                var o = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : "row";
                this.table = t.table, this.parent = t, this.data = {}, this.type = o, 
                this.element = !1, this.modules = {}, this.cells = [], this.height = 0, 
                this.heightStyled = "", this.manualHeight = !1, this.outerHeight = 0, 
                this.initialized = !1, this.heightInitialized = !1, this.component = null, 
                this.created = !1, this.setData(e);
            }), P = (A.prototype.create = function() {
                this.created || (this.created = !0, this.generateElement());
            }, A.prototype.createElement = function() {
                var e = document.createElement("div");
                e.classList.add("tabulator-row"), e.setAttribute("role", "row"), 
                this.element = e;
            }, A.prototype.getElement = function() {
                return this.create(), this.element;
            }, A.prototype.detachElement = function() {
                this.element && this.element.parentNode && this.element.parentNode.removeChild(this.element);
            }, A.prototype.generateElement = function() {
                var t, o, i, n = this;
                this.createElement(), !1 !== n.table.options.selectable && n.table.modExists("selectRow") && n.table.modules.selectRow.initializeRow(this), 
                !1 !== n.table.options.movableRows && n.table.modExists("moveRow") && n.table.modules.moveRow.initializeRow(this), 
                !1 !== n.table.options.dataTree && n.table.modExists("dataTree") && n.table.modules.dataTree.initializeRow(this), 
                "collapse" === n.table.options.responsiveLayout && n.table.modExists("responsiveLayout") && n.table.modules.responsiveLayout.initializeRow(this), 
                (n.table.options.rowContextMenu || n.table.options.rowClickMenu) && this.table.modExists("menu") && n.table.modules.menu.initializeRow(this), 
                n.table.options.rowClick && n.element.addEventListener("click", function(e) {
                    n.table.options.rowClick(e, n.getComponent());
                }), n.table.options.rowDblClick && n.element.addEventListener("dblclick", function(e) {
                    n.table.options.rowDblClick(e, n.getComponent());
                }), n.table.options.rowContext && n.element.addEventListener("contextmenu", function(e) {
                    n.table.options.rowContext(e, n.getComponent());
                }), n.table.options.rowMouseEnter && n.element.addEventListener("mouseenter", function(e) {
                    n.table.options.rowMouseEnter(e, n.getComponent());
                }), n.table.options.rowMouseLeave && n.element.addEventListener("mouseleave", function(e) {
                    n.table.options.rowMouseLeave(e, n.getComponent());
                }), n.table.options.rowMouseOver && n.element.addEventListener("mouseover", function(e) {
                    n.table.options.rowMouseOver(e, n.getComponent());
                }), n.table.options.rowMouseOut && n.element.addEventListener("mouseout", function(e) {
                    n.table.options.rowMouseOut(e, n.getComponent());
                }), n.table.options.rowMouseMove && n.element.addEventListener("mousemove", function(e) {
                    n.table.options.rowMouseMove(e, n.getComponent());
                }), n.table.options.rowTap && (i = !1, n.element.addEventListener("touchstart", function(e) {
                    i = !0;
                }, {
                    passive: !0
                }), n.element.addEventListener("touchend", function(e) {
                    i && n.table.options.rowTap(e, n.getComponent()), i = !1;
                })), n.table.options.rowDblTap && (t = null, n.element.addEventListener("touchend", function(e) {
                    t ? (clearTimeout(t), t = null, n.table.options.rowDblTap(e, n.getComponent())) : t = setTimeout(function() {
                        clearTimeout(t), t = null;
                    }, 300);
                })), n.table.options.rowTapHold && (o = null, n.element.addEventListener("touchstart", function(e) {
                    clearTimeout(o), o = setTimeout(function() {
                        clearTimeout(o), o = null, i = !1, n.table.options.rowTapHold(e, n.getComponent());
                    }, 1e3);
                }, {
                    passive: !0
                }), n.element.addEventListener("touchend", function(e) {
                    clearTimeout(o), o = null;
                }));
            }, A.prototype.generateCells = function() {
                this.cells = this.table.columnManager.generateCells(this);
            }, A.prototype.initialize = function(e) {
                var t = this;
                if (this.create(), !this.initialized || e) {
                    for (this.deleteCells(); this.element.firstChild; ) this.element.removeChild(this.element.firstChild);
                    this.table.modExists("frozenColumns") && this.table.modules.frozenColumns.layoutRow(this), 
                    this.generateCells(), this.table.options.virtualDomHoz && this.table.vdomHoz.initialized ? this.table.vdomHoz.initializeRow(this) : this.cells.forEach(function(e) {
                        t.element.appendChild(e.getElement()), e.cellRendered();
                    }), e && this.normalizeHeight(), this.table.options.dataTree && this.table.modExists("dataTree") && this.table.modules.dataTree.layoutRow(this), 
                    "collapse" === this.table.options.responsiveLayout && this.table.modExists("responsiveLayout") && this.table.modules.responsiveLayout.layoutRow(this), 
                    this.table.options.rowFormatter && this.table.options.rowFormatter(this.getComponent()), 
                    this.table.options.resizableRows && this.table.modExists("resizeRows") && this.table.modules.resizeRows.initializeRow(this), 
                    this.initialized = !0;
                } else this.table.options.virtualDomHoz && this.table.vdomHoz.reinitializeRow(this);
            }, A.prototype.reinitializeHeight = function() {
                this.heightInitialized = !1, this.element && null !== this.element.offsetParent && this.normalizeHeight(!0);
            }, A.prototype.reinitialize = function(e) {
                this.initialized = !1, this.heightInitialized = !1, this.manualHeight || (this.height = 0, 
                this.heightStyled = ""), this.element && null !== this.element.offsetParent && this.initialize(!0), 
                this.table.options.dataTree && this.table.modExists("dataTree", !0) && this.table.modules.dataTree.getTreeChildren(this, !1, !0).forEach(function(e) {
                    e.reinitialize(!0);
                });
            }, A.prototype.calcHeight = function(e) {
                var t = 0, o = this.table.options.resizableRows ? this.element.clientHeight : 0;
                this.cells.forEach(function(e) {
                    e = e.getHeight();
                    t < e && (t = e);
                }), this.height = !e && this.manualHeight ? this.height : Math.max(t, o), 
                this.heightStyled = this.height ? this.height + "px" : "", this.outerHeight = this.element.offsetHeight;
            }, A.prototype.setCellHeight = function() {
                this.cells.forEach(function(e) {
                    e.setHeight();
                }), this.heightInitialized = !0;
            }, A.prototype.clearCellHeight = function() {
                this.cells.forEach(function(e) {
                    e.clearHeight();
                });
            }, A.prototype.normalizeHeight = function(e) {
                e && this.clearCellHeight(), this.calcHeight(e), this.setCellHeight();
            }, A.prototype.setHeight = function(e, t) {
                this.height == e && !t || (this.manualHeight = !0, this.height = e, 
                this.heightStyled = e ? e + "px" : "", this.setCellHeight(), this.outerHeight = this.element.offsetHeight);
            }, A.prototype.getHeight = function() {
                return this.outerHeight;
            }, A.prototype.getWidth = function() {
                return this.element.offsetWidth;
            }, A.prototype.deleteCell = function(e) {
                e = this.cells.indexOf(e);
                -1 < e && this.cells.splice(e, 1);
            }, A.prototype.setData = function(e) {
                this.table.modExists("mutator") && (e = this.table.modules.mutator.transformRow(e, "data")), 
                this.data = e, this.table.options.reactiveData && this.table.modExists("reactiveData", !0) && this.table.modules.reactiveData.watchRow(this);
            }, A.prototype.updateData = function(i) {
                var n, s = this, r = this.element && N.prototype.helpers.elVisible(this.element), a = {};
                return new Promise(function(e, t) {
                    for (var o in "string" == typeof i && (i = JSON.parse(i)), s.table.options.reactiveData && s.table.modExists("reactiveData", !0) && s.table.modules.reactiveData.block(), 
                    n = s.table.modExists("mutator") ? (a = Object.assign(a, s.data), 
                    a = Object.assign(a, i), s.table.modules.mutator.transformRow(a, "data", i)) : i) s.data[o] = n[o];
                    for (var o in s.table.options.reactiveData && s.table.modExists("reactiveData", !0) && s.table.modules.reactiveData.unblock(), 
                    i) s.table.columnManager.getColumnsByFieldRoot(o).forEach(function(e) {
                        var t = s.getCell(e.getField());
                        t && (e = e.getFieldValue(n), t.getValue() != e) && (t.setValueProcessData(e), 
                        r) && t.cellRendered();
                    });
                    s.table.options.groupUpdateOnCellEdit && s.table.options.groupBy && s.table.modExists("groupRows") && s.table.modules.groupRows.reassignRowToGroup(s.row), 
                    r ? (s.normalizeHeight(!0), s.table.options.rowFormatter && s.table.options.rowFormatter(s.getComponent())) : (s.initialized = !1, 
                    s.height = 0, s.heightStyled = ""), !1 !== s.table.options.dataTree && s.table.modExists("dataTree") && s.table.modules.dataTree.redrawNeeded(i) && (s.table.modules.dataTree.initializeRow(s), 
                    r) && (s.table.modules.dataTree.layoutRow(s), s.table.rowManager.refreshActiveData("tree", !1, !0)), 
                    s.table.options.rowUpdated.call(s.table, s.getComponent()), 
                    s.table.options.dataChanged && s.table.options.dataChanged.call(s.table, s.table.rowManager.getData()), 
                    e();
                });
            }, A.prototype.getData = function(e) {
                return e && this.table.modExists("accessor") ? this.table.modules.accessor.transformRow(this, e) : this.data;
            }, A.prototype.getCell = function(t) {
                return t = this.table.columnManager.findColumn(t), this.cells.find(function(e) {
                    return e.column === t;
                });
            }, A.prototype.getCellIndex = function(t) {
                return this.cells.findIndex(function(e) {
                    return e === t;
                });
            }, A.prototype.findNextEditableCell = function(e) {
                var t = !1;
                if (e < this.cells.length - 1) for (var o = e + 1; o < this.cells.length; o++) {
                    var i = this.cells[o];
                    if (i.column.modules.edit && N.prototype.helpers.elVisible(i.getElement())) {
                        var n = !0;
                        if (n = "function" == typeof i.column.modules.edit.check ? i.column.modules.edit.check(i.getComponent()) : n) {
                            t = i;
                            break;
                        }
                    }
                }
                return t;
            }, A.prototype.findPrevEditableCell = function(e) {
                var t = !1;
                if (0 < e) for (var o = e - 1; 0 <= o; o--) {
                    var i = this.cells[o], n = !0;
                    if (i.column.modules.edit && N.prototype.helpers.elVisible(i.getElement()) && (n = "function" == typeof i.column.modules.edit.check ? i.column.modules.edit.check(i.getComponent()) : n)) {
                        t = i;
                        break;
                    }
                }
                return t;
            }, A.prototype.getCells = function() {
                return this.cells;
            }, A.prototype.nextRow = function() {
                return this.table.rowManager.nextDisplayRow(this, !0) || !1;
            }, A.prototype.prevRow = function() {
                return this.table.rowManager.prevDisplayRow(this, !0) || !1;
            }, A.prototype.moveToRow = function(e, t) {
                var o = this.table.rowManager.findRow(e);
                o ? (this.table.rowManager.moveRowActual(this, o, !t), this.table.rowManager.refreshActiveData("display", !1, !0)) : console.warn("Move Error - No matching row found:", e);
            }, A.prototype.validate = function() {
                var t = [];
                return this.cells.forEach(function(e) {
                    e.validate() || t.push(e.getComponent());
                }), !t.length || t;
            }, A.prototype.delete = function() {
                var n = this;
                return new Promise(function(e, t) {
                    var o, i;
                    n.table.options.history && n.table.modExists("history") && (o = n.table.options.groupBy && n.table.modExists("groupRows") ? (o = (i = n.getGroup().rows).indexOf(n)) && i[o - 1] : (o = n.table.rowManager.getRowIndex(n)) && n.table.rowManager.rows[o - 1], 
                    n.table.modules.history.action("rowDelete", n, {
                        data: n.getData(),
                        pos: !o,
                        index: o
                    })), n.deleteActual(), e();
                });
            }, A.prototype.deleteActual = function(e) {
                this.table.rowManager.getRowIndex(this);
                this.detatchModules(), this.table.options.reactiveData && this.table.modExists("reactiveData", !0), 
                this.modules.group && this.modules.group.removeRow(this), this.table.rowManager.deleteRow(this, e), 
                this.deleteCells(), this.initialized = !1, this.heightInitialized = !1, 
                this.element = !1, this.table.options.dataTree && this.table.modExists("dataTree", !0) && this.table.modules.dataTree.rowDelete(this), 
                this.table.modExists("columnCalcs") && (this.table.options.groupBy && this.table.modExists("groupRows") ? this.table.modules.columnCalcs.recalcRowGroup(this) : this.table.modules.columnCalcs.recalc(this.table.rowManager.activeRows));
            }, A.prototype.detatchModules = function() {
                this.table.modExists("selectRow") && this.table.modules.selectRow._deselectRow(this, !0), 
                this.table.modExists("edit") && this.table.modules.edit.currentCell.row === this && this.table.modules.edit.cancelEdit(), 
                this.table.modExists("frozenRows") && this.table.modules.frozenRows.detachRow(this);
            }, A.prototype.deleteCells = function() {
                for (var e = this.cells.length, t = 0; t < e; t++) this.cells[0].delete();
            }, A.prototype.wipe = function() {
                if (this.detatchModules(), this.deleteCells(), this.element) {
                    for (;this.element.firstChild; ) this.element.removeChild(this.element.firstChild);
                    this.element.parentNode && this.element.parentNode.removeChild(this.element);
                }
                this.element = !1, this.modules = {};
            }, A.prototype.getGroup = function() {
                return this.modules.group || !1;
            }, A.prototype.getComponent = function() {
                return this.component || (this.component = new O(this)), this.component;
            }, g.prototype.getValue = function() {
                return this._cell.getValue();
            }, g.prototype.getOldValue = function() {
                return this._cell.getOldValue();
            }, g.prototype.getInitialValue = function() {
                return this._cell.initialValue;
            }, g.prototype.getElement = function() {
                return this._cell.getElement();
            }, g.prototype.getRow = function() {
                return this._cell.row.getComponent();
            }, g.prototype.getData = function() {
                return this._cell.row.getData();
            }, g.prototype.getField = function() {
                return this._cell.column.getField();
            }, g.prototype.getColumn = function() {
                return this._cell.column.getComponent();
            }, g.prototype.setValue = function(e, t) {
                this._cell.setValue(e, t = void 0 === t ? !0 : t);
            }, g.prototype.restoreOldValue = function() {
                this._cell.setValueActual(this._cell.getOldValue());
            }, g.prototype.restoreInitialValue = function() {
                this._cell.setValueActual(this._cell.initialValue);
            }, g.prototype.edit = function(e) {
                return this._cell.edit(e);
            }, g.prototype.cancelEdit = function() {
                this._cell.cancelEdit();
            }, g.prototype.isEdited = function() {
                return !!this._cell.modules.edit && this._cell.modules.edit.edited;
            }, g.prototype.clearEdited = function() {
                self.table.modExists("edit", !0) && this._cell.table.modules.edit.clearEdited(this._cell);
            }, g.prototype.isValid = function() {
                return !this._cell.modules.validate || !this._cell.modules.validate.invalid;
            }, g.prototype.validate = function() {
                return this._cell.validate();
            }, g.prototype.clearValidation = function() {
                this._cell.table.modExists("validate", !0) && this._cell.table.modules.validate.clearValidation(this._cell);
            }, g.prototype.nav = function() {
                return this._cell.nav();
            }, g.prototype.checkHeight = function() {
                this._cell.checkHeight();
            }, g.prototype.getTable = function() {
                return this._cell.table;
            }, g.prototype._getSelf = function() {
                return this._cell;
            }, function(e, t) {
                this.table = e.table, this.column = e, this.row = t, this.element = null, 
                this.value = null, this.initialValue, this.oldValue = null, this.modules = {}, 
                this.height = null, this.width = null, this.minWidth = null, this.component = null, 
                this.loaded = !1, this.build();
            }), N = (P.prototype.build = function() {
                this.generateElement(), this.setWidth(), this._configureCell(), 
                this.setValueActual(this.column.getFieldValue(this.row.data)), this.initialValue = this.value;
            }, P.prototype.generateElement = function() {
                this.element = document.createElement("div"), this.element.className = "tabulator-cell", 
                this.element.setAttribute("role", "gridcell"), this.element = this.element;
            }, P.prototype._configureCell = function() {
                var t = this, e = t.column.cellEvents, o = t.element, i = this.column.getField();
                o.style.textAlign = t.column.hozAlign, t.column.vertAlign && (o.style.display = "inline-flex", 
                o.style.alignItems = {
                    top: "flex-start",
                    bottom: "flex-end",
                    middle: "center"
                }[t.column.vertAlign] || "", t.column.hozAlign) && (o.style.justifyContent = {
                    left: "flex-start",
                    right: "flex-end",
                    center: "center"
                }[t.column.hozAlign] || ""), i && o.setAttribute("tabulator-field", i), 
                t.column.definition.cssClass && t.column.definition.cssClass.split(" ").forEach(function(e) {
                    o.classList.add(e);
                }), "hover" === this.table.options.tooltipGenerationMode && o.addEventListener("mouseenter", function(e) {
                    t._generateTooltip();
                }), t._bindClickEvents(e), t._bindTouchEvents(e), t._bindMouseEvents(e), 
                t.column.modules.edit && t.table.modules.edit.bindEditor(t), t.column.definition.rowHandle && !1 !== t.table.options.movableRows && t.table.modExists("moveRow") && t.table.modules.moveRow.initializeCell(t), 
                t.column.visible || t.hide();
            }, P.prototype._bindClickEvents = function(o) {
                var i = this, e = i.element;
                (o.cellClick || i.table.options.cellClick) && e.addEventListener("click", function(e) {
                    var t = i.getComponent();
                    o.cellClick && o.cellClick.call(i.table, e, t), i.table.options.cellClick && i.table.options.cellClick.call(i.table, e, t);
                }), o.cellDblClick || this.table.options.cellDblClick ? e.addEventListener("dblclick", function(e) {
                    var t = i.getComponent();
                    o.cellDblClick && o.cellDblClick.call(i.table, e, t), i.table.options.cellDblClick && i.table.options.cellDblClick.call(i.table, e, t);
                }) : e.addEventListener("dblclick", function(e) {
                    if (!i.table.modExists("edit") || i.table.modules.edit.currentCell !== i) {
                        e.preventDefault();
                        try {
                            var t;
                            document.selection ? ((t = document.body.createTextRange()).moveToElementText(i.element), 
                            t.select()) : window.getSelection && ((t = document.createRange()).selectNode(i.element), 
                            window.getSelection().removeAllRanges(), window.getSelection().addRange(t));
                        } catch (e) {}
                    }
                }), (o.cellContext || this.table.options.cellContext) && e.addEventListener("contextmenu", function(e) {
                    var t = i.getComponent();
                    o.cellContext && o.cellContext.call(i.table, e, t), i.table.options.cellContext && i.table.options.cellContext.call(i.table, e, t);
                });
            }, P.prototype._bindMouseEvents = function(o) {
                var i = this, e = i.element;
                (o.cellMouseEnter || i.table.options.cellMouseEnter) && e.addEventListener("mouseenter", function(e) {
                    var t = i.getComponent();
                    o.cellMouseEnter && o.cellMouseEnter.call(i.table, e, t), i.table.options.cellMouseEnter && i.table.options.cellMouseEnter.call(i.table, e, t);
                }), (o.cellMouseLeave || i.table.options.cellMouseLeave) && e.addEventListener("mouseleave", function(e) {
                    var t = i.getComponent();
                    o.cellMouseLeave && o.cellMouseLeave.call(i.table, e, t), i.table.options.cellMouseLeave && i.table.options.cellMouseLeave.call(i.table, e, t);
                }), (o.cellMouseOver || i.table.options.cellMouseOver) && e.addEventListener("mouseover", function(e) {
                    var t = i.getComponent();
                    o.cellMouseOver && o.cellMouseOver.call(i.table, e, t), i.table.options.cellMouseOver && i.table.options.cellMouseOver.call(i.table, e, t);
                }), (o.cellMouseOut || i.table.options.cellMouseOut) && e.addEventListener("mouseout", function(e) {
                    var t = i.getComponent();
                    o.cellMouseOut && o.cellMouseOut.call(i.table, e, t), i.table.options.cellMouseOut && i.table.options.cellMouseOut.call(i.table, e, t);
                }), (o.cellMouseMove || i.table.options.cellMouseMove) && e.addEventListener("mousemove", function(e) {
                    var t = i.getComponent();
                    o.cellMouseMove && o.cellMouseMove.call(i.table, e, t), i.table.options.cellMouseMove && i.table.options.cellMouseMove.call(i.table, e, t);
                });
            }, P.prototype._bindTouchEvents = function(o) {
                var i, n, s, r = this, e = r.element;
                (o.cellTap || this.table.options.cellTap) && (s = !1, e.addEventListener("touchstart", function(e) {
                    s = !0;
                }, {
                    passive: !0
                }), e.addEventListener("touchend", function(e) {
                    var t;
                    s && (t = r.getComponent(), o.cellTap && o.cellTap.call(r.table, e, t), 
                    r.table.options.cellTap) && r.table.options.cellTap.call(r.table, e, t), 
                    s = !1;
                })), (o.cellDblTap || this.table.options.cellDblTap) && (i = null, 
                e.addEventListener("touchend", function(e) {
                    var t;
                    i ? (clearTimeout(i), i = null, t = r.getComponent(), o.cellDblTap && o.cellDblTap.call(r.table, e, t), 
                    r.table.options.cellDblTap && r.table.options.cellDblTap.call(r.table, e, t)) : i = setTimeout(function() {
                        clearTimeout(i), i = null;
                    }, 300);
                })), (o.cellTapHold || this.table.options.cellTapHold) && (n = null, 
                e.addEventListener("touchstart", function(t) {
                    clearTimeout(n), n = setTimeout(function() {
                        clearTimeout(n), n = null, s = !1;
                        var e = r.getComponent();
                        o.cellTapHold && o.cellTapHold.call(r.table, t, e), r.table.options.cellTapHold && r.table.options.cellTapHold.call(r.table, t, e);
                    }, 1e3);
                }, {
                    passive: !0
                }), e.addEventListener("touchend", function(e) {
                    clearTimeout(n), n = null;
                }));
            }, P.prototype._generateContents = function() {
                var e = this.table.modExists("format") ? this.table.modules.format.formatValue(this) : this.element.innerHTML = this.value;
                switch (void 0 === e ? "undefined" : Q(e)) {
                  case "object":
                    if (e instanceof Node) {
                        for (;this.element.firstChild; ) this.element.removeChild(this.element.firstChild);
                        this.element.appendChild(e);
                    } else this.element.innerHTML = "", null != e && console.warn("Format Error - Formatter has returned a type of object, the only valid formatter object return is an instance of Node, the formatter returned:", e);
                    break;

                  case "undefined":
                  case "null":
                    this.element.innerHTML = "";
                    break;

                  default:
                    this.element.innerHTML = e;
                }
            }, P.prototype.cellRendered = function() {
                this.table.modExists("format") && this.table.modules.format.cellRendered && this.table.modules.format.cellRendered(this);
            }, P.prototype._generateTooltip = function() {
                var e = this.column.tooltip;
                e ? (!0 === e ? e = this.value : "function" == typeof e && !1 === (e = e(this.getComponent())) && (e = ""), 
                this.element.setAttribute("title", e = void 0 === e ? "" : e)) : this.element.setAttribute("title", "");
            }, P.prototype.getElement = function(e) {
                return this.loaded || (this.loaded = !0, e) || this.layoutElement(), 
                this.element;
            }, P.prototype.getValue = function() {
                return this.value;
            }, P.prototype.getOldValue = function() {
                return this.oldValue;
            }, P.prototype.setValue = function(e, t) {
                this.setValueProcessData(e, t) && (this.table.options.history && this.table.modExists("history") && this.table.modules.history.action("cellEdit", this, {
                    oldValue: this.oldValue,
                    newValue: this.value
                }), e = this.getComponent(), this.column.cellEvents.cellEdited && this.column.cellEvents.cellEdited.call(this.table, e), 
                this.table.options.groupUpdateOnCellEdit && this.table.options.groupBy && this.table.modExists("groupRows") && this.table.modules.groupRows.reassignRowToGroup(this.row), 
                this.cellRendered(), this.table.options.cellEdited.call(this.table, e), 
                this.table.options.dataChanged) && this.table.options.dataChanged.call(this.table, this.table.rowManager.getData());
            }, P.prototype.setValueProcessData = function(e, t) {
                var o = !1;
                return this.value != e && (o = !0, t) && this.column.modules.mutate && (e = this.table.modules.mutator.transformCell(this, e)), 
                this.setValueActual(e), o && this.table.modExists("columnCalcs") && (this.column.definition.topCalc || this.column.definition.bottomCalc) && (this.table.options.groupBy && this.table.modExists("groupRows") ? ("table" != this.table.options.columnCalcs && "both" != this.table.options.columnCalcs || this.table.modules.columnCalcs.recalc(this.table.rowManager.activeRows), 
                "table" != this.table.options.columnCalcs && this.table.modules.columnCalcs.recalcRowGroup(this.row)) : this.table.modules.columnCalcs.recalc(this.table.rowManager.activeRows)), 
                o;
            }, P.prototype.setValueActual = function(e) {
                this.oldValue = this.value, this.value = e, this.table.options.reactiveData && this.table.modExists("reactiveData") && this.table.modules.reactiveData.block(), 
                this.column.setFieldValue(this.row.data, e), this.table.options.reactiveData && this.table.modExists("reactiveData") && this.table.modules.reactiveData.unblock(), 
                this.loaded && this.layoutElement();
            }, P.prototype.layoutElement = function() {
                this._generateContents(), this._generateTooltip(), this.table.options.resizableColumns && this.table.modExists("resizeColumns") && "row" === this.row.type && this.table.modules.resizeColumns.initializeColumn("cell", this.column, this.element), 
                (this.column.definition.contextMenu || this.column.definition.clickMenu) && this.table.modExists("menu") && this.table.modules.menu.initializeCell(this), 
                this.table.modExists("frozenColumns") && this.table.modules.frozenColumns.layoutElement(this.element, this.column);
            }, P.prototype.setWidth = function() {
                this.width = this.column.width, this.element.style.width = this.column.widthStyled;
            }, P.prototype.clearWidth = function() {
                this.width = "", this.element.style.width = "";
            }, P.prototype.getWidth = function() {
                return this.width || this.element.offsetWidth;
            }, P.prototype.setMinWidth = function() {
                this.minWidth = this.column.minWidth, this.element.style.minWidth = this.column.minWidthStyled;
            }, P.prototype.setMaxWidth = function() {
                this.maxWidth = this.column.maxWidth, this.element.style.maxWidth = this.column.maxWidthStyled;
            }, P.prototype.checkHeight = function() {
                this.row.reinitializeHeight();
            }, P.prototype.clearHeight = function() {
                this.element.style.height = "", this.height = null;
            }, P.prototype.setHeight = function() {
                this.height = this.row.height, this.element.style.height = this.row.heightStyled;
            }, P.prototype.getHeight = function() {
                return this.height || this.element.offsetHeight;
            }, P.prototype.show = function() {
                this.element.style.display = this.column.vertAlign ? "inline-flex" : "";
            }, P.prototype.hide = function() {
                this.element.style.display = "none";
            }, P.prototype.edit = function(e) {
                if (this.table.modExists("edit", !0)) return this.table.modules.edit.editCell(this, e);
            }, P.prototype.cancelEdit = function() {
                var e;
                this.table.modExists("edit", !0) && ((e = this.table.modules.edit.getCurrentCell()) && e._getSelf() === this ? this.table.modules.edit.cancelEdit() : console.warn("Cancel Editor Error - This cell is not currently being edited "));
            }, P.prototype.validate = function() {
                return !this.column.modules.validate || !this.table.modExists("validate", !0) || !0 === this.table.modules.validate.validate(this.column.modules.validate, this, this.getValue());
            }, P.prototype.delete = function() {
                !this.table.rowManager.redrawBlock && this.element.parentNode && this.element.parentNode.removeChild(this.element), 
                this.modules.validate && this.modules.validate.invalid && this.table.modules.validate.clearValidation(this), 
                this.modules.edit && this.modules.edit.edited && this.table.modules.edit.clearEdited(this), 
                this.table.options.history && this.table.modules.history.clearComponentHistory(this), 
                this.element = !1, this.column.deleteCell(this), this.row.deleteCell(this), 
                this.calcs = {};
            }, P.prototype.nav = function() {
                var o = this, e = !1, t = this.row.getCellIndex(this);
                return {
                    next: function() {
                        var e, t = this.right();
                        return !!t || !(!(e = o.table.rowManager.nextDisplayRow(o.row, !0)) || !(t = e.findNextEditableCell(-1)) || (t.edit(), 
                        0));
                    },
                    prev: function() {
                        var e, t = this.left();
                        return !!t || !(!(e = o.table.rowManager.prevDisplayRow(o.row, !0)) || !(t = e.findPrevEditableCell(e.cells.length)) || (t.edit(), 
                        0));
                    },
                    left: function() {
                        return !!(e = o.row.findPrevEditableCell(t)) && (e.edit(), 
                        !0);
                    },
                    right: function() {
                        return !!(e = o.row.findNextEditableCell(t)) && (e.edit(), 
                        !0);
                    },
                    up: function() {
                        var e = o.table.rowManager.prevDisplayRow(o.row, !0);
                        e && e.cells[t].edit();
                    },
                    down: function() {
                        var e = o.table.rowManager.nextDisplayRow(o.row, !0);
                        e && e.cells[t].edit();
                    }
                };
            }, P.prototype.getIndex = function() {
                this.row.getCellIndex(this);
            }, P.prototype.getComponent = function() {
                return this.component || (this.component = new g(this)), this.component;
            }, s.prototype.createElement = function() {
                var e = document.createElement("div");
                return e.classList.add("tabulator-footer"), e;
            }, s.prototype._initialize = function(e) {
                this.table.options.footerElement && ("string" === Q(this.table.options.footerElement) ? "<" === this.table.options.footerElement[0] ? this.element.innerHTML = this.table.options.footerElement : (this.external = !0, 
                this.element = document.querySelector(this.table.options.footerElement)) : this.element = this.table.options.footerElement);
            }, s.prototype.getElement = function() {
                return this.element;
            }, s.prototype.append = function(e, t) {
                this.activate(t), this.element.appendChild(e), this.table.rowManager.adjustTableSize();
            }, s.prototype.prepend = function(e, t) {
                this.activate(t), this.element.insertBefore(e, this.element.firstChild), 
                this.table.rowManager.adjustTableSize();
            }, s.prototype.remove = function(e) {
                e.parentNode.removeChild(e), this.deactivate();
            }, s.prototype.deactivate = function(e) {
                this.element.firstChild && !e || (this.external || this.element.parentNode.removeChild(this.element), 
                this.active = !1);
            }, s.prototype.activate = function(e) {
                this.active || (this.active = !0, this.external) || (this.table.element.appendChild(this.getElement()), 
                this.table.element.style.display = ""), e && this.links.push(e);
            }, function e(t, o) {
                this.options = {}, this.columnManager = null, this.rowManager = null, 
                this.footerManager = null, this.vdomHoz = null, this.browser = "", 
                this.browserSlow = !1, this.browserMobile = !1, this.rtl = !1, this.modules = {}, 
                this.initializeElement(t) && (this.initializeOptions(o || {}), this._create()), 
                e.prototype.comms.register(this);
            }), H = (N.prototype.defaultOptions = {
                height: !(s.prototype.redraw = function() {
                    this.links.forEach(function(e) {
                        e.footerRedraw();
                    });
                }),
                //height of tabulator
                minHeight: !1,
                //minimum height of tabulator
                maxHeight: !1,
                //maximum height of tabulator
                layout: "fitData",
                layoutColumnsOnNewData: !1,
                columnMinWidth: 40,
                columnMaxWidth: !1,
                columnHeaderVertAlign: "top",
                columnVertAlign: !1,
                resizableColumns: !0,
                resizableRows: !1,
                autoResize: !0,
                columns: [],
                cellHozAlign: "",
                cellVertAlign: "",
                headerHozAlign: "",
                data: [],
                autoColumns: !1,
                autoColumnsDefinitions: !1,
                reactiveData: !1,
                nestedFieldSeparator: ".",
                tooltips: !1,
                tooltipsHeader: !1,
                tooltipGenerationMode: "load",
                initialSort: !1,
                initialFilter: !1,
                initialHeaderFilter: !1,
                columnHeaderSortMulti: !0,
                sortOrderReverse: !1,
                headerSort: !0,
                headerSortTristate: !1,
                headerSortElement: "<div class='tabulator-arrow'></div>",
                footerElement: !1,
                index: "id",
                textDirection: "auto",
                keybindings: [],
                tabEndNewRow: !1,
                invalidOptionWarnings: !0,
                clipboard: !1,
                clipboardCopyStyled: !0,
                clipboardCopyConfig: !1,
                clipboardCopyFormatter: !1,
                clipboardCopyRowRange: "active",
                clipboardPasteParser: "table",
                clipboardPasteAction: "insert",
                clipboardCopied: function() {},
                clipboardPasted: function() {},
                clipboardPasteError: function() {},
                downloadDataFormatter: !1,
                downloadReady: function(e, t) {
                    return t;
                },
                downloadComplete: !1,
                downloadConfig: {},
                downloadRowRange: "active",
                dataTree: !1,
                dataTreeFilter: !0,
                dataTreeSort: !0,
                dataTreeElementColumn: !1,
                dataTreeBranchElement: !0,
                dataTreeChildIndent: 9,
                dataTreeChildField: "_children",
                dataTreeCollapseElement: !1,
                dataTreeExpandElement: !1,
                dataTreeStartExpanded: !1,
                dataTreeRowExpanded: function() {},
                dataTreeRowCollapsed: function() {},
                dataTreeChildColumnCalcs: !1,
                dataTreeSelectPropagate: !1,
                printAsHtml: !1,
                printFormatter: !1,
                printHeader: !1,
                printFooter: !1,
                printCopyStyle: !0,
                printStyled: !0,
                printVisibleRows: !0,
                printRowRange: "visible",
                printConfig: {},
                addRowPos: "bottom",
                selectable: "highlight",
                selectableRangeMode: "drag",
                selectableRollingSelection: !0,
                selectablePersistence: !0,
                selectableCheck: function(e, t) {
                    return !0;
                },
                headerFilterLiveFilterDelay: 300,
                headerFilterPlaceholder: !1,
                headerVisible: !0,
                history: !1,
                locale: !1,
                langs: {},
                virtualDom: !0,
                virtualDomBuffer: 0,
                virtualDomHoz: !1,
                persistentLayout: !1,
                persistentSort: !1,
                persistentFilter: !1,
                persistenceID: "",
                persistenceMode: !0,
                persistenceReaderFunc: !1,
                persistenceWriterFunc: !1,
                persistence: !1,
                responsiveLayout: !1,
                responsiveLayoutCollapseStartOpen: !0,
                responsiveLayoutCollapseUseFormatters: !0,
                responsiveLayoutCollapseFormatter: !1,
                pagination: !1,
                paginationSize: !1,
                paginationInitialPage: 1,
                paginationButtonCount: 5,
                paginationSizeSelector: !1,
                paginationElement: !1,
                paginationDataSent: {},
                paginationDataReceived: {},
                paginationAddRow: "page",
                ajaxURL: !1,
                ajaxURLGenerator: !1,
                ajaxParams: {},
                ajaxConfig: "get",
                ajaxContentType: "form",
                ajaxRequestFunc: !1,
                ajaxLoader: !0,
                ajaxLoaderLoading: !1,
                ajaxLoaderError: !1,
                ajaxFiltering: !1,
                ajaxSorting: !1,
                ajaxProgressiveLoad: !1,
                ajaxProgressiveLoadDelay: 0,
                ajaxProgressiveLoadScrollMargin: 0,
                groupBy: !1,
                groupStartOpen: !0,
                groupValues: !1,
                groupUpdateOnCellEdit: !1,
                groupHeader: !1,
                groupHeaderPrint: null,
                groupHeaderClipboard: null,
                groupHeaderHtmlOutput: null,
                groupHeaderDownload: null,
                htmlOutputConfig: !1,
                movableColumns: !1,
                movableRows: !1,
                movableRowsConnectedTables: !1,
                movableRowsConnectedElements: !1,
                movableRowsSender: !1,
                movableRowsReceiver: "insert",
                movableRowsSendingStart: function() {},
                movableRowsSent: function() {},
                movableRowsSentFailed: function() {},
                movableRowsSendingStop: function() {},
                movableRowsReceivingStart: function() {},
                movableRowsReceived: function() {},
                movableRowsReceivedFailed: function() {},
                movableRowsReceivingStop: function() {},
                movableRowsElementDrop: function() {},
                scrollToRowPosition: "top",
                scrollToRowIfVisible: !0,
                scrollToColumnPosition: "left",
                scrollToColumnIfVisible: !0,
                rowFormatter: !1,
                rowFormatterPrint: null,
                rowFormatterClipboard: null,
                rowFormatterHtmlOutput: null,
                placeholder: !1,
                tableBuilding: function() {},
                tableBuilt: function() {},
                renderStarted: function() {},
                renderComplete: function() {},
                rowClick: !1,
                rowDblClick: !1,
                rowContext: !1,
                rowTap: !1,
                rowDblTap: !1,
                rowTapHold: !1,
                rowMouseEnter: !1,
                rowMouseLeave: !1,
                rowMouseOver: !1,
                rowMouseOut: !1,
                rowMouseMove: !1,
                rowContextMenu: !1,
                rowClickMenu: !1,
                rowAdded: function() {},
                rowDeleted: function() {},
                rowMoved: function() {},
                rowUpdated: function() {},
                rowSelectionChanged: function() {},
                rowSelected: function() {},
                rowDeselected: function() {},
                rowResized: function() {},
                cellClick: !1,
                cellDblClick: !1,
                cellContext: !1,
                cellTap: !1,
                cellDblTap: !1,
                cellTapHold: !1,
                cellMouseEnter: !1,
                cellMouseLeave: !1,
                cellMouseOver: !1,
                cellMouseOut: !1,
                cellMouseMove: !1,
                cellEditing: function() {},
                cellEdited: function() {},
                cellEditCancelled: function() {},
                columnMoved: !1,
                columnResized: function() {},
                columnTitleChanged: function() {},
                columnVisibilityChanged: function() {},
                htmlImporting: function() {},
                htmlImported: function() {},
                dataLoading: function() {},
                dataLoaded: function() {},
                dataEdited: !1,
                dataChanged: !1,
                ajaxRequesting: function() {},
                ajaxResponse: !1,
                ajaxError: function() {},
                dataFiltering: !1,
                dataFiltered: !1,
                dataSorting: function() {},
                dataSorted: function() {},
                groupToggleElement: "arrow",
                groupClosedShowCalcs: !1,
                dataGrouping: function() {},
                dataGrouped: !1,
                groupVisibilityChanged: function() {},
                groupClick: !1,
                groupDblClick: !1,
                groupContext: !1,
                groupContextMenu: !1,
                groupClickMenu: !1,
                groupTap: !1,
                groupDblTap: !1,
                groupTapHold: !1,
                columnCalcs: !0,
                pageLoaded: function() {},
                localized: function() {},
                validationMode: "blocking",
                validationFailed: function() {},
                historyUndo: function() {},
                historyRedo: function() {},
                scrollHorizontal: function() {},
                scrollVertical: function() {}
            }, N.prototype.initializeOptions = function(e) {
                if (!1 !== e.invalidOptionWarnings) for (var t in e) void 0 === this.defaultOptions[t] && console.warn("Invalid table constructor option:", t);
                for (var t in this.defaultOptions) t in e ? this.options[t] = e[t] : Array.isArray(this.defaultOptions[t]) ? this.options[t] = Object.assign([], this.defaultOptions[t]) : "object" === Q(this.defaultOptions[t]) && null !== this.defaultOptions[t] ? this.options[t] = Object.assign({}, this.defaultOptions[t]) : this.options[t] = this.defaultOptions[t];
            }, N.prototype.initializeElement = function(e) {
                return "undefined" != typeof HTMLElement && e instanceof HTMLElement ? (this.element = e, 
                !0) : "string" == typeof e ? (this.element = document.querySelector(e), 
                !!this.element || (console.error("Tabulator Creation Error - no element found matching selector: ", e), 
                !1)) : (console.error("Tabulator Creation Error - Invalid element provided:", e), 
                !1);
            }, N.prototype.rtlCheck = function() {
                var e = window.getComputedStyle(this.element);
                switch (this.options.textDirection) {
                  case "auto":
                    if ("rtl" !== e.direction) break;

                  case "rtl":
                    this.element.classList.add("tabulator-rtl"), this.rtl = !0;
                    break;

                  case "ltr":
                    this.element.classList.add("tabulator-ltr");

                  default:
                    this.rtl = !1;
                }
            }, N.prototype._mapDepricatedFunctionality = function() {
                (this.options.persistentLayout || this.options.persistentSort || this.options.persistentFilter) && !this.options.persistence && (this.options.persistence = {}), 
                this.options.dataEdited && (console.warn("DEPRECATION WARNING - dataEdited option has been deprecated, please use the dataChanged option instead"), 
                this.options.dataChanged = this.options.dataEdited), this.options.downloadDataFormatter && console.warn("DEPRECATION WARNING - downloadDataFormatter option has been deprecated"), 
                void 0 !== this.options.clipboardCopyHeader && (this.options.columnHeaders = this.options.clipboardCopyHeader, 
                console.warn("DEPRECATION WARNING - clipboardCopyHeader option has been deprecated, please use the columnHeaders property on the clipboardCopyConfig option")), 
                !0 !== this.options.printVisibleRows && (console.warn("printVisibleRows option is deprecated, you should now use the printRowRange option"), 
                this.options.persistence.printRowRange = "active"), !0 !== this.options.printCopyStyle && (console.warn("printCopyStyle option is deprecated, you should now use the printStyled option"), 
                this.options.persistence.printStyled = this.options.printCopyStyle), 
                this.options.persistentLayout && (console.warn("persistentLayout option is deprecated, you should now use the persistence option"), 
                !0 !== this.options.persistence) && void 0 === this.options.persistence.columns && (this.options.persistence.columns = !0), 
                this.options.persistentSort && (console.warn("persistentSort option is deprecated, you should now use the persistence option"), 
                !0 !== this.options.persistence) && void 0 === this.options.persistence.sort && (this.options.persistence.sort = !0), 
                this.options.persistentFilter && (console.warn("persistentFilter option is deprecated, you should now use the persistence option"), 
                !0 !== this.options.persistence) && void 0 === this.options.persistence.filter && (this.options.persistence.filter = !0), 
                this.options.columnVertAlign && (console.warn("columnVertAlign option is deprecated, you should now use the columnHeaderVertAlign option"), 
                this.options.columnHeaderVertAlign = this.options.columnVertAlign);
            }, N.prototype._clearSelection = function() {
                this.element.classList.add("tabulator-block-select"), window.getSelection ? window.getSelection().empty ? window.getSelection().empty() : window.getSelection().removeAllRanges && window.getSelection().removeAllRanges() : document.selection && document.selection.empty(), 
                this.element.classList.remove("tabulator-block-select");
            }, N.prototype._create = function() {
                this._clearObjectPointers(), this._mapDepricatedFunctionality(), 
                this.bindModules(), this.rtlCheck(), "TABLE" === this.element.tagName && this.modExists("htmlTableImport", !0) && this.modules.htmlTableImport.parseTable(), 
                this.columnManager = new t(this), this.rowManager = new o(this), 
                this.footerManager = new s(this), this.columnManager.setRowManager(this.rowManager), 
                this.rowManager.setColumnManager(this.columnManager), this.options.virtualDomHoz && (this.vdomHoz = new n(this)), 
                this._buildElement(), this._loadInitialData();
            }, N.prototype._clearObjectPointers = function() {
                this.options.columns = this.options.columns.slice(0), this.options.reactiveData || (this.options.data = this.options.data.slice(0));
            }, 
            //build tabulator element
            N.prototype._buildElement = function() {
                var e, t, o, i = this, n = this.element, s = this.modules, r = this.options;
                for (r.tableBuilding.call(this), n.classList.add("tabulator"), n.setAttribute("role", "grid"); n.firstChild; ) n.removeChild(n.firstChild);
                for (e in r.height && (r.height = isNaN(r.height) ? r.height : r.height + "px", 
                n.style.height = r.height), !1 !== r.minHeight && (r.minHeight = isNaN(r.minHeight) ? r.minHeight : r.minHeight + "px", 
                n.style.minHeight = r.minHeight), !1 !== r.maxHeight && (r.maxHeight = isNaN(r.maxHeight) ? r.maxHeight : r.maxHeight + "px", 
                n.style.maxHeight = r.maxHeight), this.columnManager.initialize(), 
                this.rowManager.initialize(), this._detectBrowser(), this.modExists("layout", !0) && s.layout.initialize(r.layout), 
                s.localize.initialize(), !1 !== r.headerFilterPlaceholder && s.localize.setHeaderFilterPlaceholder(r.headerFilterPlaceholder), 
                r.langs) s.localize.installLang(e, r.langs[e]);
                s.localize.setLocale(r.locale), "string" == typeof r.placeholder && ((o = document.createElement("div")).classList.add("tabulator-placeholder"), 
                (t = document.createElement("span")).innerHTML = r.placeholder, 
                o.appendChild(t), r.placeholder = o), n.appendChild(this.columnManager.getElement()), 
                n.appendChild(this.rowManager.getElement()), r.footerElement && this.footerManager.activate(), 
                r.persistence && this.modExists("persistence", !0) && s.persistence.initialize(), 
                r.movableRows && this.modExists("moveRow") && s.moveRow.initialize(), 
                r.autoColumns && this.options.data && this.columnManager.generateColumnsFromRowData(this.options.data), 
                this.modExists("columnCalcs") && s.columnCalcs.initialize(), this.columnManager.setColumns(r.columns), 
                r.dataTree && this.modExists("dataTree", !0) && s.dataTree.initialize(), 
                this.modExists("frozenRows") && this.modules.frozenRows.initialize(), 
                (r.persistence && this.modExists("persistence", !0) && s.persistence.config.sort || r.initialSort) && this.modExists("sort", !0) && (t = [], 
                r.persistence && this.modExists("persistence", !0) && s.persistence.config.sort ? !1 === (t = s.persistence.load("sort")) && r.initialSort && (t = r.initialSort) : r.initialSort && (t = r.initialSort), 
                s.sort.setSort(t)), (r.persistence && this.modExists("persistence", !0) && s.persistence.config.filter || r.initialFilter) && this.modExists("filter", !0) && (o = [], 
                r.persistence && this.modExists("persistence", !0) && s.persistence.config.filter ? !1 === (o = s.persistence.load("filter")) && r.initialFilter && (o = r.initialFilter) : r.initialFilter && (o = r.initialFilter), 
                s.filter.setFilter(o)), r.initialHeaderFilter && this.modExists("filter", !0) && r.initialHeaderFilter.forEach(function(e) {
                    var t = i.columnManager.findColumn(e.field);
                    if (!t) return console.warn("Column Filter Error - No matching column found:", e.field), 
                    !1;
                    s.filter.setHeaderFilterValue(t, e.value);
                }), this.modExists("ajax") && s.ajax.initialize(), r.pagination && this.modExists("page", !0) && s.page.initialize(), 
                r.groupBy && this.modExists("groupRows", !0) && s.groupRows.initialize(), 
                this.modExists("keybindings") && s.keybindings.initialize(), this.modExists("selectRow") && s.selectRow.clearSelectionData(!0), 
                r.autoResize && this.modExists("resizeTable") && s.resizeTable.initialize(), 
                this.modExists("clipboard") && s.clipboard.initialize(), r.printAsHtml && this.modExists("print") && s.print.initialize(), 
                r.tableBuilt.call(this);
            }, N.prototype._loadInitialData = function() {
                var e = this;
                e.options.pagination && e.modExists("page") ? (e.modules.page.reset(!0, !0), 
                "local" == e.options.pagination ? !e.options.data.length && (e.options.ajaxURL || e.options.ajaxURLGenerator) && e.modExists("ajax") ? e.modules.ajax.loadData(!1, !0).then(function() {}).catch(function() {
                    e.options.paginationInitialPage && e.modules.page.setPage(e.options.paginationInitialPage);
                }) : (e.rowManager.setData(e.options.data, !1, !0), e.options.paginationInitialPage && e.modules.page.setPage(e.options.paginationInitialPage)) : e.options.ajaxURL ? e.modules.page.setPage(e.options.paginationInitialPage).then(function() {}).catch(function() {}) : e.rowManager.setData([], !1, !0)) : e.options.data.length ? e.rowManager.setData(e.options.data) : (e.options.ajaxURL || e.options.ajaxURLGenerator) && e.modExists("ajax") ? e.modules.ajax.loadData(!1, !0).then(function() {}).catch(function() {}) : e.rowManager.setData(e.options.data, !1, !0);
            }, N.prototype.destroy = function() {
                var e = this.element;
                for (N.prototype.comms.deregister(this), this.options.reactiveData && this.modExists("reactiveData", !0) && this.modules.reactiveData.unwatchData(), 
                this.rowManager.rows.forEach(function(e) {
                    e.wipe();
                }), this.rowManager.rows = [], this.rowManager.activeRows = [], 
                this.rowManager.displayRows = [], this.options.autoResize && this.modExists("resizeTable") && this.modules.resizeTable.clearBindings(), 
                this.modExists("keybindings") && this.modules.keybindings.clearBindings(); e.firstChild; ) e.removeChild(e.firstChild);
                e.classList.remove("tabulator");
            }, N.prototype._detectBrowser = function() {
                var e = navigator.userAgent || navigator.vendor || window.opera;
                -1 < e.indexOf("Trident") ? (this.browser = "ie", this.browserSlow = !0) : -1 < e.indexOf("Edge") ? (this.browser = "edge", 
                this.browserSlow = !0) : (-1 < e.indexOf("Firefox") ? this.browser = "firefox" : this.browser = "other", 
                this.browserSlow = !1), this.browserMobile = /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(e) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0, 4));
            }, N.prototype.blockRedraw = function() {
                return this.rowManager.blockRedraw();
            }, N.prototype.restoreRedraw = function() {
                return this.rowManager.restoreRedraw();
            }, N.prototype.setDataFromLocalFile = function(e) {
                var a = this;
                return new Promise(function(n, s) {
                    var r = document.createElement("input");
                    r.type = "file", r.accept = e || ".json,application/json", r.addEventListener("change", function(e) {
                        var t, o = r.files[0], i = new FileReader();
                        i.readAsText(o), i.onload = function(e) {
                            try {
                                t = JSON.parse(i.result);
                            } catch (e) {
                                return console.warn("File Load Error - File contents is invalid JSON", e), 
                                void s(e);
                            }
                            a.setData(t).then(function(e) {
                                n(e);
                            }).catch(function(e) {
                                n(e);
                            });
                        }, i.onerror = function(e) {
                            console.warn("File Load Error - Unable to read file"), 
                            s();
                        };
                    }), r.click();
                });
            }, N.prototype.setData = function(e, t, o) {
                return this.modExists("ajax") && this.modules.ajax.blockActiveRequest(), 
                this._setData(e, t, o, !1, !0);
            }, N.prototype._setData = function(e, t, o, i, n) {
                var s = this;
                return "string" == typeof e ? 0 == e.indexOf("{") || 0 == e.indexOf("[") ? s.rowManager.setData(JSON.parse(e), i, n) : s.modExists("ajax", !0) ? (t && s.modules.ajax.setParams(t), 
                o && s.modules.ajax.setConfig(o), s.modules.ajax.setUrl(e), "remote" == s.options.pagination && s.modExists("page", !0) ? (s.modules.page.reset(!0, !0), 
                s.modules.page.setPage(1)) : s.modules.ajax.loadData(i, n)) : void 0 : e ? s.rowManager.setData(e, i, n) : s.modExists("ajax") && (s.modules.ajax.getUrl || s.options.ajaxURLGenerator) ? "remote" == s.options.pagination && s.modExists("page", !0) ? (s.modules.page.reset(!0, !0), 
                s.modules.page.setPage(1)) : s.modules.ajax.loadData(i, n) : s.rowManager.setData([], i, n);
            }, N.prototype.clearData = function() {
                this.modExists("ajax") && this.modules.ajax.blockActiveRequest(), 
                this.rowManager.clearData();
            }, N.prototype.getData = function(e) {
                return !0 === e && (console.warn("passing a boolean to the getData function is deprecated, you should now pass the string 'active'"), 
                e = "active"), this.rowManager.getData(e);
            }, N.prototype.getDataCount = function(e) {
                return !0 === e && (console.warn("passing a boolean to the getDataCount function is deprecated, you should now pass the string 'active'"), 
                e = "active"), this.rowManager.getDataCount(e);
            }, N.prototype.searchRows = function(e, t, o) {
                if (this.modExists("filter", !0)) return this.modules.filter.search("rows", e, t, o);
            }, N.prototype.searchData = function(e, t, o) {
                if (this.modExists("filter", !0)) return this.modules.filter.search("data", e, t, o);
            }, N.prototype.getHtml = function(e, t, o) {
                if (this.modExists("export", !0)) return this.modules.export.getHtml(e, t, o);
            }, N.prototype.print = function(e, t, o) {
                if (this.modExists("print", !0)) return this.modules.print.printFullscreen(e, t, o);
            }, N.prototype.getAjaxUrl = function() {
                if (this.modExists("ajax", !0)) return this.modules.ajax.getUrl();
            }, N.prototype.replaceData = function(e, t, o) {
                return this.modExists("ajax") && this.modules.ajax.blockActiveRequest(), 
                this._setData(e, t, o, !0);
            }, N.prototype.updateData = function(t) {
                var i = this, n = this, s = 0;
                return new Promise(function(o, e) {
                    i.modExists("ajax") && i.modules.ajax.blockActiveRequest(), 
                    (t = "string" == typeof t ? JSON.parse(t) : t) ? t.forEach(function(e) {
                        var t = n.rowManager.findRow(e[n.options.index]);
                        t && (s++, t.updateData(e).then(function() {
                            --s || o();
                        }));
                    }) : (console.warn("Update Error - No data provided"), e("Update Error - No data provided"));
                });
            }, N.prototype.addData = function(t, i, n) {
                var s = this;
                return new Promise(function(o, e) {
                    s.modExists("ajax") && s.modules.ajax.blockActiveRequest(), 
                    (t = "string" == typeof t ? JSON.parse(t) : t) ? s.rowManager.addRows(t, i, n).then(function(e) {
                        var t = [];
                        e.forEach(function(e) {
                            t.push(e.getComponent());
                        }), o(t);
                    }) : (console.warn("Update Error - No data provided"), e("Update Error - No data provided"));
                });
            }, N.prototype.updateOrAddData = function(t) {
                var i = this, n = this, s = [], r = 0;
                return new Promise(function(o, e) {
                    i.modExists("ajax") && i.modules.ajax.blockActiveRequest(), 
                    (t = "string" == typeof t ? JSON.parse(t) : t) ? t.forEach(function(e) {
                        var t = n.rowManager.findRow(e[n.options.index]);
                        r++, t ? t.updateData(e).then(function() {
                            r--, s.push(t.getComponent()), r || o(s);
                        }) : n.rowManager.addRows(e).then(function(e) {
                            r--, s.push(e[0].getComponent()), r || o(s);
                        });
                    }) : (console.warn("Update Error - No data provided"), e("Update Error - No data provided"));
                });
            }, N.prototype.getRow = function(e) {
                var t = this.rowManager.findRow(e);
                return t ? t.getComponent() : (console.warn("Find Error - No matching row found:", e), 
                !1);
            }, N.prototype.getRowFromPosition = function(e, t) {
                t = this.rowManager.getRowFromPosition(e, t);
                return t ? t.getComponent() : (console.warn("Find Error - No matching row found:", e), 
                !1);
            }, N.prototype.deleteRow = function(a) {
                var l = this;
                return new Promise(function(e, o) {
                    var t = l, i = 0, n = 0, s = [];
                    function r() {
                        ++i == a.length && n && (t.rowManager.reRenderInPosition(), 
                        e());
                    }
                    (a = Array.isArray(a) ? a : [ a ]).forEach(function(e) {
                        var t = l.rowManager.findRow(e, !0);
                        t ? s.push(t) : (console.warn("Delete Error - No matching row found:", e), 
                        o("Delete Error - No matching row found"), r());
                    }), s.sort(function(e, t) {
                        return l.rowManager.rows.indexOf(e) > l.rowManager.rows.indexOf(t) ? 1 : -1;
                    }), s.forEach(function(e) {
                        e.delete().then(function() {
                            n++, r();
                        }).catch(function(e) {
                            r(), o(e);
                        });
                    });
                });
            }, N.prototype.addRow = function(o, i, n) {
                var s = this;
                return new Promise(function(t, e) {
                    "string" == typeof o && (o = JSON.parse(o)), s.rowManager.addRows(o, i, n).then(function(e) {
                        s.modExists("columnCalcs") && s.modules.columnCalcs.recalc(s.rowManager.activeRows), 
                        t(e[0].getComponent());
                    });
                });
            }, N.prototype.updateOrAddRow = function(i, n) {
                var s = this;
                return new Promise(function(t, o) {
                    var e = s.rowManager.findRow(i);
                    "string" == typeof n && (n = JSON.parse(n)), e ? e.updateData(n).then(function() {
                        s.modExists("columnCalcs") && s.modules.columnCalcs.recalc(s.rowManager.activeRows), 
                        t(e.getComponent());
                    }).catch(function(e) {
                        o(e);
                    }) : e = s.rowManager.addRows(n).then(function(e) {
                        s.modExists("columnCalcs") && s.modules.columnCalcs.recalc(s.rowManager.activeRows), 
                        t(e[0].getComponent());
                    }).catch(function(e) {
                        o(e);
                    });
                });
            }, N.prototype.updateRow = function(i, n) {
                var s = this;
                return new Promise(function(e, t) {
                    var o = s.rowManager.findRow(i);
                    "string" == typeof n && (n = JSON.parse(n)), o ? o.updateData(n).then(function() {
                        e(o.getComponent());
                    }).catch(function(e) {
                        t(e);
                    }) : (console.warn("Update Error - No matching row found:", i), 
                    t("Update Error - No matching row found"));
                });
            }, N.prototype.scrollToRow = function(i, n, s) {
                var r = this;
                return new Promise(function(e, t) {
                    var o = r.rowManager.findRow(i);
                    o ? r.rowManager.scrollToRow(o, n, s).then(function() {
                        e();
                    }).catch(function(e) {
                        t(e);
                    }) : (console.warn("Scroll Error - No matching row found:", i), 
                    t("Scroll Error - No matching row found"));
                });
            }, N.prototype.moveRow = function(e, t, o) {
                var i = this.rowManager.findRow(e);
                i ? i.moveToRow(t, o) : console.warn("Move Error - No matching row found:", e);
            }, N.prototype.getRows = function(e) {
                return !0 === e && (console.warn("passing a boolean to the getRows function is deprecated, you should now pass the string 'active'"), 
                e = "active"), this.rowManager.getComponents(e);
            }, N.prototype.getRowPosition = function(e, t) {
                var o = this.rowManager.findRow(e);
                return o ? this.rowManager.getRowPosition(o, t) : (console.warn("Position Error - No matching row found:", e), 
                !1);
            }, N.prototype.copyToClipboard = function(e) {
                this.modExists("clipboard", !0) && this.modules.clipboard.copy(e);
            }, N.prototype.setColumns = function(e) {
                this.columnManager.setColumns(e);
            }, N.prototype.getColumns = function(e) {
                return this.columnManager.getComponents(e);
            }, N.prototype.getColumn = function(e) {
                var t = this.columnManager.findColumn(e);
                return t ? t.getComponent() : (console.warn("Find Error - No matching column found:", e), 
                !1);
            }, N.prototype.getColumnDefinitions = function() {
                return this.columnManager.getDefinitionTree();
            }, N.prototype.getColumnLayout = function() {
                if (this.modExists("persistence", !0)) return this.modules.persistence.parseColumns(this.columnManager.getColumns());
            }, N.prototype.setColumnLayout = function(e) {
                return !!this.modExists("persistence", !0) && (this.columnManager.setColumns(this.modules.persistence.mergeDefinition(this.options.columns, e)), 
                !0);
            }, N.prototype.showColumn = function(e) {
                var t = this.columnManager.findColumn(e);
                if (!t) return console.warn("Column Show Error - No matching column found:", e), 
                !1;
                t.show(), this.options.responsiveLayout && this.modExists("responsiveLayout", !0) && this.modules.responsiveLayout.update();
            }, N.prototype.hideColumn = function(e) {
                var t = this.columnManager.findColumn(e);
                if (!t) return console.warn("Column Hide Error - No matching column found:", e), 
                !1;
                t.hide(), this.options.responsiveLayout && this.modExists("responsiveLayout", !0) && this.modules.responsiveLayout.update();
            }, N.prototype.toggleColumn = function(e) {
                var t = this.columnManager.findColumn(e);
                if (!t) return console.warn("Column Visibility Toggle Error - No matching column found:", e), 
                !1;
                t.visible ? t.hide() : t.show();
            }, N.prototype.addColumn = function(i, n, s) {
                var r = this;
                return new Promise(function(t, o) {
                    var e = r.columnManager.findColumn(s);
                    r.columnManager.addColumn(i, n, e).then(function(e) {
                        t(e.getComponent());
                    }).catch(function(e) {
                        o(e);
                    });
                });
            }, N.prototype.deleteColumn = function(i) {
                var n = this;
                return new Promise(function(e, t) {
                    var o = n.columnManager.findColumn(i);
                    o ? o.delete().then(function() {
                        e();
                    }).catch(function(e) {
                        t(e);
                    }) : (console.warn("Column Delete Error - No matching column found:", i), 
                    t());
                });
            }, N.prototype.updateColumnDefinition = function(i, n) {
                var s = this;
                return new Promise(function(t, o) {
                    var e = s.columnManager.findColumn(i);
                    e ? e.updateDefinition(n).then(function(e) {
                        t(e);
                    }).catch(function(e) {
                        o(e);
                    }) : (console.warn("Column Update Error - No matching column found:", i), 
                    o());
                });
            }, N.prototype.moveColumn = function(e, t, o) {
                var i = this.columnManager.findColumn(e), t = this.columnManager.findColumn(t);
                i ? t ? this.columnManager.moveColumn(i, t, o) : console.warn("Move Error - No matching column found:", t) : console.warn("Move Error - No matching column found:", e);
            }, N.prototype.scrollToColumn = function(i, n, s) {
                var r = this;
                return new Promise(function(e, t) {
                    var o = r.columnManager.findColumn(i);
                    o ? r.columnManager.scrollToColumn(o, n, s).then(function() {
                        e();
                    }).catch(function(e) {
                        t(e);
                    }) : (console.warn("Scroll Error - No matching column found:", i), 
                    t("Scroll Error - No matching column found"));
                });
            }, N.prototype.setLocale = function(e) {
                this.modules.localize.setLocale(e);
            }, N.prototype.getLocale = function() {
                return this.modules.localize.getLocale();
            }, N.prototype.getLang = function(e) {
                return this.modules.localize.getLang(e);
            }, N.prototype.redraw = function(e) {
                this.columnManager.redraw(e), this.rowManager.redraw(e);
            }, N.prototype.setHeight = function(e) {
                "classic" !== this.rowManager.renderMode ? (this.options.height = isNaN(e) ? e : e + "px", 
                this.element.style.height = this.options.height, this.rowManager.setRenderMode(), 
                this.rowManager.redraw()) : console.warn("setHeight function is not available in classic render mode");
            }, N.prototype.setSort = function(e, t) {
                this.modExists("sort", !0) && (this.modules.sort.setSort(e, t), 
                this.rowManager.sorterRefresh());
            }, N.prototype.getSorters = function() {
                if (this.modExists("sort", !0)) return this.modules.sort.getSort();
            }, N.prototype.clearSort = function() {
                this.modExists("sort", !0) && (this.modules.sort.clear(), this.rowManager.sorterRefresh());
            }, N.prototype.setFilter = function(e, t, o, i) {
                this.modExists("filter", !0) && (this.modules.filter.setFilter(e, t, o, i), 
                this.rowManager.filterRefresh());
            }, N.prototype.refreshFilter = function() {
                this.modExists("filter", !0) && this.rowManager.filterRefresh();
            }, N.prototype.addFilter = function(e, t, o, i) {
                this.modExists("filter", !0) && (this.modules.filter.addFilter(e, t, o, i), 
                this.rowManager.filterRefresh());
            }, N.prototype.getFilters = function(e) {
                if (this.modExists("filter", !0)) return this.modules.filter.getFilters(e);
            }, N.prototype.setHeaderFilterFocus = function(e) {
                if (this.modExists("filter", !0)) {
                    var t = this.columnManager.findColumn(e);
                    if (!t) return console.warn("Column Filter Focus Error - No matching column found:", e), 
                    !1;
                    this.modules.filter.setHeaderFilterFocus(t);
                }
            }, N.prototype.getHeaderFilterValue = function(e) {
                if (this.modExists("filter", !0)) {
                    var t = this.columnManager.findColumn(e);
                    if (t) return this.modules.filter.getHeaderFilterValue(t);
                    console.warn("Column Filter Error - No matching column found:", e);
                }
            }, N.prototype.setHeaderFilterValue = function(e, t) {
                if (this.modExists("filter", !0)) {
                    var o = this.columnManager.findColumn(e);
                    if (!o) return console.warn("Column Filter Error - No matching column found:", e), 
                    !1;
                    this.modules.filter.setHeaderFilterValue(o, t);
                }
            }, N.prototype.getHeaderFilters = function() {
                if (this.modExists("filter", !0)) return this.modules.filter.getHeaderFilters();
            }, N.prototype.removeFilter = function(e, t, o) {
                this.modExists("filter", !0) && (this.modules.filter.removeFilter(e, t, o), 
                this.rowManager.filterRefresh());
            }, N.prototype.clearFilter = function(e) {
                this.modExists("filter", !0) && (this.modules.filter.clearFilter(e), 
                this.rowManager.filterRefresh());
            }, N.prototype.clearHeaderFilter = function() {
                this.modExists("filter", !0) && (this.modules.filter.clearHeaderFilter(), 
                this.rowManager.filterRefresh());
            }, N.prototype.selectRow = function(e) {
                this.modExists("selectRow", !0) && (!0 === e && (console.warn("passing a boolean to the selectRowselectRow function is deprecated, you should now pass the string 'active'"), 
                e = "active"), this.modules.selectRow.selectRows(e));
            }, N.prototype.deselectRow = function(e) {
                this.modExists("selectRow", !0) && this.modules.selectRow.deselectRows(e);
            }, N.prototype.toggleSelectRow = function(e) {
                this.modExists("selectRow", !0) && this.modules.selectRow.toggleRow(e);
            }, N.prototype.getSelectedRows = function() {
                if (this.modExists("selectRow", !0)) return this.modules.selectRow.getSelectedRows();
            }, N.prototype.getSelectedData = function() {
                if (this.modExists("selectRow", !0)) return this.modules.selectRow.getSelectedData();
            }, N.prototype.getInvalidCells = function() {
                if (this.modExists("validate", !0)) return this.modules.validate.getInvalidCells();
            }, N.prototype.clearCellValidation = function(e) {
                var t = this;
                this.modExists("validate", !0) && (e = e || this.modules.validate.getInvalidCells(), 
                (e = Array.isArray(e) ? e : [ e ]).forEach(function(e) {
                    t.modules.validate.clearValidation(e._getSelf());
                }));
            }, N.prototype.validate = function(e) {
                var t = [];
                return this.rowManager.rows.forEach(function(e) {
                    e = e.validate();
                    !0 !== e && (t = t.concat(e));
                }), !t.length || t;
            }, N.prototype.setMaxPage = function(e) {
                if (!this.options.pagination || !this.modExists("page")) return !1;
                this.modules.page.setMaxPage(e);
            }, N.prototype.setPage = function(e) {
                return this.options.pagination && this.modExists("page") ? this.modules.page.setPage(e) : new Promise(function(e, t) {
                    t();
                });
            }, N.prototype.setPageToRow = function(o) {
                var i = this;
                return new Promise(function(e, t) {
                    i.options.pagination && i.modExists("page") && (o = i.rowManager.findRow(o)) ? i.modules.page.setPageToRow(o).then(function() {
                        e();
                    }).catch(function() {
                        t();
                    }) : t();
                });
            }, N.prototype.setPageSize = function(e) {
                if (!this.options.pagination || !this.modExists("page")) return !1;
                this.modules.page.setPageSize(e), this.modules.page.setPage(1).then(function() {}).catch(function() {});
            }, N.prototype.getPageSize = function() {
                if (this.options.pagination && this.modExists("page", !0)) return this.modules.page.getPageSize();
            }, N.prototype.previousPage = function() {
                if (!this.options.pagination || !this.modExists("page")) return !1;
                this.modules.page.previousPage();
            }, N.prototype.nextPage = function() {
                if (!this.options.pagination || !this.modExists("page")) return !1;
                this.modules.page.nextPage();
            }, N.prototype.getPage = function() {
                return !(!this.options.pagination || !this.modExists("page")) && this.modules.page.getPage();
            }, N.prototype.getPageMax = function() {
                return !(!this.options.pagination || !this.modExists("page")) && this.modules.page.getPageMax();
            }, N.prototype.setGroupBy = function(e) {
                if (!this.modExists("groupRows", !0)) return !1;
                this.options.groupBy = e, this.modules.groupRows.initialize(), this.rowManager.refreshActiveData("display"), 
                this.options.persistence && this.modExists("persistence", !0) && this.modules.persistence.config.group && this.modules.persistence.save("group");
            }, N.prototype.setGroupValues = function(e) {
                if (!this.modExists("groupRows", !0)) return !1;
                this.options.groupValues = e, this.modules.groupRows.initialize(), 
                this.rowManager.refreshActiveData("display"), this.options.persistence && this.modExists("persistence", !0) && this.modules.persistence.config.group && this.modules.persistence.save("group");
            }, N.prototype.setGroupStartOpen = function(e) {
                if (!this.modExists("groupRows", !0)) return !1;
                this.options.groupStartOpen = e, this.modules.groupRows.initialize(), 
                this.options.groupBy ? (this.rowManager.refreshActiveData("group"), 
                this.options.persistence && this.modExists("persistence", !0) && this.modules.persistence.config.group && this.modules.persistence.save("group")) : console.warn("Grouping Update - cant refresh view, no groups have been set");
            }, N.prototype.setGroupHeader = function(e) {
                if (!this.modExists("groupRows", !0)) return !1;
                this.options.groupHeader = e, this.modules.groupRows.initialize(), 
                this.options.groupBy ? (this.rowManager.refreshActiveData("group"), 
                this.options.persistence && this.modExists("persistence", !0) && this.modules.persistence.config.group && this.modules.persistence.save("group")) : console.warn("Grouping Update - cant refresh view, no groups have been set");
            }, N.prototype.getGroups = function(e) {
                return !!this.modExists("groupRows", !0) && this.modules.groupRows.getGroups(!0);
            }, N.prototype.getGroupedData = function() {
                if (this.modExists("groupRows", !0)) return this.options.groupBy ? this.modules.groupRows.getGroupedData() : this.getData();
            }, N.prototype.getEditedCells = function() {
                if (this.modExists("edit", !0)) return this.modules.edit.getEditedCells();
            }, N.prototype.clearCellEdited = function(e) {
                var t = this;
                this.modExists("edit", !0) && (e = e || this.modules.edit.getEditedCells(), 
                (e = Array.isArray(e) ? e : [ e ]).forEach(function(e) {
                    t.modules.edit.clearEdited(e._getSelf());
                }));
            }, N.prototype.getCalcResults = function() {
                return !!this.modExists("columnCalcs", !0) && this.modules.columnCalcs.getResults();
            }, N.prototype.recalc = function() {
                this.modExists("columnCalcs", !0) && this.modules.columnCalcs.recalcAll(this.rowManager.activeRows);
            }, N.prototype.navigatePrev = function() {
                var e = !1;
                return !(!this.modExists("edit", !0) || !(e = this.modules.edit.currentCell)) && e.nav().prev();
            }, N.prototype.navigateNext = function() {
                var e = !1;
                return !(!this.modExists("edit", !0) || !(e = this.modules.edit.currentCell)) && e.nav().next();
            }, N.prototype.navigateLeft = function() {
                var t = !1;
                return !(!this.modExists("edit", !0) || !(t = this.modules.edit.currentCell)) && (e.preventDefault(), 
                t.nav().left());
            }, N.prototype.navigateRight = function() {
                var t = !1;
                return !(!this.modExists("edit", !0) || !(t = this.modules.edit.currentCell)) && (e.preventDefault(), 
                t.nav().right());
            }, N.prototype.navigateUp = function() {
                var t = !1;
                return !(!this.modExists("edit", !0) || !(t = this.modules.edit.currentCell)) && (e.preventDefault(), 
                t.nav().up());
            }, N.prototype.navigateDown = function() {
                var t = !1;
                return !(!this.modExists("edit", !0) || !(t = this.modules.edit.currentCell)) && (e.preventDefault(), 
                t.nav().down());
            }, N.prototype.undo = function() {
                return !(!this.options.history || !this.modExists("history", !0)) && this.modules.history.undo();
            }, N.prototype.redo = function() {
                return !(!this.options.history || !this.modExists("history", !0)) && this.modules.history.redo();
            }, N.prototype.getHistoryUndoSize = function() {
                return !(!this.options.history || !this.modExists("history", !0)) && this.modules.history.getHistoryUndoSize();
            }, N.prototype.getHistoryRedoSize = function() {
                return !(!this.options.history || !this.modExists("history", !0)) && this.modules.history.getHistoryRedoSize();
            }, N.prototype.clearHistory = function() {
                return !(!this.options.history || !this.modExists("history", !0)) && this.modules.history.clear();
            }, N.prototype.download = function(e, t, o, i) {
                this.modExists("download", !0) && this.modules.download.download(e, t, o, i);
            }, N.prototype.downloadToTab = function(e, t, o, i) {
                this.modExists("download", !0) && this.modules.download.download(e, t, o, i, !0);
            }, N.prototype.tableComms = function(e, t, o, i) {
                this.modules.comms.receive(e, t, o, i);
            }, N.prototype.moduleBindings = {}, N.prototype.extendModule = function(e, t, o) {
                if (N.prototype.moduleBindings[e]) {
                    var i = N.prototype.moduleBindings[e].prototype[t];
                    if (i) if ("object" == (void 0 === o ? "undefined" : Q(o))) for (var n in o) i[n] = o[n]; else console.warn("Module Error - Invalid value type, it must be an object"); else console.warn("Module Error - property does not exist:", t);
                } else console.warn("Module Error - module does not exist:", e);
            }, 
            //add module to tabulator
            N.prototype.registerModule = function(e, t) {
                N.prototype.moduleBindings[e] = t;
            }, N.prototype.bindModules = function() {
                for (var e in this.modules = {}, N.prototype.moduleBindings) this.modules[e] = new N.prototype.moduleBindings[e](this);
            }, N.prototype.modExists = function(e, t) {
                return !!this.modules[e] || (t && console.error("Tabulator Module Not Installed: " + e), 
                !1);
            }, N.prototype.helpers = {
                elVisible: function(e) {
                    return !(e.offsetWidth <= 0 && e.offsetHeight <= 0);
                },
                elOffset: function(e) {
                    e = e.getBoundingClientRect();
                    return {
                        top: e.top + window.pageYOffset - document.documentElement.clientTop,
                        left: e.left + window.pageXOffset - document.documentElement.clientLeft
                    };
                },
                deepClone: function(e) {
                    var t, o = Object.assign(Array.isArray(e) ? [] : {}, e);
                    for (t in e) null != e[t] && "object" === Q(e[t]) && (e[t] instanceof Date ? o[t] = new Date(e[t]) : o[t] = this.deepClone(e[t]));
                    return o;
                }
            }, N.prototype.comms = {
                tables: [],
                register: function(e) {
                    N.prototype.comms.tables.push(e);
                },
                deregister: function(e) {
                    e = N.prototype.comms.tables.indexOf(e);
                    -1 < e && N.prototype.comms.tables.splice(e, 1);
                },
                lookupTable: function(e, t) {
                    var o, i, n = [];
                    if ("string" == typeof e) {
                        if ((o = document.querySelectorAll(e)).length) for (var s = 0; s < o.length; s++) (i = N.prototype.comms.matchElement(o[s])) && n.push(i);
                    } else "undefined" != typeof HTMLElement && e instanceof HTMLElement || e instanceof N ? (i = N.prototype.comms.matchElement(e)) && n.push(i) : Array.isArray(e) ? e.forEach(function(e) {
                        n = n.concat(N.prototype.comms.lookupTable(e));
                    }) : t || console.warn("Table Connection Error - Invalid Selector", e);
                    return n;
                },
                matchElement: function(t) {
                    return N.prototype.comms.tables.find(function(e) {
                        return t instanceof N ? e === t : e.element === t;
                    });
                }
            }, N.prototype.findTable = function(e) {
                e = N.prototype.comms.lookupTable(e, !0);
                return !(Array.isArray(e) && !e.length) && e;
            }, F.prototype.initialize = function(e) {
                this.modes[e] ? this.mode = e : (console.warn("Layout Error - invalid mode set, defaulting to 'fitData' : " + e), 
                this.mode = "fitData"), this.table.element.setAttribute("tabulator-layout", this.mode);
            }, F.prototype.getMode = function() {
                return this.mode;
            }, F.prototype.layout = function() {
                this.modes[this.mode].call(this, this.table.columnManager.columnsByIndex), 
                0 === this.mode.indexOf("fitData") && this.table.options.persistence && this.table.modExists("persistence", !0) && this.table.modules.persistence.config.columns && this.table.modules.persistence.save("columns");
            }, F.prototype.modes = {
                fitData: function(e) {
                    this.table.options.virtualDomHoz ? this.table.vdomHoz.fitDataLayoutOverride() : e.forEach(function(e) {
                        e.reinitializeWidth();
                    }), this.table.options.responsiveLayout && this.table.modExists("responsiveLayout", !0) && this.table.modules.responsiveLayout.update();
                },
                fitDataFill: function(e) {
                    e.forEach(function(e) {
                        e.reinitializeWidth();
                    }), this.table.options.responsiveLayout && this.table.modExists("responsiveLayout", !0) && this.table.modules.responsiveLayout.update();
                },
                fitDataTable: function(e) {
                    e.forEach(function(e) {
                        e.reinitializeWidth();
                    }), this.table.options.responsiveLayout && this.table.modExists("responsiveLayout", !0) && this.table.modules.responsiveLayout.update();
                },
                fitDataStretch: function(e) {
                    var o = this, i = 0, t = this.table.rowManager.element.clientWidth, n = !1;
                    e.forEach(function(e, t) {
                        e.widthFixed || e.reinitializeWidth(), (o.table.options.responsiveLayout ? e.modules.responsive : e).visible && (n = e), 
                        e.visible && (i += e.getWidth());
                    }), n ? (e = t - i + n.getWidth(), this.table.options.responsiveLayout && this.table.modExists("responsiveLayout", !0) && (n.setWidth(0), 
                    this.table.modules.responsiveLayout.update()), 0 < e ? n.setWidth(e) : n.reinitializeWidth()) : this.table.options.responsiveLayout && this.table.modExists("responsiveLayout", !0) && this.table.modules.responsiveLayout.update();
                },
                fitColumns: function(e) {
                    var t = this.table.element.clientWidth, i = 0, o = 0, p = 0, n = [], s = [], r = 0, a = 0;
                    function m(e) {
                        e = "string" == typeof e ? -1 < e.indexOf("%") ? t / 100 * parseInt(e) : parseInt(e) : e;
                        return e;
                    }
                    function f(e, i, n, s) {
                        var t, r = [], o = 0, a = p, l = 0, c = 0, u = [];
                        function d(e) {
                            return n * (e.column.definition.widthGrow || 1);
                        }
                        function h(e) {
                            return m(e.width) - n * (e.column.definition.widthShrink || 0);
                        }
                        return e.forEach(function(e, t) {
                            var o = (s ? h : d)(e);
                            e.column.minWidth >= o ? r.push(e) : e.column.maxWidth && e.column.maxWidth < o ? (e.width = e.column.maxWidth, 
                            i -= e.column.maxWidth, (a -= s ? e.column.definition.widthShrink || 1 : e.column.definition.widthGrow || 1) && (n = Math.floor(i / a))) : (u.push(e), 
                            c += s ? e.column.definition.widthShrink || 1 : e.column.definition.widthGrow || 1);
                        }), r.length ? (r.forEach(function(e) {
                            o += s ? e.width - e.column.minWidth : e.column.minWidth, 
                            e.width = e.column.minWidth;
                        }), l = (e = i - o) - (t = c ? Math.floor(e / c) : e) * c, 
                        l += f(u, e, t, s)) : (l = c ? i - Math.floor(i / c) * c : i, 
                        u.forEach(function(e) {
                            e.width = (s ? h : d)(e);
                        })), l;
                    }
                    this.table.options.responsiveLayout && this.table.modExists("responsiveLayout", !0) && this.table.modules.responsiveLayout.update(), 
                    this.table.rowManager.element.scrollHeight > this.table.rowManager.element.clientHeight && (t -= this.table.rowManager.element.offsetWidth - this.table.rowManager.element.clientWidth), 
                    e.forEach(function(e) {
                        var t, o;
                        e.visible && (o = e.definition.width, t = parseInt(e.minWidth), 
                        o ? (o = m(o), i += t < o ? o : t, e.definition.widthShrink && (s.push({
                            column: e,
                            width: t < o ? o : t
                        }), r += e.definition.widthShrink)) : (n.push({
                            column: e,
                            width: 0
                        }), p += e.definition.widthGrow || 1));
                    });
                    var o = t - i, e = Math.floor(o / p), a = f(n, o, e, !1);
                    n.length && 0 < a && (n[n.length - 1].width += +a), n.forEach(function(e) {
                        o -= e.width;
                    }), 0 < (e = Math.abs(a) + o) && r && (a = f(s, e, Math.floor(e / r), !0)), 
                    s.length && (s[s.length - 1].width -= a), n.forEach(function(e) {
                        e.column.setWidth(e.width);
                    }), s.forEach(function(e) {
                        e.column.setWidth(e.width);
                    });
                }
            }, N.prototype.registerModule("layout", F), r.prototype.initialize = function() {
                this.langList = N.prototype.helpers.deepClone(this.langs);
            }, r.prototype.setHeaderFilterPlaceholder = function(e) {
                this.langList.default.headerFilters.default = e;
            }, r.prototype.setHeaderFilterColumnPlaceholder = function(e, t) {
                this.langList.default.headerFilters.columns[e] = t, this.lang && !this.lang.headerFilters.columns[e] && (this.lang.headerFilters.columns[e] = t);
            }, r.prototype.installLang = function(e, t) {
                this.langList[e] ? this._setLangProp(this.langList[e], t) : this.langList[e] = t;
            }, r.prototype._setLangProp = function(e, t) {
                for (var o in t) e[o] && "object" == Q(e[o]) ? this._setLangProp(e[o], t[o]) : e[o] = t[o];
            }, r.prototype.setLocale = function(e) {
                var t, o = this;
                (e = !0 === (e = e || "default") && navigator.language ? navigator.language.toLowerCase() : e) && !o.langList[e] && (t = e.split("-")[0], 
                e = o.langList[t] ? (console.warn("Localization Error - Exact matching locale not found, using closest match: ", e, t), 
                t) : (console.warn("Localization Error - Matching locale not found, using default: ", e), 
                "default")), o.locale = e, o.lang = N.prototype.helpers.deepClone(o.langList.default || {}), 
                "default" != e && function e(t, o) {
                    for (var i in t) "object" == Q(t[i]) ? (o[i] || (o[i] = {}), 
                    e(t[i], o[i])) : o[i] = t[i];
                }(o.langList[e], o.lang), o.table.options.localized.call(o.table, o.locale, o.lang), 
                o._executeBindings();
            }, r.prototype.getLocale = function(e) {
                return self.locale;
            }, r.prototype.getLang = function(e) {
                return e ? this.langList[e] : this.lang;
            }, r.prototype.getText = function(e, t) {
                t = (e = t ? e + "|" + t : e).split("|");
                return this._getLangElement(t, this.locale) || "";
            }, r.prototype._getLangElement = function(e, t) {
                var o = this.lang;
                return e.forEach(function(e) {
                    o && (e = o[e], o = void 0 !== e && e);
                }), o;
            }, r.prototype.bind = function(e, t) {
                this.bindings[e] || (this.bindings[e] = []), this.bindings[e].push(t), 
                t(this.getText(e), this.lang);
            }, r.prototype._executeBindings = function() {
                var e, o = this;
                for (e in o.bindings) !function(t) {
                    o.bindings[t].forEach(function(e) {
                        e(o.getText(t), o.lang);
                    });
                }(e);
            }, r.prototype.langs = {
                default: {
                    groups: {
                        item: "item",
                        items: "items"
                    },
                    columns: {},
                    ajax: {
                        loading: "Loading",
                        error: "Error"
                    },
                    pagination: {
                        page_size: "Page Size",
                        page_title: "Show Page",
                        first: "First",
                        first_title: "First Page",
                        last: "Last",
                        last_title: "Last Page",
                        prev: "Prev",
                        prev_title: "Prev Page",
                        next: "Next",
                        next_title: "Next Page",
                        all: "All"
                    },
                    headerFilters: {
                        default: "filter column...",
                        columns: {}
                    }
                }
            }, N.prototype.registerModule("localize", r), z.prototype.getConnections = function(e) {
                var t = this, o = [];
                return N.prototype.comms.lookupTable(e).forEach(function(e) {
                    t.table !== e && o.push(e);
                }), o;
            }, z.prototype.send = function(e, t, o, i) {
                var n = this, s = this.getConnections(e);
                s.forEach(function(e) {
                    e.tableComms(n.table.element, t, o, i);
                }), !s.length && e && console.warn("Table Connection Error - No tables matching selector found", e);
            }, z.prototype.receive = function(e, t, o, i) {
                if (this.table.modExists(t)) return this.table.modules[t].commsReceived(e, o, i);
                console.warn("Inter-table Comms Error - no such module:", t);
            }, N.prototype.registerModule("comms", z), j.prototype.initializeColumn = function(o) {
                var i = this, n = !1, s = {};
                this.allowedTypes.forEach(function(e) {
                    var t, e = "accessor" + (e.charAt(0).toUpperCase() + e.slice(1));
                    o.definition[e] && (t = i.lookupAccessor(o.definition[e])) && (n = !0, 
                    s[e] = {
                        accessor: t,
                        params: o.definition[e + "Params"] || {}
                    });
                }), n && (o.modules.accessor = s);
            }, j.prototype.lookupAccessor = function(e) {
                var t = !1;
                switch (void 0 === e ? "undefined" : Q(e)) {
                  case "string":
                    this.accessors[e] ? t = this.accessors[e] : console.warn("Accessor Error - No such accessor found, ignoring: ", e);
                    break;

                  case "function":
                    t = e;
                }
                return t;
            }, j.prototype.transformRow = function(e, s) {
                var r = "accessor" + (s.charAt(0).toUpperCase() + s.slice(1)), a = e.getComponent(), l = N.prototype.helpers.deepClone(e.data || {});
                return this.table.columnManager.traverse(function(e) {
                    var t, o, i, n;
                    e.modules.accessor && (o = e.modules.accessor[r] || e.modules.accessor.accessor || !1) && "undefined" != (t = e.getFieldValue(l)) && (n = e.getComponent(), 
                    i = "function" == typeof o.params ? o.params(t, l, s, n, a) : o.params, 
                    e.setFieldValue(l, o.accessor(t, l, s, i, n, a)));
                }), l;
            }, j.prototype.accessors = {}, N.prototype.registerModule("accessor", j), 
            a.prototype.initialize = function() {
                var e;
                this.loaderElement.appendChild(this.msgElement), this.table.options.ajaxLoaderLoading && ("string" == typeof this.table.options.ajaxLoaderLoading ? ((e = document.createElement("template")).innerHTML = this.table.options.ajaxLoaderLoading.trim(), 
                this.loadingElement = e.content.firstChild) : this.loadingElement = this.table.options.ajaxLoaderLoading), 
                this.loaderPromise = this.table.options.ajaxRequestFunc || this.defaultLoaderPromise, 
                this.urlGenerator = this.table.options.ajaxURLGenerator || this.defaultURLGenerator, 
                this.table.options.ajaxLoaderError && ("string" == typeof this.table.options.ajaxLoaderError ? ((e = document.createElement("template")).innerHTML = this.table.options.ajaxLoaderError.trim(), 
                this.errorElement = e.content.firstChild) : this.errorElement = this.table.options.ajaxLoaderError), 
                this.table.options.ajaxParams && this.setParams(this.table.options.ajaxParams), 
                this.table.options.ajaxConfig && this.setConfig(this.table.options.ajaxConfig), 
                this.table.options.ajaxURL && this.setUrl(this.table.options.ajaxURL), 
                this.table.options.ajaxProgressiveLoad && (this.table.options.pagination ? (this.progressiveLoad = !1, 
                console.error("Progressive Load Error - Pagination and progressive load cannot be used at the same time")) : this.table.modExists("page") ? (this.progressiveLoad = this.table.options.ajaxProgressiveLoad, 
                this.table.modules.page.initializeProgressive(this.progressiveLoad)) : console.error("Pagination plugin is required for progressive ajax loading"));
            }, a.prototype.createLoaderElement = function() {
                var e = document.createElement("div");
                return e.classList.add("tabulator-loader"), e;
            }, a.prototype.createMsgElement = function() {
                var e = document.createElement("div");
                return e.classList.add("tabulator-loader-msg"), e.setAttribute("role", "alert"), 
                e;
            }, a.prototype.setParams = function(e, t) {
                if (t) for (var o in this.params = this.params || {}, e) this.params[o] = e[o]; else this.params = e;
            }, a.prototype.getParams = function() {
                return this.params || {};
            }, a.prototype.setConfig = function(e) {
                if (this._loadDefaultConfig(), "string" == typeof e) this.config.method = e; else for (var t in e) this.config[t] = e[t];
            }, a.prototype._loadDefaultConfig = function(e) {
                if (!this.config || e) for (var t in this.config = {}, this.defaultConfig) this.config[t] = this.defaultConfig[t];
            }, a.prototype.setUrl = function(e) {
                this.url = e;
            }, a.prototype.getUrl = function() {
                return this.url;
            }, a.prototype.loadData = function(e, t) {
                return this.progressiveLoad ? this._loadDataProgressive() : this._loadDataStandard(e, t);
            }, a.prototype.nextPage = function(e) {
                this.loading || e < (this.table.options.ajaxProgressiveLoadScrollMargin || 2 * this.table.rowManager.getElement().clientHeight) && this.table.modules.page.nextPage().then(function() {}).catch(function() {});
            }, a.prototype.blockActiveRequest = function() {
                this.requestOrder++;
            }, a.prototype._loadDataProgressive = function() {
                return this.table.rowManager.setData([]), this.table.modules.page.setPage(1);
            }, a.prototype._loadDataStandard = function(i, n) {
                var s = this;
                return new Promise(function(t, o) {
                    s.sendRequest(i).then(function(e) {
                        s.table.rowManager.setData(e, i, n).then(function() {
                            t();
                        }).catch(function(e) {
                            o(e);
                        });
                    }).catch(function(e) {
                        o(e);
                    });
                });
            }, a.prototype.generateParamsList = function(e, o) {
                var i = this, n = [];
                if (o = o || "", Array.isArray(e)) e.forEach(function(e, t) {
                    n = n.concat(i.generateParamsList(e, o ? o + "[" + t + "]" : t));
                }); else if ("object" === (void 0 === e ? "undefined" : Q(e))) for (var t in e) n = n.concat(i.generateParamsList(e[t], o ? o + "[" + t + "]" : t)); else n.push({
                    key: o,
                    value: e
                });
                return n;
            }, a.prototype.serializeParams = function(e) {
                var e = this.generateParamsList(e), t = [];
                return e.forEach(function(e) {
                    t.push(encodeURIComponent(e.key) + "=" + encodeURIComponent(e.value));
                }), t.join("&");
            }, a.prototype.sendRequest = function(e) {
                var i, n = this, s = this, r = s.url;
                return s.requestOrder++, i = s.requestOrder, s._loadDefaultConfig(), 
                new Promise(function(t, o) {
                    !1 !== s.table.options.ajaxRequesting.call(n.table, s.url, s.params) ? (s.loading = !0, 
                    e || s.showLoader(), n.loaderPromise(r, s.config, s.params).then(function(e) {
                        i === s.requestOrder ? (s.table.options.ajaxResponse && (e = s.table.options.ajaxResponse.call(s.table, s.url, s.params, e)), 
                        t(e), s.hideLoader(), s.loading = !1) : console.warn("Ajax Response Blocked - An active ajax request was blocked by an attempt to change table data while the request was being made");
                    }).catch(function(e) {
                        console.error("Ajax Load Error: ", e), s.table.options.ajaxError.call(s.table, e), 
                        s.showError(), setTimeout(function() {
                            s.hideLoader();
                        }, 3e3), s.loading = !1, o(e);
                    })) : o();
                });
            }, a.prototype.showLoader = function() {
                if ("function" == typeof this.table.options.ajaxLoader ? this.table.options.ajaxLoader() : this.table.options.ajaxLoader) {
                    for (this.hideLoader(); this.msgElement.firstChild; ) this.msgElement.removeChild(this.msgElement.firstChild);
                    this.msgElement.classList.remove("tabulator-error"), this.msgElement.classList.add("tabulator-loading"), 
                    this.loadingElement ? this.msgElement.appendChild(this.loadingElement) : this.msgElement.innerHTML = this.table.modules.localize.getText("ajax|loading"), 
                    this.table.element.appendChild(this.loaderElement);
                }
            }, a.prototype.showError = function() {
                for (this.hideLoader(); this.msgElement.firstChild; ) this.msgElement.removeChild(this.msgElement.firstChild);
                this.msgElement.classList.remove("tabulator-loading"), this.msgElement.classList.add("tabulator-error"), 
                this.errorElement ? this.msgElement.appendChild(this.errorElement) : this.msgElement.innerHTML = this.table.modules.localize.getText("ajax|error"), 
                this.table.element.appendChild(this.loaderElement);
            }, a.prototype.hideLoader = function() {
                this.loaderElement.parentNode && this.loaderElement.parentNode.removeChild(this.loaderElement);
            }, a.prototype.defaultConfig = {
                method: "GET"
            }, a.prototype.defaultURLGenerator = function(e, t, o) {
                return e && o && Object.keys(o).length && (t.method && "get" != t.method.toLowerCase() || (t.method = "get", 
                e += (e.includes("?") ? "&" : "?") + this.modules.ajax.serializeParams(o))), 
                e;
            }, a.prototype.defaultLoaderPromise = function(i, n, s) {
                var r, a = this;
                return new Promise(function(t, o) {
                    if (i = a.urlGenerator.call(a.table, i, n, s), "GET" != n.method.toUpperCase()) if (r = "object" === Q(a.table.options.ajaxContentType) ? a.table.options.ajaxContentType : a.contentTypeFormatters[a.table.options.ajaxContentType]) {
                        for (var e in r.headers) n.headers || (n.headers = {}), 
                        void 0 === n.headers[e] && (n.headers[e] = r.headers[e]);
                        n.body = r.body.call(a, i, n, s);
                    } else console.warn("Ajax Error - Invalid ajaxContentType value:", a.table.options.ajaxContentType);
                    i ? (void 0 === n.headers && (n.headers = {}), void 0 === n.headers.Accept && (n.headers.Accept = "application/json"), 
                    void 0 === n.headers["X-Requested-With"] && (n.headers["X-Requested-With"] = "XMLHttpRequest"), 
                    void 0 === n.mode && (n.mode = "cors"), "cors" == n.mode ? (void 0 === n.headers["Access-Control-Allow-Origin"] && (n.headers["Access-Control-Allow-Origin"] = window.location.origin), 
                    void 0 === n.credentials && (n.credentials = "same-origin")) : void 0 === n.credentials && (n.credentials = "include"), 
                    fetch(i, n).then(function(e) {
                        e.ok ? e.json().then(function(e) {
                            t(e);
                        }).catch(function(e) {
                            o(e), console.warn("Ajax Load Error - Invalid JSON returned", e);
                        }) : (console.error("Ajax Load Error - Connection Error: " + e.status, e.statusText), 
                        o(e));
                    }).catch(function(e) {
                        console.error("Ajax Load Error - Connection Error: ", e), 
                        o(e);
                    })) : (console.warn("Ajax Load Error - No URL Set"), t([]));
                });
            }, a.prototype.contentTypeFormatters = {
                json: {
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: function(e, t, o) {
                        return JSON.stringify(o);
                    }
                },
                form: {
                    headers: {},
                    body: function(e, t, o) {
                        var o = this.generateParamsList(o), i = new FormData();
                        return o.forEach(function(e) {
                            i.append(e.key, e.value);
                        }), i;
                    }
                }
            }, N.prototype.registerModule("ajax", a), B.prototype.getData = function(e) {
                return this._row.getData(e);
            }, B.prototype.getElement = function() {
                return this._row.getElement();
            }, B.prototype.getTable = function() {
                return this._row.table;
            }, B.prototype.getCells = function() {
                var t = [];
                return this._row.getCells().forEach(function(e) {
                    t.push(e.getComponent());
                }), t;
            }, B.prototype.getCell = function(e) {
                e = this._row.getCell(e);
                return !!e && e.getComponent();
            }, B.prototype._getSelf = function() {
                return this._row;
            }, l.prototype.createElement = function() {
                var e = document.createElement("div");
                return e.classList.add("tabulator-calcs-holder"), e;
            }, l.prototype.initialize = function() {
                this.genColumn = new I({
                    field: "value"
                }, this);
            }, l.prototype.registerColumnField = function() {}, l.prototype.initializeColumn = function(e) {
                var t = e.definition, o = {
                    topCalcParams: t.topCalcParams || {},
                    botCalcParams: t.bottomCalcParams || {}
                };
                if (t.topCalc) {
                    switch (Q(t.topCalc)) {
                      case "string":
                        this.calculations[t.topCalc] ? o.topCalc = this.calculations[t.topCalc] : console.warn("Column Calc Error - No such calculation found, ignoring: ", t.topCalc);
                        break;

                      case "function":
                        o.topCalc = t.topCalc;
                    }
                    o.topCalc && (e.modules.columnCalcs = o, this.topCalcs.push(e), 
                    "group" != this.table.options.columnCalcs) && this.initializeTopRow();
                }
                if (t.bottomCalc) {
                    switch (Q(t.bottomCalc)) {
                      case "string":
                        this.calculations[t.bottomCalc] ? o.botCalc = this.calculations[t.bottomCalc] : console.warn("Column Calc Error - No such calculation found, ignoring: ", t.bottomCalc);
                        break;

                      case "function":
                        o.botCalc = t.bottomCalc;
                    }
                    o.botCalc && (e.modules.columnCalcs = o, this.botCalcs.push(e), 
                    "group" != this.table.options.columnCalcs) && this.initializeBottomRow();
                }
            }, l.prototype.removeCalcs = function() {
                var e = !1;
                this.topInitialized && (this.topInitialized = !1, this.topElement.parentNode.removeChild(this.topElement), 
                e = !0), this.botInitialized && (this.botInitialized = !1, this.table.footerManager.remove(this.botElement), 
                e = !0), e && this.table.rowManager.adjustTableSize();
            }, l.prototype.initializeTopRow = function() {
                this.topInitialized || (this.table.columnManager.getElement().insertBefore(this.topElement, this.table.columnManager.headersElement.nextSibling), 
                this.topInitialized = !0);
            }, l.prototype.initializeBottomRow = function() {
                this.botInitialized || (this.table.footerManager.prepend(this.botElement), 
                this.botInitialized = !0);
            }, l.prototype.scrollHorizontal = function(e) {
                this.botInitialized && this.botRow && (this.botRow.getElement().style.marginLeft = -e + "px");
            }, l.prototype.recalc = function(e) {
                var t;
                if (this.topInitialized || this.botInitialized) {
                    if (this.rowsToData(e), this.topInitialized) {
                        for (this.topRow && this.topRow.deleteCells(), t = this.generateRow("top", this.rowsToData(e)), 
                        this.topRow = t; this.topElement.firstChild; ) this.topElement.removeChild(this.topElement.firstChild);
                        this.topElement.appendChild(t.getElement()), t.initialize(!0);
                    }
                    if (this.botInitialized) {
                        for (this.botRow && this.botRow.deleteCells(), t = this.generateRow("bottom", this.rowsToData(e)), 
                        this.botRow = t; this.botElement.firstChild; ) this.botElement.removeChild(this.botElement.firstChild);
                        this.botElement.appendChild(t.getElement()), t.initialize(!0);
                    }
                    this.table.rowManager.adjustTableSize(), this.table.modExists("frozenColumns") && this.table.modules.frozenColumns.layout();
                }
            }, l.prototype.recalcRowGroup = function(e) {
                this.recalcGroup(this.table.modules.groupRows.getRowGroup(e));
            }, l.prototype.recalcAll = function() {
                var t = this;
                (this.topCalcs.length || this.botCalcs.length) && ("group" !== this.table.options.columnCalcs && this.recalc(this.table.rowManager.activeRows), 
                this.table.options.groupBy) && "table" !== this.table.options.columnCalcs && table.modules.groupRows.getChildGroups().forEach(function(e) {
                    t.recalcGroup(e);
                });
            }, l.prototype.recalcGroup = function(e) {
                var t, o;
                e && e.calcs && (e.calcs.bottom && (t = this.rowsToData(e.rows), 
                o = this.generateRowData("bottom", t), e.calcs.bottom.updateData(o), 
                e.calcs.bottom.reinitialize()), e.calcs.top) && (t = this.rowsToData(e.rows), 
                o = this.generateRowData("top", t), e.calcs.top.updateData(o), e.calcs.top.reinitialize());
            }, l.prototype.generateTopRow = function(e) {
                return this.generateRow("top", this.rowsToData(e));
            }, l.prototype.generateBottomRow = function(e) {
                return this.generateRow("bottom", this.rowsToData(e));
            }, l.prototype.rowsToData = function(e) {
                var t = this, o = [];
                return e.forEach(function(e) {
                    o.push(e.getData()), t.table.options.dataTree && t.table.options.dataTreeChildColumnCalcs && e.modules.dataTree.open && (e = t.rowsToData(t.table.modules.dataTree.getFilteredTreeChildren(e)), 
                    o = o.concat(e));
                }), o;
            }, l.prototype.generateRow = function(i, e) {
                var n, s = this, e = this.generateRowData(i, e);
                return s.table.modExists("mutator") && s.table.modules.mutator.disable(), 
                n = new A(e, this, "calc"), s.table.modExists("mutator") && s.table.modules.mutator.enable(), 
                n.getElement().classList.add("tabulator-calcs", "tabulator-calcs-" + i), 
                n.component = !1, n.getComponent = function() {
                    return this.component || (this.component = new B(this)), this.component;
                }, n.generateCells = function() {
                    var o = [];
                    s.table.columnManager.columnsByIndex.forEach(function(e) {
                        s.genColumn.setField(e.getField()), s.genColumn.hozAlign = e.hozAlign, 
                        e.definition[i + "CalcFormatter"] && s.table.modExists("format") ? s.genColumn.modules.format = {
                            formatter: s.table.modules.format.getFormatter(e.definition[i + "CalcFormatter"]),
                            params: e.definition[i + "CalcFormatterParams"] || {}
                        } : s.genColumn.modules.format = {
                            formatter: s.table.modules.format.getFormatter("plaintext"),
                            params: {}
                        }, s.genColumn.definition.cssClass = e.definition.cssClass;
                        var t = new P(s.genColumn, n);
                        t.getElement(), t.column = e, t.setWidth(), e.cells.push(t), 
                        o.push(t), e.visible || t.hide();
                    }), this.cells = o;
                }, n;
            }, l.prototype.generateRowData = function(e, i) {
                var n, s = {}, t = "top" == e ? this.topCalcs : this.botCalcs, r = "top" == e ? "topCalc" : "botCalc";
                return t.forEach(function(t) {
                    var o = [];
                    t.modules.columnCalcs && t.modules.columnCalcs[r] && (i.forEach(function(e) {
                        o.push(t.getFieldValue(e));
                    }), n = r + "Params", n = "function" == typeof t.modules.columnCalcs[n] ? t.modules.columnCalcs[n](o, i) : t.modules.columnCalcs[n], 
                    t.setFieldValue(s, t.modules.columnCalcs[r](o, i, n)));
                }), s;
            }, l.prototype.hasTopCalcs = function() {
                return !!this.topCalcs.length;
            }, l.prototype.hasBottomCalcs = function() {
                return !!this.botCalcs.length;
            }, l.prototype.redraw = function() {
                this.topRow && this.topRow.normalizeHeight(!0), this.botRow && this.botRow.normalizeHeight(!0);
            }, l.prototype.getResults = function() {
                var t = this, o = {};
                return this.table.options.groupBy && this.table.modExists("groupRows") ? this.table.modules.groupRows.getGroups(!0).forEach(function(e) {
                    o[e.getKey()] = t.getGroupResults(e);
                }) : o = {
                    top: this.topRow ? this.topRow.getData() : {},
                    bottom: this.botRow ? this.botRow.getData() : {}
                }, o;
            }, l.prototype.getGroupResults = function(e) {
                var t = this, o = e._getSelf(), e = e.getSubGroups(), i = {};
                return e.forEach(function(e) {
                    i[e.getKey()] = t.getGroupResults(e);
                }), {
                    top: o.calcs.top ? o.calcs.top.getData() : {},
                    bottom: o.calcs.bottom ? o.calcs.bottom.getData() : {},
                    groups: i
                };
            }, l.prototype.calculations = {
                avg: function(e, t, o) {
                    var i = 0, o = void 0 !== o.precision ? o.precision : 2;
                    return e.length && (i = e.reduce(function(e, t) {
                        return Number(e) + Number(t);
                    }), i /= e.length, i = !1 !== o ? i.toFixed(o) : i), parseFloat(i).toString();
                },
                max: function(e, t, o) {
                    var i = null, o = void 0 !== o.precision && o.precision;
                    return e.forEach(function(e) {
                        e = Number(e), (i < e || null === i) && (i = e);
                    }), null !== i ? !1 !== o ? i.toFixed(o) : i : "";
                },
                min: function(e, t, o) {
                    var i = null, o = void 0 !== o.precision && o.precision;
                    return e.forEach(function(e) {
                        ((e = Number(e)) < i || null === i) && (i = e);
                    }), null !== i ? !1 !== o ? i.toFixed(o) : i : "";
                },
                sum: function(e, t, o) {
                    var i = 0, o = void 0 !== o.precision && o.precision;
                    return e.length && e.forEach(function(e) {
                        e = Number(e), i += isNaN(e) ? 0 : Number(e);
                    }), !1 !== o ? i.toFixed(o) : i;
                },
                concat: function(e, t, o) {
                    var i = 0;
                    return i = e.length ? e.reduce(function(e, t) {
                        return String(e) + String(t);
                    }) : i;
                },
                count: function(e, t, o) {
                    var i = 0;
                    return e.length && e.forEach(function(e) {
                        e && i++;
                    }), i;
                }
            }, N.prototype.registerModule("columnCalcs", l), c.prototype.initialize = function() {
                var n = this;
                this.mode = this.table.options.clipboard, this.rowRange = this.table.options.clipboardCopyRowRange, 
                !0 !== this.mode && "copy" !== this.mode || this.table.element.addEventListener("copy", function(e) {
                    var t, o, i;
                    n.blocked || (e.preventDefault(), n.customSelection ? (i = n.customSelection, 
                    n.table.options.clipboardCopyFormatter && (i = n.table.options.clipboardCopyFormatter("plain", i))) : (t = n.table.modules.export.generateExportList(n.table.options.clipboardCopyConfig, n.table.options.clipboardCopyStyled, n.rowRange, "clipboard"), 
                    i = (o = n.table.modules.export.genereateHTMLTable(t)) ? n.generatePlainContent(t) : "", 
                    n.table.options.clipboardCopyFormatter && (i = n.table.options.clipboardCopyFormatter("plain", i), 
                    o = n.table.options.clipboardCopyFormatter("html", o))), window.clipboardData && window.clipboardData.setData ? window.clipboardData.setData("Text", i) : e.clipboardData && e.clipboardData.setData ? (e.clipboardData.setData("text/plain", i), 
                    o && e.clipboardData.setData("text/html", o)) : e.originalEvent && e.originalEvent.clipboardData.setData && (e.originalEvent.clipboardData.setData("text/plain", i), 
                    o) && e.originalEvent.clipboardData.setData("text/html", o), 
                    n.table.options.clipboardCopied.call(n.table, i, o), n.reset());
                }), !0 !== this.mode && "paste" !== this.mode || this.table.element.addEventListener("paste", function(e) {
                    n.paste(e);
                }), this.setPasteParser(this.table.options.clipboardPasteParser), 
                this.setPasteAction(this.table.options.clipboardPasteAction);
            }, c.prototype.reset = function() {
                this.blocked = !0, this.customSelection = !1;
            }, c.prototype.generatePlainContent = function(e) {
                var t = [];
                return e.forEach(function(o) {
                    var i = [];
                    o.columns.forEach(function(e) {
                        var t = "";
                        if (e) if ("group" === o.type && (e.value = e.component.getKey()), 
                        null === e.value) t = ""; else switch (Q(e.value)) {
                          case "object":
                            t = JSON.stringify(e.value);
                            break;

                          case "undefined":
                            t = "";
                            break;

                          default:
                            t = e.value;
                        }
                        i.push(t);
                    }), t.push(i.join("\t"));
                }), t.join("\n");
            }, c.prototype.copy = function(e, t) {
                var o;
                this.blocked = !1, !(this.customSelection = !1) !== this.mode && "copy" !== this.mode || (this.rowRange = e || this.table.options.clipboardCopyRowRange, 
                void 0 !== window.getSelection && void 0 !== document.createRange ? ((e = document.createRange()).selectNodeContents(this.table.element), 
                (o = window.getSelection()).toString() && t && (this.customSelection = o.toString()), 
                o.removeAllRanges(), o.addRange(e)) : void 0 !== document.selection && void 0 !== document.body.createTextRange && ((t = document.body.createTextRange()).moveToElementText(this.table.element), 
                t.select()), document.execCommand("copy"), o && o.removeAllRanges());
            }, c.prototype.setPasteAction = function(e) {
                switch (void 0 === e ? "undefined" : Q(e)) {
                  case "string":
                    this.pasteAction = this.pasteActions[e], this.pasteAction || console.warn("Clipboard Error - No such paste action found:", e);
                    break;

                  case "function":
                    this.pasteAction = e;
                }
            }, c.prototype.setPasteParser = function(e) {
                switch (void 0 === e ? "undefined" : Q(e)) {
                  case "string":
                    this.pasteParser = this.pasteParsers[e], this.pasteParser || console.warn("Clipboard Error - No such paste parser found:", e);
                    break;

                  case "function":
                    this.pasteParser = e;
                }
            }, c.prototype.paste = function(e) {
                var t, o;
                this.checkPaseOrigin(e) && (t = this.getPasteData(e), (o = this.pasteParser.call(this, t)) ? (e.preventDefault(), 
                this.table.modExists("mutator") && (o = this.mutateData(o)), e = this.pasteAction.call(this, o), 
                this.table.options.clipboardPasted.call(this.table, t, o, e)) : this.table.options.clipboardPasteError.call(this.table, t));
            }, c.prototype.mutateData = function(e) {
                var t = this, o = [];
                return Array.isArray(e) ? e.forEach(function(e) {
                    o.push(t.table.modules.mutator.transformRow(e, "clipboard"));
                }) : o = e, o;
            }, c.prototype.checkPaseOrigin = function(e) {
                var t = !0;
                return t = "DIV" == e.target.tagName && !this.table.modules.edit.currentCell ? t : !1;
            }, c.prototype.getPasteData = function(e) {
                var t;
                return window.clipboardData && window.clipboardData.getData ? t = window.clipboardData.getData("Text") : e.clipboardData && e.clipboardData.getData ? t = e.clipboardData.getData("text/plain") : e.originalEvent && e.originalEvent.clipboardData.getData && (t = e.originalEvent.clipboardData.getData("text/plain")), 
                t;
            }, c.prototype.pasteParsers = {
                table: function(e) {
                    var t = [], o = !0, i = this.table.columnManager.columns, n = [], s = [];
                    return (e = e.split("\n")).forEach(function(e) {
                        t.push(e.split("\t"));
                    }), !(!t.length || 1 === t.length && t[0].length < 2) && (t[0].forEach(function(t) {
                        var e = i.find(function(e) {
                            return t && e.definition.title && t.trim() && e.definition.title.trim() === t.trim();
                        });
                        e ? n.push(e) : o = !1;
                    }), o || (o = !0, n = [], t[0].forEach(function(t) {
                        var e = i.find(function(e) {
                            return t && e.field && t.trim() && e.field.trim() === t.trim();
                        });
                        e ? n.push(e) : o = !1;
                    }), o) || (n = this.table.columnManager.columnsByIndex), o && t.shift(), 
                    t.forEach(function(e) {
                        var o = {};
                        e.forEach(function(e, t) {
                            n[t] && (o[n[t].field] = e);
                        }), s.push(o);
                    }), s);
                }
            }, c.prototype.pasteActions = {
                replace: function(e) {
                    return this.table.setData(e);
                },
                update: function(e) {
                    return this.table.updateOrAddData(e);
                },
                insert: function(e) {
                    return this.table.addData(e);
                }
            }, N.prototype.registerModule("clipboard", c), u.prototype.initialize = function() {
                var e = null, t = this.table.columnManager.getFirstVisibileColumn(), o = this.table.options;
                switch (this.field = o.dataTreeChildField, this.indent = o.dataTreeChildIndent, 
                this.elementField = o.dataTreeElementColumn || !!t && t.field, o.dataTreeBranchElement && (!0 === o.dataTreeBranchElement ? (this.branchEl = document.createElement("div"), 
                this.branchEl.classList.add("tabulator-data-tree-branch")) : "string" == typeof o.dataTreeBranchElement ? ((e = document.createElement("div")).innerHTML = o.dataTreeBranchElement, 
                this.branchEl = e.firstChild) : this.branchEl = o.dataTreeBranchElement), 
                o.dataTreeCollapseElement ? "string" == typeof o.dataTreeCollapseElement ? ((e = document.createElement("div")).innerHTML = o.dataTreeCollapseElement, 
                this.collapseEl = e.firstChild) : this.collapseEl = o.dataTreeCollapseElement : (this.collapseEl = document.createElement("div"), 
                this.collapseEl.classList.add("tabulator-data-tree-control"), this.collapseEl.tabIndex = 0, 
                this.collapseEl.innerHTML = "<div class='tabulator-data-tree-control-collapse'></div>"), 
                o.dataTreeExpandElement ? "string" == typeof o.dataTreeExpandElement ? ((e = document.createElement("div")).innerHTML = o.dataTreeExpandElement, 
                this.expandEl = e.firstChild) : this.expandEl = o.dataTreeExpandElement : (this.expandEl = document.createElement("div"), 
                this.expandEl.classList.add("tabulator-data-tree-control"), this.expandEl.tabIndex = 0, 
                this.expandEl.innerHTML = "<div class='tabulator-data-tree-control-expand'></div>"), 
                Q(o.dataTreeStartExpanded)) {
                  case "boolean":
                    this.startOpen = function(e, t) {
                        return o.dataTreeStartExpanded;
                    };
                    break;

                  case "function":
                    this.startOpen = o.dataTreeStartExpanded;
                    break;

                  default:
                    this.startOpen = function(e, t) {
                        return o.dataTreeStartExpanded[t];
                    };
                }
            }, u.prototype.initializeRow = function(e) {
                var t = e.getData()[this.field], o = Array.isArray(t), o = o || !o && "object" === (void 0 === t ? "undefined" : Q(t)) && null !== t;
                !o && e.modules.dataTree && e.modules.dataTree.branchEl && e.modules.dataTree.branchEl.parentNode.removeChild(e.modules.dataTree.branchEl), 
                !o && e.modules.dataTree && e.modules.dataTree.controlEl && e.modules.dataTree.controlEl.parentNode.removeChild(e.modules.dataTree.controlEl), 
                e.modules.dataTree = {
                    index: e.modules.dataTree ? e.modules.dataTree.index : 0,
                    open: !!o && (e.modules.dataTree ? e.modules.dataTree.open : this.startOpen(e.getComponent(), 0)),
                    controlEl: !(!e.modules.dataTree || !o) && e.modules.dataTree.controlEl,
                    branchEl: !(!e.modules.dataTree || !o) && e.modules.dataTree.branchEl,
                    parent: !!e.modules.dataTree && e.modules.dataTree.parent,
                    children: o
                };
            }, u.prototype.layoutRow = function(e) {
                var t = (this.elementField ? e.getCell(this.elementField) : e.getCells()[0]).getElement(), o = e.modules.dataTree;
                o.branchEl && (o.branchEl.parentNode && o.branchEl.parentNode.removeChild(o.branchEl), 
                o.branchEl = !1), o.controlEl && (o.controlEl.parentNode && o.controlEl.parentNode.removeChild(o.controlEl), 
                o.controlEl = !1), this.generateControlElement(e, t), e.getElement().classList.add("tabulator-tree-level-" + o.index), 
                o.index && (this.branchEl ? (o.branchEl = this.branchEl.cloneNode(!0), 
                t.insertBefore(o.branchEl, t.firstChild), this.table.rtl ? o.branchEl.style.marginRight = (o.branchEl.offsetWidth + o.branchEl.style.marginLeft) * (o.index - 1) + o.index * this.indent + "px" : o.branchEl.style.marginLeft = (o.branchEl.offsetWidth + o.branchEl.style.marginRight) * (o.index - 1) + o.index * this.indent + "px") : this.table.rtl ? t.style.paddingRight = parseInt(window.getComputedStyle(t, null).getPropertyValue("padding-right")) + o.index * this.indent + "px" : t.style.paddingLeft = parseInt(window.getComputedStyle(t, null).getPropertyValue("padding-left")) + o.index * this.indent + "px");
            }, u.prototype.generateControlElement = function(t, e) {
                var o = this, i = t.modules.dataTree, e = e || t.getCells()[0].getElement(), n = i.controlEl;
                !1 !== i.children && (i.open ? (i.controlEl = this.collapseEl.cloneNode(!0), 
                i.controlEl.addEventListener("click", function(e) {
                    e.stopPropagation(), o.collapseRow(t);
                })) : (i.controlEl = this.expandEl.cloneNode(!0), i.controlEl.addEventListener("click", function(e) {
                    e.stopPropagation(), o.expandRow(t);
                })), i.controlEl.addEventListener("mousedown", function(e) {
                    e.stopPropagation();
                }), n && n.parentNode === e ? n.parentNode.replaceChild(i.controlEl, n) : e.insertBefore(i.controlEl, e.firstChild));
            }, u.prototype.setDisplayIndex = function(e) {
                this.displayIndex = e;
            }, u.prototype.getDisplayIndex = function() {
                return this.displayIndex;
            }, u.prototype.getRows = function(e) {
                var i = this, n = [];
                return e.forEach(function(e, t) {
                    var o;
                    n.push(e), e instanceof A && (e.create(), (o = e.modules.dataTree.children).index || !1 === o.children || i.getChildren(e).forEach(function(e) {
                        e.create(), n.push(e);
                    }));
                }), n;
            }, u.prototype.getChildren = function(e, t) {
                var o = this, i = e.modules.dataTree, n = [], s = [];
                return !1 !== i.children && (i.open || t) && (Array.isArray(i.children) || (i.children = this.generateChildren(e)), 
                n = this.table.modExists("filter") && this.table.options.dataTreeFilter ? this.table.modules.filter.filter(i.children) : i.children, 
                this.table.modExists("sort") && this.table.options.dataTreeSort && this.table.modules.sort.sort(n), 
                n.forEach(function(e) {
                    s.push(e), o.getChildren(e).forEach(function(e) {
                        s.push(e);
                    });
                })), s;
            }, u.prototype.generateChildren = function(t) {
                var o = this, i = [], e = t.getData()[this.field];
                return (e = Array.isArray(e) ? e : [ e ]).forEach(function(e) {
                    e = new A(e || {}, o.table.rowManager);
                    e.create(), e.modules.dataTree.index = t.modules.dataTree.index + 1, 
                    e.modules.dataTree.parent = t, e.modules.dataTree.children && (e.modules.dataTree.open = o.startOpen(e.getComponent(), e.modules.dataTree.index)), 
                    i.push(e);
                }), i;
            }, u.prototype.expandRow = function(e, t) {
                var o = e.modules.dataTree;
                !1 !== o.children && (o.open = !0, e.reinitialize(), this.table.rowManager.refreshActiveData("tree", !1, !0), 
                this.table.options.dataTreeRowExpanded(e.getComponent(), e.modules.dataTree.index));
            }, u.prototype.collapseRow = function(e) {
                var t = e.modules.dataTree;
                !1 !== t.children && (t.open = !1, e.reinitialize(), this.table.rowManager.refreshActiveData("tree", !1, !0), 
                this.table.options.dataTreeRowCollapsed(e.getComponent(), e.modules.dataTree.index));
            }, u.prototype.toggleRow = function(e) {
                var t = e.modules.dataTree;
                !1 !== t.children && (t.open ? this.collapseRow(e) : this.expandRow(e));
            }, u.prototype.getTreeParent = function(e) {
                return !!e.modules.dataTree.parent && e.modules.dataTree.parent.getComponent();
            }, u.prototype.getFilteredTreeChildren = function(e) {
                var t = e.modules.dataTree, o = [];
                return t.children && (Array.isArray(t.children) || (t.children = this.generateChildren(e)), 
                (this.table.modExists("filter") && this.table.options.dataTreeFilter ? this.table.modules.filter.filter(t.children) : t.children).forEach(function(e) {
                    e instanceof A && o.push(e);
                })), o;
            }, u.prototype.rowDelete = function(e) {
                var t = e.modules.dataTree.parent;
                t && (!1 !== (e = this.findChildIndex(e, t)) && t.data[this.field].splice(e, 1), 
                t.data[this.field].length || delete t.data[this.field], this.initializeRow(t), 
                this.layoutRow(t)), this.table.rowManager.refreshActiveData("tree", !1, !0);
            }, u.prototype.addTreeChildRow = function(e, t, o, i) {
                var n = !1;
                "string" == typeof t && (t = JSON.parse(t)), Array.isArray(e.data[this.field]) || (e.data[this.field] = [], 
                e.modules.dataTree.open = this.startOpen(e.getComponent(), e.modules.dataTree.index)), 
                void 0 !== i && !1 !== (n = this.findChildIndex(i, e)) && e.data[this.field].splice(o ? n : n + 1, 0, t), 
                !1 === n && (o ? e.data[this.field].unshift(t) : e.data[this.field].push(t)), 
                this.initializeRow(e), this.layoutRow(e), this.table.rowManager.refreshActiveData("tree", !1, !0);
            }, u.prototype.findChildIndex = function(t, e) {
                var o = this, i = !1;
                return "object" == (void 0 === t ? "undefined" : Q(t)) ? t instanceof A ? i = t.data : t instanceof O ? i = t._getSelf().data : "undefined" != typeof HTMLElement && t instanceof HTMLElement && e.modules.dataTree && (i = (i = e.modules.dataTree.children.find(function(e) {
                    return e instanceof A && e.element === t;
                })) && i.data) : i = null != t && e.data[this.field].find(function(e) {
                    return e.data[o.table.options.index] == t;
                }), i = i && -1 == (i = Array.isArray(e.data[this.field]) ? e.data[this.field].indexOf(i) : i) ? !1 : i;
            }, u.prototype.getTreeChildren = function(e, t, o) {
                var i = this, n = e.modules.dataTree, s = [];
                return n.children && (Array.isArray(n.children) || (n.children = this.generateChildren(e)), 
                n.children.forEach(function(e) {
                    e instanceof A && (s.push(t ? e.getComponent() : e), o) && (s = s.concat(i.getTreeChildren(e, t, o)));
                })), s;
            }, u.prototype.checkForRestyle = function(e) {
                e.row.cells.indexOf(e) || e.row.reinitialize();
            }, u.prototype.getChildField = function() {
                return this.field;
            }, u.prototype.redrawNeeded = function(e) {
                return !!this.field && void 0 !== e[this.field] || !!this.elementField && void 0 !== e[this.elementField];
            }, N.prototype.registerModule("dataTree", u), V.prototype.download = function(o, i, e, t, n) {
                var s = this, r = !1;
                "function" == typeof o ? r = o : s.downloaders[o] ? r = s.downloaders[o] : console.warn("Download Error - No such download type found: ", o), 
                r && (t = this.generateExportList(t), r.call(this.table, t, e || {}, function(e, t) {
                    n ? !0 === n ? s.triggerDownload(e, t, o, i, !0) : n(e) : s.triggerDownload(e, t, o, i);
                }));
            }, V.prototype.generateExportList = function(e) {
                var e = this.table.modules.export.generateExportList(this.table.options.downloadConfig, !1, e || this.table.options.downloadRowRange, "download"), o = this.table.options.groupHeaderDownload;
                return o && !Array.isArray(o) && (o = [ o ]), e.forEach(function(e) {
                    var t;
                    "group" === e.type && (t = e.columns[0], o) && o[e.indent] && (t.value = o[e.indent](t.value, e.component._group.getRowCount(), e.component._group.getData(), e.component));
                }), e;
            }, V.prototype.triggerDownload = function(e, t, o, i, n) {
                var s = document.createElement("a"), t = new Blob([ e ], {
                    type: t
                }), i = i || "Tabulator." + ("function" == typeof o ? "txt" : o);
                (t = this.table.options.downloadReady.call(this.table, e, t)) && (n ? window.open(window.URL.createObjectURL(t)) : navigator.msSaveOrOpenBlob ? navigator.msSaveOrOpenBlob(t, i) : (s.setAttribute("href", window.URL.createObjectURL(t)), 
                s.setAttribute("download", i), s.style.display = "none", document.body.appendChild(s), 
                s.click(), document.body.removeChild(s)), this.table.options.downloadComplete) && this.table.options.downloadComplete();
            }, V.prototype.commsReceived = function(e, t, o) {
                "intercept" === t && this.download(o.type, "", o.options, o.active, o.intercept);
            }, V.prototype.downloaders = {
                csv: function(e, t, o) {
                    var i = t && t.delimiter ? t.delimiter : ",", n = [], s = [];
                    e.forEach(function(e) {
                        var t = [];
                        switch (e.type) {
                          case "group":
                            console.warn("Download Warning - CSV downloader cannot process row groups");
                            break;

                          case "calc":
                            console.warn("Download Warning - CSV downloader cannot process column calculations");
                            break;

                          case "header":
                            e.columns.forEach(function(e, t) {
                                e && 1 === e.depth && (s[t] = void 0 === e.value || null === e.value ? "" : '"' + String(e.value).split('"').join('""') + '"');
                            });
                            break;

                          case "row":
                            e.columns.forEach(function(e) {
                                if (e) {
                                    switch (Q(e.value)) {
                                      case "object":
                                        e.value = JSON.stringify(e.value);
                                        break;

                                      case "undefined":
                                      case "null":
                                        e.value = "";
                                    }
                                    t.push('"' + String(e.value).split('"').join('""') + '"');
                                }
                            }), n.push(t.join(i));
                        }
                    }), s.length && n.unshift(s.join(i)), n = n.join("\n"), o(n = t.bom ? "\ufeff" + n : n, "text/csv");
                },
                json: function(e, t, o) {
                    var i = [];
                    e.forEach(function(e) {
                        var t = {};
                        switch (e.type) {
                          case "header":
                            break;

                          case "group":
                            console.warn("Download Warning - JSON downloader cannot process row groups");
                            break;

                          case "calc":
                            console.warn("Download Warning - JSON downloader cannot process column calculations");
                            break;

                          case "row":
                            e.columns.forEach(function(e) {
                                e && (t[e.component.getField()] = e.value);
                            }), i.push(t);
                        }
                    }), o(i = JSON.stringify(i, null, "\t"), "application/json");
                },
                pdf: function(e, t, o) {
                    var i = [], n = [], s = {}, r = t.rowGroupStyles || {
                        fontStyle: "bold",
                        fontSize: 12,
                        cellPadding: 6,
                        fillColor: 220
                    }, a = t.rowCalcStyles || {
                        fontStyle: "bold",
                        fontSize: 10,
                        cellPadding: 4,
                        fillColor: 232
                    }, l = t.jsPDF || {}, c = t && t.title ? t.title : "";
                    function u(e, o) {
                        var i = [];
                        return e.columns.forEach(function(e) {
                            var t;
                            if (e) {
                                switch (Q(e.value)) {
                                  case "object":
                                    e.value = JSON.stringify(e.value);
                                    break;

                                  case "undefined":
                                  case "null":
                                    e.value = "";
                                }
                                t = {
                                    content: e.value,
                                    colSpan: e.width,
                                    rowSpan: e.height
                                }, o && (t.styles = o), i.push(t);
                            } else i.push("");
                        }), i;
                    }
                    l.orientation || (l.orientation = t.orientation || "landscape"), 
                    l.unit || (l.unit = "pt"), e.forEach(function(e) {
                        switch (e.type) {
                          case "header":
                            i.push(u(e));
                            break;

                          case "group":
                            n.push(u(e, r));
                            break;

                          case "calc":
                            n.push(u(e, a));
                            break;

                          case "row":
                            n.push(u(e));
                        }
                    });
                    var d = new jsPDF(l);
                    t && t.autoTable && (s = "function" == typeof t.autoTable ? t.autoTable(d) || {} : t.autoTable), 
                    c && (s.addPageContent = function(e) {
                        d.text(c, 40, 30);
                    }), s.head = i, s.body = n, d.autoTable(s), t && t.documentProcessing && t.documentProcessing(d), 
                    o(d.output("arraybuffer"), "application/pdf");
                },
                xlsx: function(i, e, t) {
                    var o = e.sheetName || "Sheet1", n = XLSX.utils.book_new();
                    function s() {
                        var t = [], n = [], e = {}, o = {
                            s: {
                                c: 0,
                                r: 0
                            },
                            e: {
                                c: i[0] ? i[0].columns.reduce(function(e, t) {
                                    return e + (t && t.width ? t.width : 1);
                                }, 0) : 0,
                                r: i.length
                            }
                        };
                        return i.forEach(function(e, o) {
                            var i = [];
                            e.columns.forEach(function(e, t) {
                                e ? (i.push(e.value instanceof Date || "object" !== Q(e.value) ? e.value : JSON.stringify(e.value)), 
                                (1 < e.width || -1 < e.height) && n.push({
                                    s: {
                                        r: o,
                                        c: t
                                    },
                                    e: {
                                        r: o + e.height - 1,
                                        c: t + e.width - 1
                                    }
                                })) : i.push("");
                            }), t.push(i);
                        }), XLSX.utils.sheet_add_aoa(e, t), e["!ref"] = XLSX.utils.encode_range(o), 
                        n.length && (e["!merges"] = n), e;
                    }
                    if (n.SheetNames = [], n.Sheets = {}, e.sheetOnly) t(s()); else {
                        if (e.sheets) for (var r in e.sheets) !0 === e.sheets[r] ? (n.SheetNames.push(r), 
                        n.Sheets[r] = s()) : (n.SheetNames.push(r), this.modules.comms.send(e.sheets[r], "download", "intercept", {
                            type: "xlsx",
                            options: {
                                sheetOnly: !0
                            },
                            active: this.active,
                            intercept: function(e) {
                                n.Sheets[r] = e;
                            }
                        })); else n.SheetNames.push(o), n.Sheets[o] = s();
                        e.documentProcessing && (n = e.documentProcessing(n)), t(function(e) {
                            for (var t = new ArrayBuffer(e.length), o = new Uint8Array(t), i = 0; i != e.length; ++i) o[i] = 255 & e.charCodeAt(i);
                            return t;
                        }(XLSX.write(n, {
                            bookType: "xlsx",
                            bookSST: !0,
                            type: "binary"
                        })), "application/octet-stream");
                    }
                },
                html: function(e, t, o) {
                    this.modExists("export", !0) && o(this.modules.export.genereateHTMLTable(e), "text/html");
                }
            }, N.prototype.registerModule("download", V), d.prototype.initializeColumn = function(e) {
                var t = {
                    editor: !1,
                    blocked: !1,
                    check: e.definition.editable,
                    params: e.definition.editorParams || {}
                };
                switch (Q(e.definition.editor)) {
                  case "string":
                    "tick" === e.definition.editor && (e.definition.editor = "tickCross", 
                    console.warn("DEPRECATION WARNING - the tick editor has been deprecated, please use the tickCross editor")), 
                    this.editors[e.definition.editor] ? t.editor = this.editors[e.definition.editor] : console.warn("Editor Error - No such editor found: ", e.definition.editor);
                    break;

                  case "function":
                    t.editor = e.definition.editor;
                    break;

                  case "boolean":
                    !0 === e.definition.editor && ("function" != typeof e.definition.formatter ? ("tick" === e.definition.formatter && (e.definition.formatter = "tickCross", 
                    console.warn("DEPRECATION WARNING - the tick editor has been deprecated, please use the tickCross editor")), 
                    this.editors[e.definition.formatter] ? t.editor = this.editors[e.definition.formatter] : t.editor = this.editors.input) : console.warn("Editor Error - Cannot auto lookup editor for a custom formatter: ", e.definition.formatter));
                }
                t.editor && (e.modules.edit = t);
            }, d.prototype.getCurrentCell = function() {
                return !!this.currentCell && this.currentCell.getComponent();
            }, d.prototype.clearEditor = function(e) {
                var t, o = this.currentCell;
                if (this.invalidEdit = !1, o) {
                    for (this.currentCell = !1, t = o.getElement(), e ? o.validate() : t.classList.remove("tabulator-validation-fail"), 
                    t.classList.remove("tabulator-editing"); t.firstChild; ) t.removeChild(t.firstChild);
                    o.row.getElement().classList.remove("tabulator-row-editing");
                }
            }, d.prototype.cancelEdit = function() {
                var e, t;
                this.currentCell && (e = this.currentCell, t = this.currentCell.getComponent(), 
                this.clearEditor(!0), e.setValueActual(e.getValue()), e.cellRendered(), 
                "textarea" != e.column.definition.editor && !e.column.definition.variableHeight || e.row.normalizeHeight(!0), 
                e.column.cellEvents.cellEditCancelled && e.column.cellEvents.cellEditCancelled.call(this.table, t), 
                this.table.options.cellEditCancelled.call(this.table, t));
            }, d.prototype.bindEditor = function(t) {
                var o = this, i = t.getElement(!0);
                i.setAttribute("tabindex", 0), i.addEventListener("click", function(e) {
                    i.classList.contains("tabulator-editing") || i.focus({
                        preventScroll: !0
                    });
                }), i.addEventListener("mousedown", function(e) {
                    2 === e.button ? e.preventDefault() : o.mouseClick = !0;
                }), i.addEventListener("focus", function(e) {
                    o.recursionBlock || o.edit(t, e, !1);
                });
            }, d.prototype.focusCellNoEvent = function(e, t) {
                this.recursionBlock = !0, t && "ie" === this.table.browser || e.getElement().focus({
                    preventScroll: !0
                }), this.recursionBlock = !1;
            }, d.prototype.editCell = function(e, t) {
                this.focusCellNoEvent(e), this.edit(e, !1, t);
            }, d.prototype.focusScrollAdjust = function(e) {
                var t, o, i;
                "virtual" == this.table.rowManager.getRenderMode() && (t = this.table.rowManager.element.scrollTop, 
                i = this.table.rowManager.element.clientHeight + this.table.rowManager.element.scrollTop, 
                (o = e.row.getElement()).offsetTop, o.offsetTop < t ? this.table.rowManager.element.scrollTop -= t - o.offsetTop : o.offsetTop + o.offsetHeight > i && (this.table.rowManager.element.scrollTop += o.offsetTop + o.offsetHeight - i), 
                t = this.table.rowManager.element.scrollLeft, o = this.table.rowManager.element.clientWidth + this.table.rowManager.element.scrollLeft, 
                (i = e.getElement()).offsetLeft, this.table.modExists("frozenColumns") && (t += parseInt(this.table.modules.frozenColumns.leftMargin), 
                o -= parseInt(this.table.modules.frozenColumns.rightMargin)), this.table.options.virtualDomHoz && (t -= parseInt(this.table.vdomHoz.vDomPadLeft), 
                o -= parseInt(this.table.vdomHoz.vDomPadLeft)), i.offsetLeft < t ? this.table.rowManager.element.scrollLeft -= t - i.offsetLeft : i.offsetLeft + i.offsetWidth > o && (this.table.rowManager.element.scrollLeft += i.offsetLeft + i.offsetWidth - o));
            }, d.prototype.edit = function(o, e, t) {
                var i = this, n = !0, s = function() {}, r = o.getElement();
                if (!this.currentCell) {
                    if (!o.column.modules.edit.blocked) {
                        switch (e && e.stopPropagation(), Q(o.column.modules.edit.check)) {
                          case "function":
                            n = o.column.modules.edit.check(o.getComponent());
                            break;

                          case "boolean":
                            n = o.column.modules.edit.check;
                        }
                        if (n || t) {
                            if (i.cancelEdit(), i.currentCell = o, this.focusScrollAdjust(o), 
                            t = o.getComponent(), this.mouseClick && (this.mouseClick = !1, 
                            o.column.cellEvents.cellClick) && o.column.cellEvents.cellClick.call(this.table, e, t), 
                            o.column.cellEvents.cellEditing && o.column.cellEvents.cellEditing.call(this.table, t), 
                            i.table.options.cellEditing.call(this.table, t), e = "function" == typeof o.column.modules.edit.params ? o.column.modules.edit.params(t) : o.column.modules.edit.params, 
                            !1 === (t = o.column.modules.edit.editor.call(i, t, function(e) {
                                s = e;
                            }, function(e) {
                                var t;
                                if (i.currentCell === o) return (t = !0) === (t = o.column.modules.validate && i.table.modExists("validate") && "manual" != i.table.options.validationMode ? i.table.modules.validate.validate(o.column.modules.validate, o, e) : t) || "highlight" === i.table.options.validationMode ? (i.clearEditor(), 
                                o.modules.edit || (o.modules.edit = {}), o.modules.edit.edited = !0, 
                                -1 == i.editedCells.indexOf(o) && i.editedCells.push(o), 
                                o.setValue(e, !0), i.table.options.dataTree && i.table.modExists("dataTree") && i.table.modules.dataTree.checkForRestyle(o), 
                                !0 === t || (r.classList.add("tabulator-validation-fail"), 
                                i.table.options.validationFailed.call(i.table, o.getComponent(), e, t), 
                                !1)) : (i.invalidEdit = !0, r.classList.add("tabulator-validation-fail"), 
                                i.focusCellNoEvent(o, !0), s(), i.table.options.validationFailed.call(i.table, o.getComponent(), e, t), 
                                !1);
                            }, function() {
                                i.currentCell === o && (i.cancelEdit(), i.table.options.dataTree) && i.table.modExists("dataTree") && i.table.modules.dataTree.checkForRestyle(o);
                            }, e))) return r.blur(), !1;
                            if (!(t instanceof Node)) return console.warn("Edit Error - Editor should return an instance of Node, the editor returned:", t), 
                            r.blur(), !1;
                            for (r.classList.add("tabulator-editing"), o.row.getElement().classList.add("tabulator-row-editing"); r.firstChild; ) r.removeChild(r.firstChild);
                            r.appendChild(t), s();
                            for (var a = r.children, l = 0; l < a.length; l++) a[l].addEventListener("click", function(e) {
                                e.stopPropagation();
                            });
                            return !0;
                        }
                    }
                    return this.mouseClick = !1, r.blur(), !1;
                }
                this.invalidEdit || this.cancelEdit();
            }, d.prototype.maskInput = function(i, t) {
                var n = t.mask, s = void 0 !== t.maskLetterChar ? t.maskLetterChar : "A", r = void 0 !== t.maskNumberChar ? t.maskNumberChar : "9", a = void 0 !== t.maskWildcardChar ? t.maskWildcardChar : "*";
                function o(e) {
                    var t = n[e];
                    void 0 !== t && t !== a && t !== s && t !== r && (i.value = i.value + "" + t, 
                    o(e + 1));
                }
                i.addEventListener("keydown", function(e) {
                    var t = i.value.length, o = e.key;
                    if (46 < e.keyCode) {
                        if (t >= n.length) return e.preventDefault(), e.stopPropagation(), 
                        !1;
                        switch (n[t]) {
                          case s:
                            if (o.toUpperCase() == o.toLowerCase()) return e.preventDefault(), 
                            e.stopPropagation(), !1;
                            break;

                          case r:
                            if (isNaN(o)) return e.preventDefault(), e.stopPropagation(), 
                            !1;
                            break;

                          case a:
                            break;

                          default:
                            if (o !== n[t]) return e.preventDefault(), e.stopPropagation(), 
                            !1;
                        }
                        0;
                    }
                }), i.addEventListener("keyup", function(e) {
                    46 < e.keyCode && t.maskAutoFill && o(i.value.length);
                }), i.placeholder || (i.placeholder = n), t.maskAutoFill && o(i.value.length);
            }, d.prototype.getEditedCells = function() {
                var t = [];
                return this.editedCells.forEach(function(e) {
                    t.push(e.getComponent());
                }), t;
            }, d.prototype.clearEdited = function(e) {
                e.modules.edit && e.modules.edit.edited && (e.modules.edit.edited = !1, 
                e.modules.validate) && (e.modules.validate.invalid = !1), -1 < (e = this.editedCells.indexOf(e)) && this.editedCells.splice(e, 1);
            }, d.prototype.editors = {
                input: function(e, t, o, i, n) {
                    var s, r = e.getValue();
                    if ((s = document.createElement("input")).setAttribute("type", n.search ? "search" : "text"), 
                    s.style.padding = "4px", s.style.width = "100%", s.style.boxSizing = "border-box", 
                    n.elementAttributes && "object" == Q(n.elementAttributes)) for (var a in n.elementAttributes) "+" == a.charAt(0) ? (a = a.slice(1), 
                    s.setAttribute(a, s.getAttribute(a) + n.elementAttributes["+" + a])) : s.setAttribute(a, n.elementAttributes[a]);
                    function l(e) {
                        null == r && "" !== s.value || s.value !== r ? o(s.value) && (r = s.value) : i();
                    }
                    return s.value = void 0 !== r ? r : "", t(function() {
                        s.focus({
                            preventScroll: !0
                        }), s.style.height = "100%";
                    }), s.addEventListener("change", l), s.addEventListener("blur", l), 
                    s.addEventListener("keydown", function(e) {
                        switch (e.keyCode) {
                          case 13:
                            l();
                            break;

                          case 27:
                            i();
                            break;

                          case 35:
                          case 36:
                            e.stopPropagation();
                        }
                    }), n.mask && this.table.modules.edit.maskInput(s, n), s;
                },
                textarea: function(t, e, o, i, n) {
                    var s = t.getValue(), r = n.verticalNavigation || "hybrid", a = String(null != s ? s : ""), l = ((a.match(/(?:\r\n|\r|\n)/g) || []).length, 
                    document.createElement("textarea")), c = 0;
                    if (l.style.display = "block", l.style.padding = "2px", l.style.height = "100%", 
                    l.style.width = "100%", l.style.boxSizing = "border-box", l.style.whiteSpace = "pre-wrap", 
                    l.style.resize = "none", n.elementAttributes && "object" == Q(n.elementAttributes)) for (var u in n.elementAttributes) "+" == u.charAt(0) ? (u = u.slice(1), 
                    l.setAttribute(u, l.getAttribute(u) + n.elementAttributes["+" + u])) : l.setAttribute(u, n.elementAttributes[u]);
                    function d(e) {
                        null == s && "" !== l.value || l.value !== s ? (o(l.value) && (s = l.value), 
                        setTimeout(function() {
                            t.getRow().normalizeHeight();
                        }, 300)) : i();
                    }
                    return l.value = a, e(function() {
                        l.focus({
                            preventScroll: !0
                        }), l.style.height = "100%", l.scrollHeight, l.style.height = l.scrollHeight + "px", 
                        t.getRow().normalizeHeight();
                    }), l.addEventListener("change", d), l.addEventListener("blur", d), 
                    l.addEventListener("keyup", function() {
                        l.style.height = "";
                        var e = l.scrollHeight;
                        l.style.height = e + "px", e != c && (c = e, t.getRow().normalizeHeight());
                    }), l.addEventListener("keydown", function(e) {
                        switch (e.keyCode) {
                          case 27:
                            i();
                            break;

                          case 38:
                            ("editor" == r || "hybrid" == r && l.selectionStart) && (e.stopImmediatePropagation(), 
                            e.stopPropagation());
                            break;

                          case 40:
                            ("editor" == r || "hybrid" == r && l.selectionStart !== l.value.length) && (e.stopImmediatePropagation(), 
                            e.stopPropagation());
                            break;

                          case 35:
                          case 36:
                            e.stopPropagation();
                        }
                    }), n.mask && this.table.modules.edit.maskInput(l, n), l;
                },
                number: function(e, t, o, i, n) {
                    var s = e.getValue(), r = n.verticalNavigation || "editor", a = document.createElement("input");
                    if (a.setAttribute("type", "number"), void 0 !== n.max && a.setAttribute("max", n.max), 
                    void 0 !== n.min && a.setAttribute("min", n.min), void 0 !== n.step && a.setAttribute("step", n.step), 
                    a.style.padding = "4px", a.style.width = "100%", a.style.boxSizing = "border-box", 
                    n.elementAttributes && "object" == Q(n.elementAttributes)) for (var l in n.elementAttributes) "+" == l.charAt(0) ? (l = l.slice(1), 
                    a.setAttribute(l, a.getAttribute(l) + n.elementAttributes["+" + l])) : a.setAttribute(l, n.elementAttributes[l]);
                    a.value = s;
                    function c(e) {
                        u();
                    }
                    function u() {
                        var e = a.value;
                        (e = isNaN(e) || "" === e ? e : Number(e)) !== s ? o(e) && (s = e) : i();
                    }
                    return t(function() {
                        a.removeEventListener("blur", c), a.focus({
                            preventScroll: !0
                        }), a.style.height = "100%", a.addEventListener("blur", c);
                    }), a.addEventListener("keydown", function(e) {
                        switch (e.keyCode) {
                          case 13:
                            u();
                            break;

                          case 27:
                            i();
                            break;

                          case 38:
                          case 40:
                            "editor" == r && (e.stopImmediatePropagation(), e.stopPropagation());
                            break;

                          case 35:
                          case 36:
                            e.stopPropagation();
                        }
                    }), n.mask && this.table.modules.edit.maskInput(a, n), a;
                },
                range: function(e, t, o, i, n) {
                    var s = e.getValue(), r = document.createElement("input");
                    if (r.setAttribute("type", "range"), void 0 !== n.max && r.setAttribute("max", n.max), 
                    void 0 !== n.min && r.setAttribute("min", n.min), void 0 !== n.step && r.setAttribute("step", n.step), 
                    r.style.padding = "4px", r.style.width = "100%", r.style.boxSizing = "border-box", 
                    n.elementAttributes && "object" == Q(n.elementAttributes)) for (var a in n.elementAttributes) "+" == a.charAt(0) ? (a = a.slice(1), 
                    r.setAttribute(a, r.getAttribute(a) + n.elementAttributes["+" + a])) : r.setAttribute(a, n.elementAttributes[a]);
                    function l() {
                        var e = r.value;
                        (e = isNaN(e) || "" === e ? e : Number(e)) != s ? o(e) && (s = e) : i();
                    }
                    return r.value = s, t(function() {
                        r.focus({
                            preventScroll: !0
                        }), r.style.height = "100%";
                    }), r.addEventListener("blur", function(e) {
                        l();
                    }), r.addEventListener("keydown", function(e) {
                        switch (e.keyCode) {
                          case 13:
                            l();
                            break;

                          case 27:
                            i();
                        }
                    }), r;
                },
                select: function(r, e, o, t, a) {
                    var i = this, n = this, s = r.getElement(), l = r.getValue(), c = a.verticalNavigation || "editor", u = void 0 !== l || null === l ? Array.isArray(l) ? l : [ l ] : void 0 !== a.defaultValue ? a.defaultValue : [], d = document.createElement("input"), h = document.createElement("div"), p = a.multiselect, m = [], f = {}, g = [], b = [], v = !0, y = !1, w = "", E = null;
                    function C(e) {
                        var t = {}, o = n.table.getData(), i = e ? n.table.columnManager.getColumnByField(e) : r.getColumn()._getSelf();
                        return i ? o.forEach(function(e) {
                            e = i.getFieldValue(e);
                            null != e && "" !== e && (t[e] = !0);
                        }) : console.warn("unable to find matching column to create select lookup list:", e), 
                        Object.keys(t);
                    }
                    function x(e, o) {
                        var i = [], n = [];
                        function s(e) {
                            e = {
                                label: e.label,
                                value: e.value,
                                itemParams: e.itemParams,
                                elementAttributes: e.elementAttributes,
                                element: !1
                            };
                            -1 < o.indexOf(e.value) && M(e), i.push(e), n.push(e);
                        }
                        if ("function" == typeof e && (e = e(r)), Array.isArray(e)) e.forEach(function(e) {
                            var t;
                            "object" === (void 0 === e ? "undefined" : Q(e)) ? e.options ? (t = {
                                label: e.label,
                                group: !0,
                                itemParams: e.itemParams,
                                elementAttributes: e.elementAttributes,
                                element: !1
                            }, n.push(t), e.options.forEach(function(e) {
                                s(e);
                            })) : s(e) : (-1 < o.indexOf((t = {
                                label: e,
                                value: e,
                                element: !1
                            }).value) && M(t), i.push(t), n.push(t));
                        }); else for (var t in e) {
                            t = {
                                label: e[t],
                                value: t,
                                element: !1
                            };
                            -1 < o.indexOf(t.value) && M(t), i.push(t), n.push(t);
                        }
                        for (a.sortValuesList && (i.sort(function(e, t) {
                            return e.label < t.label ? -1 : e.label > t.label ? 1 : 0;
                        }), n.sort(function(e, t) {
                            return e.label < t.label ? -1 : e.label > t.label ? 1 : 0;
                        }), "asc" !== a.sortValuesList) && (i.reverse(), n.reverse()), 
                        m = i, g = n; h.firstChild; ) h.removeChild(h.firstChild);
                        g.forEach(function(e) {
                            var t = e.element;
                            if (!t) {
                                if (t = document.createElement("div"), e.label = a.listItemFormatter ? a.listItemFormatter(e.value, e.label, r, t, e.itemParams) : e.label, 
                                e.group ? (t.classList.add("tabulator-edit-select-list-group"), 
                                t.tabIndex = 0, t.innerHTML = "" === e.label ? "&nbsp;" : e.label) : (t.classList.add("tabulator-edit-select-list-item"), 
                                t.tabIndex = 0, t.innerHTML = "" === e.label ? "&nbsp;" : e.label, 
                                t.addEventListener("click", function() {
                                    y = !0, setTimeout(function() {
                                        y = !1;
                                    }, 10), p ? (S(e), d.focus()) : L(e);
                                }), -1 < b.indexOf(e) && t.classList.add("active")), 
                                e.elementAttributes && "object" == Q(e.elementAttributes)) for (var o in e.elementAttributes) "+" == o.charAt(0) ? (o = o.slice(1), 
                                t.setAttribute(o, d.getAttribute(o) + e.elementAttributes["+" + o])) : t.setAttribute(o, e.elementAttributes[o]);
                                t.addEventListener("mousedown", function() {
                                    v = !1, setTimeout(function() {
                                        v = !0;
                                    }, 10);
                                }), e.element = t;
                            }
                            h.appendChild(t);
                        });
                    }
                    function _(e, t) {
                        !p && f && f.element && f.element.classList.remove("active"), 
                        f && f.element && f.element.classList.remove("focused"), 
                        (f = e).element && (e.element.classList.add("focused"), 
                        t) && e.element.classList.add("active"), e && e.element && e.element.scrollIntoView && e.element.scrollIntoView({
                            behavior: "smooth",
                            block: "nearest",
                            inline: "start"
                        });
                    }
                    function M(e) {
                        -1 == b.indexOf(e) && (b.push(e), _(e, !0)), D();
                    }
                    function R(e) {
                        var t = b[e];
                        -1 < e && (b.splice(e, 1), t.element) && t.element.classList.remove("active");
                    }
                    function S(e) {
                        e = e || f;
                        var t = b.indexOf(e);
                        -1 < t ? R(t) : (!0 !== p && b.length >= p && R(0), M(e)), 
                        D();
                    }
                    function L(e) {
                        I(), (e = e || f) && (d.value = e.label, o(e.value)), u = [ e.value ];
                    }
                    function T(e) {
                        e || I();
                        var t = [];
                        b.forEach(function(e) {
                            t.push(e.value);
                        }), o(u = t);
                    }
                    function D() {
                        var t = [];
                        b.forEach(function(e) {
                            t.push(e.label);
                        }), d.value = t.join(", "), !1 === n.currentCell && T(!0);
                    }
                    function k() {
                        I(), t();
                    }
                    function I() {
                        h.parentNode && h.parentNode.removeChild(h), n.table.rowManager.element.removeEventListener("scroll", k);
                    }
                    if (!Array.isArray(a) && (Array.isArray(a) || "object" !== (void 0 === a ? "undefined" : Q(a)) || a.values) || (console.warn("DEPRECATION WARNING - values for the select editor must now be passed into the values property of the editorParams object, not as the editorParams object"), 
                    a = {
                        values: a
                    }), d.setAttribute("type", "text"), d.style.padding = "4px", 
                    d.style.width = "100%", d.style.boxSizing = "border-box", d.style.cursor = "default", 
                    d.readOnly = 0 != this.currentCell, a.elementAttributes && "object" == Q(a.elementAttributes)) for (var O in a.elementAttributes) "+" == O.charAt(0) ? (O = O.slice(1), 
                    d.setAttribute(O, d.getAttribute(O) + a.elementAttributes["+" + O])) : d.setAttribute(O, a.elementAttributes[O]);
                    return d.value = void 0 !== l || null === l ? l : "", d.addEventListener("search", function(e) {
                        if (!d.value) {
                            for (var t = b.length, o = 0; o < t; o++) R(0);
                            T();
                        }
                    }), d.addEventListener("keydown", function(e) {
                        var t;
                        switch (e.keyCode) {
                          case 38:
                            t = m.indexOf(f), ("editor" == c || "hybrid" == c && t) && (e.stopImmediatePropagation(), 
                            e.stopPropagation(), e.preventDefault(), 0 < t) && _(m[t - 1], !p);
                            break;

                          case 40:
                            t = m.indexOf(f), ("editor" == c || "hybrid" == c && t < m.length - 1) && (e.stopImmediatePropagation(), 
                            e.stopPropagation(), e.preventDefault(), t < m.length - 1) && _(-1 == t ? m[0] : m[t + 1], !p);
                            break;

                          case 37:
                          case 39:
                            e.stopImmediatePropagation(), e.stopPropagation(), e.preventDefault();
                            break;

                          case 13:
                            (p ? S : L)();
                            break;

                          case 27:
                            k();
                            break;

                          case 9:
                            break;

                          default:
                            !1 === n.currentCell && e.preventDefault(), 38 <= e.keyCode && e.keyCode <= 90 && (e.keyCode, 
                            clearTimeout(E), t = String.fromCharCode(event.keyCode).toLowerCase(), 
                            w += t.toLowerCase(), (t = m.find(function(e) {
                                return void 0 !== e.label && e.label.toLowerCase().startsWith(w);
                            })) && _(t, !p), E = setTimeout(function() {
                                w = "";
                            }, 800));
                        }
                    }), d.addEventListener("blur", function(e) {
                        v && (p ? T : k)();
                    }), d.addEventListener("focus", function(e) {
                        var t;
                        y || (b = [], h.parentNode) || (!0 === a.values ? x(C(), u) : "string" == typeof a.values ? x(C(a.values), u) : x(a.values || [], u), 
                        t = N.prototype.helpers.elOffset(s), h.style.minWidth = s.offsetWidth + "px", 
                        h.style.top = t.top + s.offsetHeight + "px", h.style.left = t.left + "px", 
                        h.addEventListener("mousedown", function(e) {
                            v = !1, setTimeout(function() {
                                v = !0;
                            }, 10);
                        }), document.body.appendChild(h));
                    }), (h = document.createElement("div")).classList.add("tabulator-edit-select-list"), 
                    e(function() {
                        d.style.height = "100%", d.focus({
                            preventScroll: !0
                        });
                    }), setTimeout(function() {
                        i.table.rowManager.element.addEventListener("scroll", k);
                    }, 10), d;
                },
                autocomplete: function(n, e, t, o, s) {
                    var i = this, r = this, a = n.getElement(), l = n.getValue(), c = s.verticalNavigation || "editor", u = void 0 !== l || null === l ? l : void 0 !== s.defaultValue ? s.defaultValue : "", d = document.createElement("input"), h = document.createElement("div"), p = [], m = !1, f = !0, g = !1;
                    if (d.setAttribute("type", "search"), d.style.padding = "4px", 
                    d.style.width = "100%", d.style.boxSizing = "border-box", s.elementAttributes && "object" == Q(s.elementAttributes)) for (var b in s.elementAttributes) "+" == b.charAt(0) ? (b = b.slice(1), 
                    d.setAttribute(b, d.getAttribute(b) + s.elementAttributes["+" + b])) : d.setAttribute(b, s.elementAttributes[b]);
                    function v() {
                        !0 === s.values ? g = y() : "string" == typeof s.values && (g = y(s.values));
                    }
                    function y(e) {
                        var t = {}, o = r.table.getData(), i = e ? r.table.columnManager.getColumnByField(e) : n.getColumn()._getSelf();
                        return i ? (o.forEach(function(e) {
                            e = i.getFieldValue(e);
                            null != e && "" !== e && (t[e] = !0);
                        }), t = s.sortValuesList ? "asc" == s.sortValuesList ? Object.keys(t).sort() : Object.keys(t).sort().reverse() : Object.keys(t)) : console.warn("unable to find matching column to create autocomplete lookup list:", e), 
                        t;
                    }
                    function w(t, o) {
                        var i = [], e = g || s.values || [];
                        s.searchFunc ? (i = s.searchFunc(t, e)) instanceof Promise ? (E(void 0 !== s.searchingPlaceholder ? s.searchingPlaceholder : "Searching..."), 
                        i.then(function(e) {
                            _(C(e), o);
                        }).catch(function(e) {
                            console.err("error in autocomplete search promise:", e);
                        })) : _(C(i), o) : (e = C(e), "" === t ? s.showListOnEmpty && (i = e) : e.forEach(function(e) {
                            null === e.value && void 0 === e.value || (-1 < String(e.value).toLowerCase().indexOf(String(t).toLowerCase()) || -1 < String(e.title).toLowerCase().indexOf(String(t).toLowerCase())) && i.push(e);
                        }), _(i, o));
                    }
                    function E(e) {
                        var t = document.createElement("div");
                        x(), !1 !== e && (t.classList.add("tabulator-edit-select-list-notice"), 
                        t.tabIndex = 0, e instanceof Node ? t.appendChild(e) : t.innerHTML = e, 
                        h.appendChild(t));
                    }
                    function C(e) {
                        var o = [];
                        if (Array.isArray(e)) e.forEach(function(e) {
                            var t = {};
                            "object" === (void 0 === e ? "undefined" : Q(e)) ? (t.title = s.listItemFormatter ? s.listItemFormatter(e.value, e.label) : e.label, 
                            t.value = e.value) : (t.title = s.listItemFormatter ? s.listItemFormatter(e, e) : e, 
                            t.value = e), o.push(t);
                        }); else for (var t in e) {
                            t = {
                                title: s.listItemFormatter ? s.listItemFormatter(t, e[t]) : e[t],
                                value: t
                            };
                            o.push(t);
                        }
                        return o;
                    }
                    function x() {
                        for (;h.firstChild; ) h.removeChild(h.firstChild);
                    }
                    function _(e, t) {
                        var o, i;
                        e.length ? (e = e, o = t, i = !1, x(), (p = e).forEach(function(t) {
                            var e = t.element;
                            e || ((e = document.createElement("div")).classList.add("tabulator-edit-select-list-item"), 
                            e.tabIndex = 0, e.innerHTML = t.title, e.addEventListener("click", function(e) {
                                R(t), M();
                            }), e.addEventListener("mousedown", function(e) {
                                f = !1, setTimeout(function() {
                                    f = !0;
                                }, 10);
                            }), t.element = e, o && t.value == l && (d.value = t.title, 
                            t.element.classList.add("active"), i = !0), t === m && (t.element.classList.add("active"), 
                            i = !0)), h.appendChild(e);
                        }), i || R(!1)) : s.emptyPlaceholder && E(s.emptyPlaceholder);
                    }
                    function M() {
                        S(), m ? l !== m.value ? (l = m.value, d.value = m.title, 
                        t(m.value)) : o() : s.freetext || s.allowEmpty && "" === d.value ? (l = d.value, 
                        t(d.value)) : o();
                    }
                    function R(e) {
                        m && m.element && m.element.classList.remove("active"), 
                        (m = e) && e.element && e.element.classList.add("active"), 
                        e && e.element && e.element.scrollIntoView && e.element.scrollIntoView({
                            behavior: "smooth",
                            block: "nearest",
                            inline: "start"
                        });
                    }
                    function S() {
                        h.parentNode && h.parentNode.removeChild(h), r.table.rowManager.element.removeEventListener("scroll", L);
                    }
                    function L() {
                        S(), o();
                    }
                    return h.classList.add("tabulator-edit-select-list"), h.addEventListener("mousedown", function(e) {
                        f = !1, setTimeout(function() {
                            f = !0;
                        }, 10);
                    }), d.addEventListener("keydown", function(e) {
                        var t;
                        switch (e.keyCode) {
                          case 38:
                            t = p.indexOf(m), ("editor" == c || "hybrid" == c && t) && (e.stopImmediatePropagation(), 
                            e.stopPropagation(), e.preventDefault(), R(0 < t && p[t - 1]));
                            break;

                          case 40:
                            t = p.indexOf(m), ("editor" == c || "hybrid" == c && t < p.length - 1) && (e.stopImmediatePropagation(), 
                            e.stopPropagation(), e.preventDefault(), t < p.length - 1) && R(-1 == t ? p[0] : p[t + 1]);
                            break;

                          case 37:
                          case 39:
                            e.stopImmediatePropagation(), e.stopPropagation();
                            break;

                          case 13:
                            M();
                            break;

                          case 27:
                            L();
                            break;

                          case 36:
                          case 35:
                            e.stopImmediatePropagation();
                        }
                    }), d.addEventListener("keyup", function(e) {
                        switch (e.keyCode) {
                          case 38:
                          case 37:
                          case 39:
                          case 40:
                          case 13:
                          case 27:
                            break;

                          default:
                            w(d.value);
                        }
                    }), d.addEventListener("search", function(e) {
                        w(d.value);
                    }), d.addEventListener("blur", function(e) {
                        f && M();
                    }), d.addEventListener("focus", function(e) {
                        var t = u;
                        if (v(), !h.parentNode) {
                            for (console.log("show", u); h.firstChild; ) h.removeChild(h.firstChild);
                            var o = N.prototype.helpers.elOffset(a);
                            h.style.minWidth = a.offsetWidth + "px", h.style.top = o.top + a.offsetHeight + "px", 
                            h.style.left = o.left + "px", document.body.appendChild(h);
                        }
                        w(d.value = t, !0);
                    }), e(function() {
                        d.style.height = "100%", d.focus({
                            preventScroll: !0
                        });
                    }), s.mask && this.table.modules.edit.maskInput(d, s), setTimeout(function() {
                        i.table.rowManager.element.addEventListener("scroll", L);
                    }, 10), v(), w(d.value = u, !0), d;
                },
                star: function(e, t, i, o, n) {
                    var s = this, r = e.getElement(), a = e.getValue(), l = r.getElementsByTagName("svg").length || 5, e = r.getElementsByTagName("svg")[0] ? r.getElementsByTagName("svg")[0].getAttribute("width") : 14, c = [], u = document.createElement("div"), d = document.createElementNS("http://www.w3.org/2000/svg", "svg");
                    function h(o) {
                        c.forEach(function(e, t) {
                            t < o ? ("ie" == s.table.browser ? e.setAttribute("class", "tabulator-star-active") : e.classList.replace("tabulator-star-inactive", "tabulator-star-active"), 
                            e.innerHTML = '<polygon fill="#488CE9" stroke="#014AAE" stroke-width="37.6152" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 "/>') : ("ie" == s.table.browser ? e.setAttribute("class", "tabulator-star-inactive") : e.classList.replace("tabulator-star-active", "tabulator-star-inactive"), 
                            e.innerHTML = '<polygon fill="#010155" stroke="#686868" stroke-width="37.6152" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 "/>');
                        });
                    }
                    function p(e) {
                        h(a = e);
                    }
                    if (r.style.whiteSpace = "nowrap", r.style.overflow = "hidden", 
                    r.style.textOverflow = "ellipsis", u.style.verticalAlign = "middle", 
                    u.style.display = "inline-block", u.style.padding = "4px", d.setAttribute("width", e), 
                    d.setAttribute("height", e), d.setAttribute("viewBox", "0 0 512 512"), 
                    d.setAttribute("xml:space", "preserve"), d.style.padding = "0 1px", 
                    n.elementAttributes && "object" == Q(n.elementAttributes)) for (var m in n.elementAttributes) "+" == m.charAt(0) ? (m = m.slice(1), 
                    u.setAttribute(m, u.getAttribute(m) + n.elementAttributes["+" + m])) : u.setAttribute(m, n.elementAttributes[m]);
                    for (var f = 1; f <= l; f++) !function(t) {
                        var e = document.createElement("span"), o = d.cloneNode(!0);
                        c.push(o), e.addEventListener("mouseenter", function(e) {
                            e.stopPropagation(), e.stopImmediatePropagation(), h(t);
                        }), e.addEventListener("mousemove", function(e) {
                            e.stopPropagation(), e.stopImmediatePropagation();
                        }), e.addEventListener("click", function(e) {
                            e.stopPropagation(), e.stopImmediatePropagation(), i(t), 
                            r.blur();
                        }), e.appendChild(o), u.appendChild(e);
                    }(f);
                    return h(a = Math.min(parseInt(a), l)), u.addEventListener("mousemove", function(e) {
                        h(0);
                    }), u.addEventListener("click", function(e) {
                        i(0);
                    }), r.addEventListener("blur", function(e) {
                        o();
                    }), r.addEventListener("keydown", function(e) {
                        switch (e.keyCode) {
                          case 39:
                            p(a + 1);
                            break;

                          case 37:
                            p(a - 1);
                            break;

                          case 13:
                            i(a);
                            break;

                          case 27:
                            o();
                        }
                    }), u;
                },
                progress: function(e, t, o, i, n) {
                    var s, r, a = e.getElement(), l = void 0 === n.max ? a.getElementsByTagName("div")[0].getAttribute("max") || 100 : n.max, c = void 0 === n.min ? a.getElementsByTagName("div")[0].getAttribute("min") || 0 : n.min, u = (l - c) / 100, d = e.getValue() || 0, h = document.createElement("div"), p = document.createElement("div");
                    function m() {
                        var e = window.getComputedStyle(a, null), e = u * Math.round(p.offsetWidth / ((a.clientWidth - parseInt(e.getPropertyValue("padding-left")) - parseInt(e.getPropertyValue("padding-right"))) / 100)) + c;
                        o(e), a.setAttribute("aria-valuenow", e), a.setAttribute("aria-label", d);
                    }
                    if (h.style.position = "absolute", h.style.right = "0", h.style.top = "0", 
                    h.style.bottom = "0", h.style.width = "5px", h.classList.add("tabulator-progress-handle"), 
                    p.style.display = "inline-block", p.style.position = "relative", 
                    p.style.height = "100%", p.style.backgroundColor = "#488CE9", 
                    p.style.maxWidth = "100%", p.style.minWidth = "0%", n.elementAttributes && "object" == Q(n.elementAttributes)) for (var f in n.elementAttributes) "+" == f.charAt(0) ? (f = f.slice(1), 
                    p.setAttribute(f, p.getAttribute(f) + n.elementAttributes["+" + f])) : p.setAttribute(f, n.elementAttributes[f]);
                    return a.style.padding = "4px 4px", d = Math.min(parseFloat(d), l), 
                    d = Math.max(parseFloat(d), c), d = Math.round((d - c) / u), 
                    p.style.width = d + "%", a.setAttribute("aria-valuemin", c), 
                    a.setAttribute("aria-valuemax", l), p.appendChild(h), h.addEventListener("mousedown", function(e) {
                        s = e.screenX, r = p.offsetWidth;
                    }), h.addEventListener("mouseover", function() {
                        h.style.cursor = "ew-resize";
                    }), a.addEventListener("mousemove", function(e) {
                        s && (p.style.width = r + e.screenX - s + "px");
                    }), a.addEventListener("mouseup", function(e) {
                        s && (e.stopPropagation(), e.stopImmediatePropagation(), 
                        r = s = !1, m());
                    }), a.addEventListener("keydown", function(e) {
                        switch (e.keyCode) {
                          case 39:
                            e.preventDefault(), p.style.width = p.clientWidth + a.clientWidth / 100 + "px";
                            break;

                          case 37:
                            e.preventDefault(), p.style.width = p.clientWidth - a.clientWidth / 100 + "px";
                            break;

                          case 9:
                          case 13:
                            m();
                            break;

                          case 27:
                            i();
                        }
                    }), a.addEventListener("blur", function() {
                        i();
                    }), p;
                },
                tickCross: function(e, t, o, i, n) {
                    var e = e.getValue(), s = document.createElement("input"), r = n.tristate, a = void 0 === n.indeterminateValue ? null : n.indeterminateValue, l = !1;
                    if (s.setAttribute("type", "checkbox"), s.style.marginTop = "5px", 
                    s.style.boxSizing = "border-box", n.elementAttributes && "object" == Q(n.elementAttributes)) for (var c in n.elementAttributes) "+" == c.charAt(0) ? (c = c.slice(1), 
                    s.setAttribute(c, s.getAttribute(c) + n.elementAttributes["+" + c])) : s.setAttribute(c, n.elementAttributes[c]);
                    function u(e) {
                        return r ? e ? l ? a : s.checked : s.checked && !l ? (s.checked = !1, 
                        s.indeterminate = !0, l = !0, a) : (l = !1, s.checked) : s.checked;
                    }
                    return s.value = e, !r || void 0 !== e && e !== a && "" !== e || (l = !0, 
                    s.indeterminate = !0), "firefox" != this.table.browser && t(function() {
                        s.focus({
                            preventScroll: !0
                        });
                    }), s.checked = !0 === e || "true" === e || "True" === e || 1 === e, 
                    t(function() {
                        s.focus();
                    }), s.addEventListener("change", function(e) {
                        o(u());
                    }), s.addEventListener("blur", function(e) {
                        o(u(!0));
                    }), s.addEventListener("keydown", function(e) {
                        13 == e.keyCode && o(u()), 27 == e.keyCode && i();
                    }), s;
                }
            }, N.prototype.registerModule("edit", d), h.prototype.generateExportList = function(e, t, o, i) {
                this.cloneTableStyle = t, this.config = e || {}, this.colVisProp = i;
                t = !1 !== this.config.columnHeaders ? this.headersToExportRows(this.generateColumnGroupHeaders()) : [], 
                e = this.bodyToExportRows(this.rowLookup(o));
                return t.concat(e);
            }, h.prototype.genereateTable = function(e, t, o, i) {
                e = this.generateExportList(e, t, o, i);
                return this.genereateTableElement(e);
            }, h.prototype.rowLookup = function(e) {
                var t = this, o = [];
                if ("function" == typeof e) e.call(this.table).forEach(function(e) {
                    (e = t.table.rowManager.findRow(e)) && o.push(e);
                }); else switch (e) {
                  case !0:
                  case "visible":
                    o = this.table.rowManager.getVisibleRows(!0);
                    break;

                  case "all":
                    o = this.table.rowManager.rows;
                    break;

                  case "selected":
                    o = this.table.modules.selectRow.selectedRows;
                    break;

                  default:
                    o = this.table.options.pagination ? this.table.rowManager.getDisplayRows(this.table.rowManager.displayRows.length - 2) : this.table.rowManager.getDisplayRows();
                }
                return Object.assign([], o);
            }, h.prototype.generateColumnGroupHeaders = function() {
                var t = this, o = [];
                return (!1 !== this.config.columnGroups ? this.table.columnManager.columns : this.table.columnManager.columnsByIndex).forEach(function(e) {
                    e = t.processColumnGroup(e);
                    e && o.push(e);
                }), o;
            }, h.prototype.processColumnGroup = function(e) {
                var t = this, o = e.columns, i = 0, n = {
                    title: e.definition["title" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))] || e.definition.title,
                    column: e,
                    depth: 1
                };
                if (o.length) {
                    if (n.subGroups = [], n.width = 0, o.forEach(function(e) {
                        e = t.processColumnGroup(e);
                        e && (n.width += e.width, n.subGroups.push(e), e.depth > i) && (i = e.depth);
                    }), n.depth += i, !n.width) return !1;
                } else {
                    if (!this.columnVisCheck(e)) return !1;
                    n.width = 1;
                }
                return n;
            }, h.prototype.columnVisCheck = function(e) {
                return !1 !== e.definition[this.colVisProp] && (e.visible || !e.visible && e.definition[this.colVisProp]);
            }, h.prototype.headersToExportRows = function(e) {
                var r = [], a = 0, o = [];
                return e.forEach(function(e) {
                    e.depth > a && (a = e.depth);
                }), e.forEach(function(e) {
                    !function t(e, o) {
                        var i = a - o;
                        if (void 0 === r[o] && (r[o] = []), e.height = e.subGroups ? 1 : i - e.depth + 1, 
                        r[o].push(e), 1 < e.height) for (var n = 1; n < e.height; n++) void 0 === r[o + n] && (r[o + n] = []), 
                        r[o + n].push(!1);
                        if (1 < e.width) for (var s = 1; s < e.width; s++) r[o].push(!1);
                        e.subGroups && e.subGroups.forEach(function(e) {
                            t(e, o + 1);
                        });
                    }(e, 0);
                }), r.forEach(function(e) {
                    var t = [];
                    e.forEach(function(e) {
                        t.push(e ? new G(e.title, e.column.getComponent(), e.width, e.height, e.depth) : null);
                    }), o.push(new W("header", t));
                }), o;
            }, h.prototype.bodyToExportRows = function(e) {
                var s = this, r = [], a = [];
                return this.table.columnManager.columnsByIndex.forEach(function(e) {
                    s.columnVisCheck(e) && r.push(e.getComponent());
                }), !1 !== this.config.columnCalcs && this.table.modExists("columnCalcs") && (this.table.modules.columnCalcs.topInitialized && e.unshift(this.table.modules.columnCalcs.topRow), 
                this.table.modules.columnCalcs.botInitialized) && e.push(this.table.modules.columnCalcs.botRow), 
                (e = e.filter(function(e) {
                    switch (e.type) {
                      case "group":
                        return !1 !== s.config.rowGroups;

                      case "calc":
                        return !1 !== s.config.columnCalcs;

                      case "row":
                        return !(s.table.options.dataTree && !1 === s.config.dataTree && e.modules.dataTree.parent);
                    }
                    return !0;
                })).forEach(function(e, t) {
                    var o = e.getData(s.colVisProp), i = [], n = 0;
                    switch (e.type) {
                      case "group":
                        n = e.level, i.push(new G(e.key, e.getComponent(), r.length, 1));
                        break;

                      case "calc":
                      case "row":
                        r.forEach(function(e) {
                            i.push(new G(e._column.getFieldValue(o), e, 1, 1));
                        }), s.table.options.dataTree && !1 !== s.config.dataTree && (n = e.modules.dataTree.index);
                    }
                    a.push(new W(e.type, i, e.getComponent(), n));
                }), a;
            }, h.prototype.genereateTableElement = function(e) {
                var i = this, t = document.createElement("table"), n = document.createElement("thead"), s = document.createElement("tbody"), r = this.lookupTableStyles(), o = this.table.options["rowFormatter" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))], a = {};
                return a.rowFormatter = null !== o ? o : this.table.options.rowFormatter, 
                this.table.options.dataTree && !1 !== this.config.dataTree && this.table.modExists("columnCalcs") && (a.treeElementField = this.table.modules.dataTree.elementField), 
                a.groupHeader = this.table.options["groupHeader" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))], 
                a.groupHeader && !Array.isArray(a.groupHeader) && (a.groupHeader = [ a.groupHeader ]), 
                t.classList.add("tabulator-print-table"), this.mapElementStyles(this.table.columnManager.getHeadersElement(), n, [ "border-top", "border-left", "border-right", "border-bottom", "background-color", "color", "font-weight", "font-family", "font-size" ]), 
                1e3 < e.length && console.warn("It may take a long time to render an HTML table with more than 1000 rows"), 
                e.forEach(function(e, t) {
                    switch (e.type) {
                      case "header":
                        n.appendChild(i.genereateHeaderElement(e, a, r));
                        break;

                      case "group":
                        s.appendChild(i.genereateGroupElement(e, a, r));
                        break;

                      case "calc":
                        s.appendChild(i.genereateCalcElement(e, a, r));
                        break;

                      case "row":
                        var o = i.genereateRowElement(e, a, r);
                        i.mapElementStyles(t % 2 && r.evenRow ? r.evenRow : r.oddRow, o, [ "border-top", "border-left", "border-right", "border-bottom", "color", "font-weight", "font-family", "font-size", "background-color" ]), 
                        s.appendChild(o);
                    }
                }), n.innerHTML && t.appendChild(n), t.appendChild(s), this.mapElementStyles(this.table.element, t, [ "border-top", "border-left", "border-right", "border-bottom" ]), 
                t;
            }, h.prototype.lookupTableStyles = function() {
                var e = {};
                return this.cloneTableStyle && window.getComputedStyle && (e.oddRow = this.table.element.querySelector(".tabulator-row-odd:not(.tabulator-group):not(.tabulator-calcs)"), 
                e.evenRow = this.table.element.querySelector(".tabulator-row-even:not(.tabulator-group):not(.tabulator-calcs)"), 
                e.calcRow = this.table.element.querySelector(".tabulator-row.tabulator-calcs"), 
                e.firstRow = this.table.element.querySelector(".tabulator-row:not(.tabulator-group):not(.tabulator-calcs)"), 
                e.firstGroup = this.table.element.getElementsByClassName("tabulator-group")[0], 
                e.firstRow) && (e.styleCells = e.firstRow.getElementsByClassName("tabulator-cell"), 
                e.firstCell = e.styleCells[0], e.lastCell = e.styleCells[e.styleCells.length - 1]), 
                e;
            }, h.prototype.genereateHeaderElement = function(e, t, o) {
                var i = this, n = document.createElement("tr");
                return e.columns.forEach(function(e) {
                    var t, o;
                    e && (t = document.createElement("th"), o = e.component._column.definition.cssClass ? e.component._column.definition.cssClass.split(" ") : [], 
                    t.colSpan = e.width, t.rowSpan = e.height, t.innerHTML = e.value, 
                    i.cloneTableStyle && (t.style.boxSizing = "border-box"), o.forEach(function(e) {
                        t.classList.add(e);
                    }), i.mapElementStyles(e.component.getElement(), t, [ "text-align", "border-top", "border-left", "border-right", "border-bottom", "background-color", "color", "font-weight", "font-family", "font-size" ]), 
                    i.mapElementStyles(e.component._column.contentElement, t, [ "padding-top", "padding-left", "padding-right", "padding-bottom" ]), 
                    e.component._column.visible ? i.mapElementStyles(e.component.getElement(), t, [ "width" ]) : e.component._column.definition.width && (t.style.width = e.component._column.definition.width + "px"), 
                    e.component._column.parent && i.mapElementStyles(e.component._column.parent.groupElement, t, [ "border-top" ]), 
                    n.appendChild(t));
                }), n;
            }, h.prototype.genereateGroupElement = function(e, t, o) {
                var i = document.createElement("tr"), n = document.createElement("td"), s = e.columns[0];
                return i.classList.add("tabulator-print-table-row"), t.groupHeader && t.groupHeader[e.indent] ? s.value = t.groupHeader[e.indent](s.value, e.component._group.getRowCount(), e.component._group.getData(), e.component) : !1 === t.groupHeader ? s.value = s.value : s.value = e.component._group.generator(s.value, e.component._group.getRowCount(), e.component._group.getData(), e.component), 
                n.colSpan = s.width, n.innerHTML = s.value, i.classList.add("tabulator-print-table-group"), 
                i.classList.add("tabulator-group-level-" + e.indent), s.component.isVisible() && i.classList.add("tabulator-group-visible"), 
                this.mapElementStyles(o.firstGroup, i, [ "border-top", "border-left", "border-right", "border-bottom", "color", "font-weight", "font-family", "font-size", "background-color" ]), 
                this.mapElementStyles(o.firstGroup, n, [ "padding-top", "padding-left", "padding-right", "padding-bottom" ]), 
                i.appendChild(n), i;
            }, h.prototype.genereateCalcElement = function(e, t, o) {
                e = this.genereateRowElement(e, t, o);
                return e.classList.add("tabulator-print-table-calcs"), this.mapElementStyles(o.calcRow, e, [ "border-top", "border-left", "border-right", "border-bottom", "color", "font-weight", "font-family", "font-size", "background-color" ]), 
                e;
            }, h.prototype.genereateRowElement = function(r, a, l) {
                var c = this, u = document.createElement("tr");
                return u.classList.add("tabulator-print-table-row"), r.columns.forEach(function(e) {
                    if (e) {
                        var t = document.createElement("td"), o = e.component._column, n = e.value, s = {
                            modules: {},
                            getValue: function() {
                                return n;
                            },
                            getField: function() {
                                return o.definition.field;
                            },
                            getElement: function() {
                                return t;
                            },
                            getColumn: function() {
                                return o.getComponent();
                            },
                            getData: function() {
                                return r.component.getData();
                            },
                            getRow: function() {
                                return r.component;
                            },
                            getComponent: function() {
                                return s;
                            },
                            column: o
                        };
                        if ((o.definition.cssClass ? o.definition.cssClass.split(" ") : []).forEach(function(e) {
                            t.classList.add(e);
                        }), c.table.modExists("format") && !1 !== c.config.formatCells) n = c.table.modules.format.formatExportValue(s, c.colVisProp); else switch (void 0 === n ? "undefined" : Q(n)) {
                          case "object":
                            n = JSON.stringify(n);
                            break;

                          case "undefined":
                          case "null":
                            n = "";
                        }
                        n instanceof Node ? t.appendChild(n) : t.innerHTML = n, 
                        l.firstCell && (c.mapElementStyles(l.firstCell, t, [ "padding-top", "padding-left", "padding-right", "padding-bottom", "border-top", "border-left", "border-right", "border-bottom", "color", "font-weight", "font-family", "font-size" ]), 
                        o.definition.align) && (t.style.textAlign = o.definition.align), 
                        c.table.options.dataTree && !1 !== c.config.dataTree && (a.treeElementField && a.treeElementField == o.field || !a.treeElementField && 0 == i) && (r.component._row.modules.dataTree.controlEl && t.insertBefore(r.component._row.modules.dataTree.controlEl.cloneNode(!0), t.firstChild), 
                        r.component._row.modules.dataTree.branchEl) && t.insertBefore(r.component._row.modules.dataTree.branchEl.cloneNode(!0), t.firstChild), 
                        u.appendChild(t), s.modules.format && s.modules.format.renderedCallback && s.modules.format.renderedCallback(), 
                        a.rowFormatter && !1 !== c.config.formatCells && a.rowFormatter(r.component);
                    }
                }), u;
            }, h.prototype.genereateHTMLTable = function(e) {
                var t = document.createElement("div");
                return t.appendChild(this.genereateTableElement(e)), t.innerHTML;
            }, h.prototype.getHtml = function(e, t, o, i) {
                o = this.generateExportList(o || this.table.options.htmlOutputConfig, t, e, i || "htmlOutput");
                return this.genereateHTMLTable(o);
            }, h.prototype.mapElementStyles = function(e, t, o) {
                var i, n;
                this.cloneTableStyle && e && t && (i = {
                    "background-color": "backgroundColor",
                    color: "fontColor",
                    width: "width",
                    "font-weight": "fontWeight",
                    "font-family": "fontFamily",
                    "font-size": "fontSize",
                    "text-align": "textAlign",
                    "border-top": "borderTop",
                    "border-left": "borderLeft",
                    "border-right": "borderRight",
                    "border-bottom": "borderBottom",
                    "padding-top": "paddingTop",
                    "padding-left": "paddingLeft",
                    "padding-right": "paddingRight",
                    "padding-bottom": "paddingBottom"
                }, window.getComputedStyle) && (n = window.getComputedStyle(e), 
                o.forEach(function(e) {
                    t.style[i[e]] = n.getPropertyValue(e);
                }));
            }, N.prototype.registerModule("export", h), p.prototype.initializeColumn = function(n, e) {
                var s, r = this, a = n.getField();
                n.modules.filter = {
                    success: function(i) {
                        var e, t = "input" == n.modules.filter.tagType && "text" == n.modules.filter.attrType || "textarea" == n.modules.filter.tagType ? "partial" : "match", o = "";
                        if (void 0 === n.modules.filter.prevSuccess || n.modules.filter.prevSuccess !== i) {
                            if (n.modules.filter.prevSuccess = i, n.modules.filter.emptyFunc(i)) delete r.headerFilters[a]; else {
                                switch (n.modules.filter.value = i, Q(n.definition.headerFilterFunc)) {
                                  case "string":
                                    r.filters[n.definition.headerFilterFunc] ? (o = n.definition.headerFilterFunc, 
                                    e = function(e) {
                                        var t = n.definition.headerFilterFuncParams || {}, o = n.getFieldValue(e), t = "function" == typeof t ? t(i, o, e) : t;
                                        return r.filters[n.definition.headerFilterFunc](i, o, e, t);
                                    }) : console.warn("Header Filter Error - Matching filter function not found: ", n.definition.headerFilterFunc);
                                    break;

                                  case "function":
                                    o = e = function(e) {
                                        var t = n.definition.headerFilterFuncParams || {}, o = n.getFieldValue(e), t = "function" == typeof t ? t(i, o, e) : t;
                                        return n.definition.headerFilterFunc(i, o, e, t);
                                    };
                                }
                                e || (o = "partial" == t ? (e = function(e) {
                                    e = n.getFieldValue(e);
                                    return null != e && -1 < String(e).toLowerCase().indexOf(String(i).toLowerCase());
                                }, "like") : (e = function(e) {
                                    return n.getFieldValue(e) == i;
                                }, "=")), r.headerFilters[a] = {
                                    value: i,
                                    func: e,
                                    type: o,
                                    params: s || {}
                                };
                            }
                            t = JSON.stringify(r.headerFilters), r.prevHeaderFilterChangeCheck !== t && (r.prevHeaderFilterChangeCheck = t, 
                            r.changed = !0, r.table.rowManager.filterRefresh());
                        }
                        return !0;
                    },
                    attrType: !1,
                    tagType: !1,
                    emptyFunc: !1
                }, this.generateHeaderFilterElement(n);
            }, p.prototype.generateHeaderFilterElement = function(e, t, o) {
                var i, n, s, r, a, l, c = this, u = this, d = e.modules.filter.success, h = e.getField();
                if (e.modules.filter.headerElement && e.modules.filter.headerElement.parentNode && e.contentElement.removeChild(e.modules.filter.headerElement.parentNode), 
                h) {
                    switch (e.modules.filter.emptyFunc = e.definition.headerFilterEmptyCheck || function(e) {
                        return !e && "0" !== e && 0 !== e;
                    }, (i = document.createElement("div")).classList.add("tabulator-header-filter"), 
                    Q(e.definition.headerFilter)) {
                      case "string":
                        u.table.modules.edit.editors[e.definition.headerFilter] ? (n = u.table.modules.edit.editors[e.definition.headerFilter], 
                        "tick" !== e.definition.headerFilter && "tickCross" !== e.definition.headerFilter || e.definition.headerFilterEmptyCheck || (e.modules.filter.emptyFunc = function(e) {
                            return !0 !== e && !1 !== e;
                        })) : console.warn("Filter Error - Cannot build header filter, No such editor found: ", e.definition.editor);
                        break;

                      case "function":
                        n = e.definition.headerFilter;
                        break;

                      case "boolean":
                        e.modules.edit && e.modules.edit.editor ? n = e.modules.edit.editor : e.definition.formatter && u.table.modules.edit.editors[e.definition.formatter] ? (n = u.table.modules.edit.editors[e.definition.formatter], 
                        "tick" !== e.definition.formatter && "tickCross" !== e.definition.formatter || e.definition.headerFilterEmptyCheck || (e.modules.filter.emptyFunc = function(e) {
                            return !0 !== e && !1 !== e;
                        })) : n = u.table.modules.edit.editors.input;
                    }
                    n && (a = {
                        getValue: function() {
                            return void 0 !== t ? t : "";
                        },
                        getField: function() {
                            return e.definition.field;
                        },
                        getElement: function() {
                            return i;
                        },
                        getColumn: function() {
                            return e.getComponent();
                        },
                        getRow: function() {
                            return {
                                normalizeHeight: function() {}
                            };
                        }
                    }, l = "function" == typeof (l = e.definition.headerFilterParams || {}) ? l.call(u.table) : l, 
                    (s = n.call(this.table.modules.edit, a, function() {}, d, function() {}, l)) ? s instanceof Node ? (h ? u.table.modules.localize.bind("headerFilters|columns|" + e.definition.field, function(e) {
                        s.setAttribute("placeholder", void 0 !== e && e ? e : u.table.modules.localize.getText("headerFilters|default"));
                    }) : u.table.modules.localize.bind("headerFilters|default", function(e) {
                        s.setAttribute("placeholder", void 0 !== u.column.definition.headerFilterPlaceholder && u.column.definition.headerFilterPlaceholder ? u.column.definition.headerFilterPlaceholder : e);
                    }), s.addEventListener("click", function(e) {
                        e.stopPropagation(), s.focus();
                    }), s.addEventListener("focus", function(e) {
                        var t = c.table.columnManager.element.scrollLeft;
                        t !== c.table.rowManager.element.scrollLeft && (c.table.rowManager.scrollHorizontal(t), 
                        c.table.columnManager.scrollHorizontal(t));
                    }), r = !1, a = function(e) {
                        r && clearTimeout(r), r = setTimeout(function() {
                            d(s.value);
                        }, u.table.options.headerFilterLiveFilterDelay);
                    }, e.modules.filter.headerElement = s, e.modules.filter.attrType = s.hasAttribute("type") ? s.getAttribute("type").toLowerCase() : "", 
                    e.modules.filter.tagType = s.tagName.toLowerCase(), !1 !== e.definition.headerFilterLiveFilter && ("autocomplete" !== e.definition.headerFilter && "tickCross" !== e.definition.headerFilter && ("autocomplete" !== e.definition.editor && "tickCross" !== e.definition.editor || !0 !== e.definition.headerFilter) && (s.addEventListener("keyup", a), 
                    s.addEventListener("search", a), "number" == e.modules.filter.attrType && s.addEventListener("change", function(e) {
                        d(s.value);
                    }), "text" == e.modules.filter.attrType) && "ie" !== this.table.browser && s.setAttribute("type", "search"), 
                    "input" != e.modules.filter.tagType && "select" != e.modules.filter.tagType && "textarea" != e.modules.filter.tagType || s.addEventListener("mousedown", function(e) {
                        e.stopPropagation();
                    })), i.appendChild(s), e.contentElement.appendChild(i), o || u.headerFilterColumns.push(e)) : console.warn("Filter Error - Cannot add filter to " + h + " column, editor should return an instance of Node, the editor returned:", s) : console.warn("Filter Error - Cannot add filter to " + h + " column, editor returned a value of false"));
                } else console.warn("Filter Error - Cannot add header filter, column has no field set:", e.definition.title);
            }, p.prototype.hideHeaderFilterElements = function() {
                this.headerFilterColumns.forEach(function(e) {
                    e.modules.filter && e.modules.filter.headerElement && (e.modules.filter.headerElement.style.display = "none");
                });
            }, p.prototype.showHeaderFilterElements = function() {
                this.headerFilterColumns.forEach(function(e) {
                    e.modules.filter && e.modules.filter.headerElement && (e.modules.filter.headerElement.style.display = "");
                });
            }, p.prototype.setHeaderFilterFocus = function(e) {
                e.modules.filter && e.modules.filter.headerElement ? e.modules.filter.headerElement.focus() : console.warn("Column Filter Focus Error - No header filter set on column:", e.getField());
            }, p.prototype.getHeaderFilterValue = function(e) {
                if (e.modules.filter && e.modules.filter.headerElement) return e.modules.filter.headerElement.value;
                console.warn("Column Filter Error - No header filter set on column:", e.getField());
            }, p.prototype.setHeaderFilterValue = function(e, t) {
                e && (e.modules.filter && e.modules.filter.headerElement ? (this.generateHeaderFilterElement(e, t, !0), 
                e.modules.filter.success(t)) : console.warn("Column Filter Error - No header filter set on column:", e.getField()));
            }, p.prototype.reloadHeaderFilter = function(e) {
                e && (e.modules.filter && e.modules.filter.headerElement ? this.generateHeaderFilterElement(e, e.modules.filter.value, !0) : console.warn("Column Filter Error - No header filter set on column:", e.getField()));
            }, p.prototype.hasChanged = function() {
                var e = this.changed;
                return this.changed = !1, e;
            }, p.prototype.setFilter = function(e, t, o, i) {
                this.filterList = [], Array.isArray(e) || (e = [ {
                    field: e,
                    type: t,
                    value: o,
                    params: i
                } ]), this.addFilter(e);
            }, p.prototype.addFilter = function(e, t, o, i) {
                var n = this;
                (e = Array.isArray(e) ? e : [ {
                    field: e,
                    type: t,
                    value: o,
                    params: i
                } ]).forEach(function(e) {
                    (e = n.findFilter(e)) && (n.filterList.push(e), n.changed = !0);
                }), this.table.options.persistence && this.table.modExists("persistence", !0) && this.table.modules.persistence.config.filter && this.table.modules.persistence.save("filter");
            }, p.prototype.findFilter = function(t) {
                var o, e, i = this;
                return Array.isArray(t) ? this.findSubFilters(t) : (e = !1, "function" == typeof t.field ? e = function(e) {
                    return t.field(e, t.type || {});
                } : i.filters[t.type] ? e = (o = i.table.columnManager.getColumnByField(t.field)) ? function(e) {
                    return i.filters[t.type](t.value, o.getFieldValue(e), e, t.params || {});
                } : function(e) {
                    return i.filters[t.type](t.value, e[t.field], e, t.params || {});
                } : console.warn("Filter Error - No such filter type found, ignoring: ", t.type), 
                t.func = e, !!t.func && t);
            }, p.prototype.findSubFilters = function(e) {
                var t = this, o = [];
                return e.forEach(function(e) {
                    (e = t.findFilter(e)) && o.push(e);
                }), !!o.length && o;
            }, p.prototype.getFilters = function(e, t) {
                var o = [];
                return e && (o = this.getHeaderFilters()), t && o.forEach(function(e) {
                    "function" == typeof e.type && (e.type = "function");
                }), o = o.concat(this.filtersToArray(this.filterList, t));
            }, p.prototype.filtersToArray = function(e, t) {
                var o = this, i = [];
                return e.forEach(function(e) {
                    Array.isArray(e) ? i.push(o.filtersToArray(e, t)) : (e = {
                        field: e.field,
                        type: e.type,
                        value: e.value
                    }, t && "function" == typeof e.type && (e.type = "function"), 
                    i.push(e));
                }), i;
            }, p.prototype.getHeaderFilters = function() {
                var e, t = [];
                for (e in this.headerFilters) t.push({
                    field: e,
                    type: this.headerFilters[e].type,
                    value: this.headerFilters[e].value
                });
                return t;
            }, p.prototype.removeFilter = function(e, t, o) {
                var i = this;
                (e = Array.isArray(e) ? e : [ {
                    field: e,
                    type: t,
                    value: o
                } ]).forEach(function(t) {
                    var e = -1;
                    -1 < (e = "object" == Q(t.field) ? i.filterList.findIndex(function(e) {
                        return t === e;
                    }) : i.filterList.findIndex(function(e) {
                        return t.field === e.field && t.type === e.type && t.value === e.value;
                    })) ? (i.filterList.splice(e, 1), i.changed = !0) : console.warn("Filter Error - No matching filter type found, ignoring: ", t.type);
                }), this.table.options.persistence && this.table.modExists("persistence", !0) && this.table.modules.persistence.config.filter && this.table.modules.persistence.save("filter");
            }, p.prototype.clearFilter = function(e) {
                this.filterList = [], e && this.clearHeaderFilter(), this.changed = !0, 
                this.table.options.persistence && this.table.modExists("persistence", !0) && this.table.modules.persistence.config.filter && this.table.modules.persistence.save("filter");
            }, p.prototype.clearHeaderFilter = function() {
                var t = this;
                this.headerFilters = {}, t.prevHeaderFilterChangeCheck = "{}", this.headerFilterColumns.forEach(function(e) {
                    void 0 !== e.modules.filter.value && delete e.modules.filter.value, 
                    e.modules.filter.prevSuccess = void 0, t.reloadHeaderFilter(e);
                }), this.changed = !0;
            }, p.prototype.search = function(e, t, o, i) {
                var n = this, s = [], r = [];
                return (t = Array.isArray(t) ? t : [ {
                    field: t,
                    type: o,
                    value: i
                } ]).forEach(function(e) {
                    (e = n.findFilter(e)) && r.push(e);
                }), this.table.rowManager.rows.forEach(function(t) {
                    var o = !0;
                    r.forEach(function(e) {
                        n.filterRecurse(e, t.getData()) || (o = !1);
                    }), o && s.push("data" === e ? t.getData("data") : t.getComponent());
                }), s;
            }, p.prototype.filter = function(e, t) {
                var o = this, i = [], n = [];
                return o.table.options.dataFiltering && o.table.options.dataFiltering.call(o.table, o.getFilters()), 
                o.table.options.ajaxFiltering || !o.filterList.length && !Object.keys(o.headerFilters).length ? i = e.slice(0) : e.forEach(function(e) {
                    o.filterRow(e) && i.push(e);
                }), o.table.options.dataFiltered && (i.forEach(function(e) {
                    n.push(e.getComponent());
                }), o.table.options.dataFiltered.call(o.table, o.getFilters(), n)), 
                i;
            }, p.prototype.filterRow = function(e, t) {
                var o, i = this, n = !0, s = e.getData();
                for (o in i.filterList.forEach(function(e) {
                    i.filterRecurse(e, s) || (n = !1);
                }), i.headerFilters) i.headerFilters[o].func(s) || (n = !1);
                return n;
            }, p.prototype.filterRecurse = function(e, t) {
                var o = this, i = !1;
                return Array.isArray(e) ? e.forEach(function(e) {
                    o.filterRecurse(e, t) && (i = !0);
                }) : i = e.func(t), i;
            }, p.prototype.filters = {
                "=": function(e, t, o, i) {
                    return t == e;
                },
                "<": function(e, t, o, i) {
                    return t < e;
                },
                "<=": function(e, t, o, i) {
                    return t <= e;
                },
                ">": function(e, t, o, i) {
                    return e < t;
                },
                ">=": function(e, t, o, i) {
                    return e <= t;
                },
                "!=": function(e, t, o, i) {
                    return t != e;
                },
                regex: function(e, t, o, i) {
                    return (e = "string" == typeof e ? new RegExp(e) : e).test(t);
                },
                like: function(e, t, o, i) {
                    return null == e ? t === e : null != t && -1 < String(t).toLowerCase().indexOf(e.toLowerCase());
                },
                keywords: function(e, t, o, i) {
                    var e = e.toLowerCase().split(void 0 === i.separator ? " " : i.separator), n = String(null == t ? "" : t).toLowerCase(), s = [];
                    return e.forEach(function(e) {
                        n.includes(e) && s.push(!0);
                    }), i.matchAll ? s.length === e.length : !!s.length;
                },
                starts: function(e, t, o, i) {
                    return null == e ? t === e : null != t && String(t).toLowerCase().startsWith(e.toLowerCase());
                },
                ends: function(e, t, o, i) {
                    return null == e ? t === e : null != t && String(t).toLowerCase().endsWith(e.toLowerCase());
                },
                in: function(e, t, o, i) {
                    return Array.isArray(e) ? !e.length || -1 < e.indexOf(t) : (console.warn("Filter Error - filter value is not an array:", e), 
                    !1);
                }
            }, N.prototype.registerModule("filter", p), m.prototype.initializeColumn = function(e) {
                e.modules.format = this.lookupFormatter(e, ""), void 0 !== e.definition.formatterPrint && (e.modules.format.print = this.lookupFormatter(e, "Print")), 
                void 0 !== e.definition.formatterClipboard && (e.modules.format.clipboard = this.lookupFormatter(e, "Clipboard")), 
                void 0 !== e.definition.formatterHtmlOutput && (e.modules.format.htmlOutput = this.lookupFormatter(e, "HtmlOutput"));
            }, m.prototype.lookupFormatter = function(e, t) {
                var o = {
                    params: e.definition["formatter" + t + "Params"] || {}
                }, i = e.definition["formatter" + t];
                switch (void 0 === i ? "undefined" : Q(i)) {
                  case "string":
                    "tick" === i && (i = "tickCross", void 0 === o.params.crossElement && (o.params.crossElement = !1), 
                    console.warn("DEPRECATION WARNING - the tick formatter has been deprecated, please use the tickCross formatter with the crossElement param set to false")), 
                    this.formatters[i] ? o.formatter = this.formatters[i] : (console.warn("Formatter Error - No such formatter found: ", i), 
                    o.formatter = this.formatters.plaintext);
                    break;

                  case "function":
                    o.formatter = i;
                    break;

                  default:
                    o.formatter = this.formatters.plaintext;
                }
                return o;
            }, m.prototype.cellRendered = function(e) {
                e.modules.format && e.modules.format.renderedCallback && !e.modules.format.rendered && (e.modules.format.renderedCallback(), 
                e.modules.format.rendered = !0);
            }, m.prototype.formatValue = function(t) {
                var e = t.getComponent(), o = "function" == typeof t.column.modules.format.params ? t.column.modules.format.params(e) : t.column.modules.format.params;
                return t.column.modules.format.formatter.call(this, e, o, function(e) {
                    t.modules.format || (t.modules.format = {}), t.modules.format.renderedCallback = e, 
                    t.modules.format.rendered = !1;
                });
            }, m.prototype.formatExportValue = function(t, e) {
                var o, e = t.column.modules.format[e];
                return e ? (o = "function" == typeof e.params ? e.params(component) : e.params, 
                e.formatter.call(this, t.getComponent(), o, function(e) {
                    t.modules.format || (t.modules.format = {}), t.modules.format.renderedCallback = e, 
                    t.modules.format.rendered = !1;
                })) : this.formatValue(t);
            }, m.prototype.sanitizeHTML = function(e) {
                var t;
                return e && (t = {
                    "&": "&amp;",
                    "<": "&lt;",
                    ">": "&gt;",
                    '"': "&quot;",
                    "'": "&#39;",
                    "/": "&#x2F;",
                    "`": "&#x60;",
                    "=": "&#x3D;"
                }, String(e).replace(/[&<>"'`=\/]/g, function(e) {
                    return t[e];
                }));
            }, m.prototype.emptyToSpace = function(e) {
                return null == e || "" === e ? "&nbsp;" : e;
            }, m.prototype.getFormatter = function(e) {
                switch (void 0 === e ? "undefined" : Q(e)) {
                  case "string":
                    e = this.formatters[e] || (console.warn("Formatter Error - No such formatter found: ", e), 
                    this.formatters.plaintext);
                    break;

                  case "function":
                    break;

                  default:
                    e = this.formatters.plaintext;
                }
                return e;
            }, m.prototype.formatters = {
                plaintext: function(e, t, o) {
                    return this.emptyToSpace(this.sanitizeHTML(e.getValue()));
                },
                html: function(e, t, o) {
                    return e.getValue();
                },
                textarea: function(e, t, o) {
                    return e.getElement().style.whiteSpace = "pre-wrap", this.emptyToSpace(this.sanitizeHTML(e.getValue()));
                },
                money: function(e, t, o) {
                    var i, n, s = parseFloat(e.getValue()), r = t.decimal || ".", a = t.thousand || ",", l = t.symbol || "", c = !!t.symbolAfter, t = void 0 !== t.precision ? t.precision : 2;
                    if (isNaN(s)) return this.emptyToSpace(this.sanitizeHTML(e.getValue()));
                    for (e = !1 !== t ? s.toFixed(t) : s, i = (e = String(e).split("."))[0], 
                    t = 1 < e.length ? r + e[1] : "", n = /(\d+)(\d{3})/; n.test(i); ) i = i.replace(n, "$1" + a + "$2");
                    return c ? i + t + l : l + i + t;
                },
                link: function(e, t, o) {
                    var i = e.getValue(), n = t.urlPrefix || "", s = t.download, r = i, a = document.createElement("a");
                    if (t.labelField && (r = e.getData()[t.labelField]), t.label) switch (Q(t.label)) {
                      case "string":
                        r = t.label;
                        break;

                      case "function":
                        r = t.label(e);
                    }
                    if (r) {
                        if (t.urlField && (i = e.getData()[t.urlField]), t.url) switch (Q(t.url)) {
                          case "string":
                            i = t.url;
                            break;

                          case "function":
                            i = t.url(e);
                        }
                        return a.setAttribute("href", n + i), t.target && a.setAttribute("target", t.target), 
                        t.download && (s = "function" == typeof s ? s(e) : !0 === s ? "" : s, 
                        a.setAttribute("download", s)), a.innerHTML = this.emptyToSpace(this.sanitizeHTML(r)), 
                        a;
                    }
                    return "&nbsp;";
                },
                image: function(e, t, o) {
                    var i = document.createElement("img"), n = e.getValue();
                    switch (t.urlPrefix && (n = t.urlPrefix + e.getValue()), t.urlSuffix && (n += t.urlSuffix), 
                    i.setAttribute("src", n), Q(t.height)) {
                      case "number":
                        i.style.height = t.height + "px";
                        break;

                      case "string":
                        i.style.height = t.height;
                    }
                    switch (Q(t.width)) {
                      case "number":
                        i.style.width = t.width + "px";
                        break;

                      case "string":
                        i.style.width = t.width;
                    }
                    return i.addEventListener("load", function() {
                        e.getRow().normalizeHeight();
                    }), i;
                },
                tickCross: function(e, t, o) {
                    var i = e.getValue(), e = e.getElement(), n = t.allowEmpty, s = t.allowTruthy, r = void 0 !== t.tickElement ? t.tickElement : '<svg enable-background="new 0 0 24 24" height="14" width="14" viewBox="0 0 24 24" xml:space="preserve" ><path fill="#2DC214" clip-rule="evenodd" d="M21.652,3.211c-0.293-0.295-0.77-0.295-1.061,0L9.41,14.34  c-0.293,0.297-0.771,0.297-1.062,0L3.449,9.351C3.304,9.203,3.114,9.13,2.923,9.129C2.73,9.128,2.534,9.201,2.387,9.351  l-2.165,1.946C0.078,11.445,0,11.63,0,11.823c0,0.194,0.078,0.397,0.223,0.544l4.94,5.184c0.292,0.296,0.771,0.776,1.062,1.07  l2.124,2.141c0.292,0.293,0.769,0.293,1.062,0l14.366-14.34c0.293-0.294,0.293-0.777,0-1.071L21.652,3.211z" fill-rule="evenodd"/></svg>', t = void 0 !== t.crossElement ? t.crossElement : '<svg enable-background="new 0 0 24 24" height="14" width="14"  viewBox="0 0 24 24" xml:space="preserve" ><path fill="#CE1515" d="M22.245,4.015c0.313,0.313,0.313,0.826,0,1.139l-6.276,6.27c-0.313,0.312-0.313,0.826,0,1.14l6.273,6.272  c0.313,0.313,0.313,0.826,0,1.14l-2.285,2.277c-0.314,0.312-0.828,0.312-1.142,0l-6.271-6.271c-0.313-0.313-0.828-0.313-1.141,0  l-6.276,6.267c-0.313,0.313-0.828,0.313-1.141,0l-2.282-2.28c-0.313-0.313-0.313-0.826,0-1.14l6.278-6.269  c0.313-0.312,0.313-0.826,0-1.14L1.709,5.147c-0.314-0.313-0.314-0.827,0-1.14l2.284-2.278C4.308,1.417,4.821,1.417,5.135,1.73  L11.405,8c0.314,0.314,0.828,0.314,1.141,0.001l6.276-6.267c0.312-0.312,0.826-0.312,1.141,0L22.245,4.015z"/></svg>';
                    return s && i || !0 === i || "true" === i || "True" === i || 1 === i || "1" === i ? (e.setAttribute("aria-checked", !0), 
                    r || "") : !n || "null" !== i && "" !== i && null != i ? (e.setAttribute("aria-checked", !1), 
                    t || "") : (e.setAttribute("aria-checked", "mixed"), "");
                },
                datetime: function(e, t, o) {
                    var i = t.inputFormat || "YYYY-MM-DD hh:mm:ss", n = t.outputFormat || "DD/MM/YYYY hh:mm:ss", s = void 0 !== t.invalidPlaceholder ? t.invalidPlaceholder : "", e = e.getValue(), i = moment(e, i);
                    return i.isValid() ? (t.timezone ? i.tz(t.timezone) : i).format(n) : !0 === s ? e : "function" == typeof s ? s(e) : s;
                },
                datetimediff: function(e, t, o) {
                    var i = t.inputFormat || "YYYY-MM-DD hh:mm:ss", n = void 0 !== t.invalidPlaceholder ? t.invalidPlaceholder : "", s = void 0 !== t.suffix && t.suffix, r = void 0 !== t.unit ? t.unit : void 0, a = void 0 !== t.humanize && t.humanize, t = void 0 !== t.date ? t.date : moment(), e = e.getValue(), i = moment(e, i);
                    return i.isValid() ? a ? moment.duration(i.diff(t)).humanize(s) : i.diff(t, r) + (s ? " " + s : "") : !0 === n ? e : "function" == typeof n ? n(e) : n;
                },
                lookup: function(e, t, o) {
                    e = e.getValue();
                    return void 0 === t[e] ? (console.warn("Missing display value for " + e), 
                    e) : t[e];
                },
                star: function(e, t, o) {
                    var i = e.getValue(), e = e.getElement(), n = t && t.stars ? t.stars : 5, s = document.createElement("span"), r = document.createElementNS("http://www.w3.org/2000/svg", "svg");
                    s.style.verticalAlign = "middle", r.setAttribute("width", "14"), 
                    r.setAttribute("height", "14"), r.setAttribute("viewBox", "0 0 512 512"), 
                    r.setAttribute("xml:space", "preserve"), r.style.padding = "0 1px", 
                    i = i && !isNaN(i) ? parseInt(i) : 0;
                    for (var i = Math.max(0, Math.min(i, n)), a = 1; a <= n; a++) {
                        var l = r.cloneNode(!0);
                        l.innerHTML = a <= i ? '<polygon fill="#FFEA00" stroke="#C1AB60" stroke-width="37.6152" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 "/>' : '<polygon fill="#D2D2D2" stroke="#686868" stroke-width="37.6152" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 "/>', 
                        s.appendChild(l);
                    }
                    return e.style.whiteSpace = "nowrap", e.style.overflow = "hidden", 
                    e.style.textOverflow = "ellipsis", e.setAttribute("aria-label", i), 
                    s;
                },
                traffic: function(e, t, o) {
                    var i, n, s = this.sanitizeHTML(e.getValue()) || 0, r = document.createElement("span"), a = t && t.max ? t.max : 100, l = t && t.min ? t.min : 0, c = t && void 0 !== t.color ? t.color : [ "red", "orange", "green" ], u = "#666666";
                    if (!isNaN(s) && void 0 !== e.getValue()) {
                        switch (r.classList.add("tabulator-traffic-light"), i = parseFloat(s) <= a ? parseFloat(s) : a, 
                        i = parseFloat(i) >= l ? parseFloat(i) : l, i = Math.round((i - l) / ((a - l) / 100)), 
                        void 0 === c ? "undefined" : Q(c)) {
                          case "string":
                            u = c;
                            break;

                          case "function":
                            u = c(s);
                            break;

                          case "object":
                            Array.isArray(c) && (n = 100 / c.length, n = Math.floor(i / n), 
                            n = Math.min(n, c.length - 1), u = c[n = Math.max(n, 0)]);
                        }
                        return r.style.backgroundColor = u, r;
                    }
                },
                progress: function(t, e, o) {
                    var i, n, s, r = this.sanitizeHTML(t.getValue()) || 0, a = t.getElement(), l = e && e.max ? e.max : 100, c = e && e.min ? e.min : 0, u = e && e.legendAlign ? e.legendAlign : "center", d = parseFloat(r) <= l ? parseFloat(r) : l;
                    switch (d = parseFloat(d) >= c ? parseFloat(d) : c, d = Math.round((d - c) / ((l - c) / 100)), 
                    Q(e.color)) {
                      case "string":
                        i = e.color;
                        break;

                      case "function":
                        i = e.color(r);
                        break;

                      case "object":
                        if (Array.isArray(e.color)) {
                            var h = 100 / e.color.length, p = Math.floor(d / h);
                            p = Math.min(p, e.color.length - 1), p = Math.max(p, 0), 
                            i = e.color[p];
                            break;
                        }

                      default:
                        i = "#2DC214";
                    }
                    switch (Q(e.legend)) {
                      case "string":
                        n = e.legend;
                        break;

                      case "function":
                        n = e.legend(r);
                        break;

                      case "boolean":
                        n = r;
                        break;

                      default:
                        n = !1;
                    }
                    switch (Q(e.legendColor)) {
                      case "string":
                        s = e.legendColor;
                        break;

                      case "function":
                        s = e.legendColor(r);
                        break;

                      case "object":
                        Array.isArray(e.legendColor) && (h = 100 / e.legendColor.length, 
                        p = Math.floor(d / h), p = Math.min(p, e.legendColor.length - 1), 
                        p = Math.max(p, 0), s = e.legendColor[p]);
                        break;

                      default:
                        s = "#000";
                    }
                    a.style.minWidth = "30px", a.style.position = "relative", a.setAttribute("aria-label", d);
                    var m, f = document.createElement("div");
                    return f.style.display = "inline-block", f.style.position = "relative", 
                    f.style.width = d + "%", f.style.backgroundColor = i, f.style.height = "100%", 
                    f.setAttribute("data-max", l), f.setAttribute("data-min", c), 
                    n && ((m = document.createElement("div")).style.position = "absolute", 
                    m.style.top = "4px", m.style.left = 0, m.style.textAlign = u, 
                    m.style.width = "100%", m.style.color = s, m.innerHTML = n), 
                    o(function() {
                        var e;
                        t instanceof g || ((e = document.createElement("div")).style.position = "absolute", 
                        e.style.top = "4px", e.style.bottom = "4px", e.style.left = "4px", 
                        e.style.right = "4px", a.appendChild(e), a = e), a.appendChild(f), 
                        n && a.appendChild(m);
                    }), "";
                },
                color: function(e, t, o) {
                    return e.getElement().style.backgroundColor = this.sanitizeHTML(e.getValue()), 
                    "";
                },
                buttonTick: function(e, t, o) {
                    return '<svg enable-background="new 0 0 24 24" height="14" width="14" viewBox="0 0 24 24" xml:space="preserve" ><path fill="#2DC214" clip-rule="evenodd" d="M21.652,3.211c-0.293-0.295-0.77-0.295-1.061,0L9.41,14.34  c-0.293,0.297-0.771,0.297-1.062,0L3.449,9.351C3.304,9.203,3.114,9.13,2.923,9.129C2.73,9.128,2.534,9.201,2.387,9.351  l-2.165,1.946C0.078,11.445,0,11.63,0,11.823c0,0.194,0.078,0.397,0.223,0.544l4.94,5.184c0.292,0.296,0.771,0.776,1.062,1.07  l2.124,2.141c0.292,0.293,0.769,0.293,1.062,0l14.366-14.34c0.293-0.294,0.293-0.777,0-1.071L21.652,3.211z" fill-rule="evenodd"/></svg>';
                },
                buttonCross: function(e, t, o) {
                    return '<svg enable-background="new 0 0 24 24" height="14" width="14" viewBox="0 0 24 24" xml:space="preserve" ><path fill="#CE1515" d="M22.245,4.015c0.313,0.313,0.313,0.826,0,1.139l-6.276,6.27c-0.313,0.312-0.313,0.826,0,1.14l6.273,6.272  c0.313,0.313,0.313,0.826,0,1.14l-2.285,2.277c-0.314,0.312-0.828,0.312-1.142,0l-6.271-6.271c-0.313-0.313-0.828-0.313-1.141,0  l-6.276,6.267c-0.313,0.313-0.828,0.313-1.141,0l-2.282-2.28c-0.313-0.313-0.313-0.826,0-1.14l6.278-6.269  c0.313-0.312,0.313-0.826,0-1.14L1.709,5.147c-0.314-0.313-0.314-0.827,0-1.14l2.284-2.278C4.308,1.417,4.821,1.417,5.135,1.73  L11.405,8c0.314,0.314,0.828,0.314,1.141,0.001l6.276-6.267c0.312-0.312,0.826-0.312,1.141,0L22.245,4.015z"/></svg>';
                },
                rownum: function(e, t, o) {
                    return this.table.rowManager.activeRows.indexOf(e.getRow()._getSelf()) + 1;
                },
                handle: function(e, t, o) {
                    return e.getElement().classList.add("tabulator-row-handle"), 
                    "<div class='tabulator-row-handle-box'><div class='tabulator-row-handle-bar'></div><div class='tabulator-row-handle-bar'></div><div class='tabulator-row-handle-bar'></div></div>";
                },
                responsiveCollapse: function(e, t, o) {
                    var i = document.createElement("div"), n = e.getRow()._row.modules.responsiveLayout;
                    function s(e) {
                        var t = n.element;
                        n.open = e, t && (n.open ? (i.classList.add("open"), t.style.display = "") : (i.classList.remove("open"), 
                        t.style.display = "none"));
                    }
                    return i.classList.add("tabulator-responsive-collapse-toggle"), 
                    i.innerHTML = "<span class='tabulator-responsive-collapse-toggle-open'>+</span><span class='tabulator-responsive-collapse-toggle-close'>-</span>", 
                    e.getElement().classList.add("tabulator-row-handle"), i.addEventListener("click", function(e) {
                        e.stopImmediatePropagation(), s(!n.open);
                    }), s(n.open), i;
                },
                rowSelection: function(e, t, o) {
                    var i, n = this, s = document.createElement("input");
                    return s.type = "checkbox", this.table.modExists("selectRow", !0) && (s.addEventListener("click", function(e) {
                        e.stopPropagation();
                    }), "function" == typeof e.getRow ? (i = e.getRow()) instanceof O ? (s.addEventListener("change", function(e) {
                        i.toggleSelect();
                    }), s.checked = i.isSelected && i.isSelected(), this.table.modules.selectRow.registerRowSelectCheckbox(i, s)) : s = "" : (s.addEventListener("change", function(e) {
                        n.table.modules.selectRow.selectedRows.length ? n.table.deselectRow() : n.table.selectRow(t.rowRange);
                    }), this.table.modules.selectRow.registerHeaderSelectCheckbox(s))), 
                    s;
                }
            }, N.prototype.registerModule("format", m), f.prototype.reset = function() {
                this.initializationMode = "left", this.leftColumns = [], this.rightColumns = [], 
                this.leftMargin = 0, this.rightMargin = 0, this.rightMargin = 0, 
                this.active = !1, this.table.columnManager.headersElement.style.marginLeft = 0, 
                this.table.columnManager.element.style.paddingRight = 0;
            }, f.prototype.initializeColumn = function(e) {
                var t = {
                    margin: 0,
                    edge: !1
                };
                e.isGroup || (this.frozenCheck(e) ? (t.position = this.initializationMode, 
                "left" == this.initializationMode ? this.leftColumns.push(e) : this.rightColumns.unshift(e), 
                this.active = !0, e.modules.frozen = t) : this.initializationMode = "right");
            }, f.prototype.frozenCheck = function(e) {
                return e.parent.isGroup && e.definition.frozen && console.warn("Frozen Column Error - Parent column group must be frozen, not individual columns or sub column groups"), 
                e.parent.isGroup ? this.frozenCheck(e.parent) : e.definition.frozen;
            }, f.prototype.scrollHorizontal = function() {
                var e, t = this;
                this.active && (clearTimeout(this.scrollEndTimer), this.scrollEndTimer = setTimeout(function() {
                    t.layout();
                }, 100), e = this.table.rowManager.getVisibleRows(), this.calcMargins(), 
                this.layoutColumnPosition(), this.layoutCalcRows(), e.forEach(function(e) {
                    "row" === e.type && t.layoutRow(e);
                }), this.table.rowManager.tableElement.style.marginRight = this.rightMargin);
            }, f.prototype.calcMargins = function() {
                this.leftMargin = this._calcSpace(this.leftColumns, this.leftColumns.length) + "px", 
                this.table.columnManager.headersElement.style.marginLeft = this.leftMargin, 
                this.rightMargin = this._calcSpace(this.rightColumns, this.rightColumns.length) + "px", 
                this.table.columnManager.element.style.paddingRight = this.rightMargin, 
                this.rightPadding = this.table.rowManager.element.clientWidth + this.table.columnManager.scrollLeft;
            }, f.prototype.layoutCalcRows = function() {
                this.table.modExists("columnCalcs") && (this.table.modules.columnCalcs.topInitialized && this.table.modules.columnCalcs.topRow && this.layoutRow(this.table.modules.columnCalcs.topRow), 
                this.table.modules.columnCalcs.botInitialized) && this.table.modules.columnCalcs.botRow && this.layoutRow(this.table.modules.columnCalcs.botRow);
            }, f.prototype.layoutColumnPosition = function(o) {
                var i = this, n = [];
                this.leftColumns.forEach(function(t, e) {
                    t.modules.frozen.margin = i._calcSpace(i.leftColumns, e) + i.table.columnManager.scrollLeft + "px", 
                    e == i.leftColumns.length - 1 ? t.modules.frozen.edge = !0 : t.modules.frozen.edge = !1, 
                    t.parent.isGroup ? (e = i.getColGroupParentElement(t), n.includes(e) || (i.layoutElement(e, t), 
                    n.push(e)), t.modules.frozen.edge && e.classList.add("tabulator-frozen-" + t.modules.frozen.position)) : i.layoutElement(t.getElement(), t), 
                    o && t.cells.forEach(function(e) {
                        i.layoutElement(e.getElement(!0), t);
                    });
                }), this.rightColumns.forEach(function(t, e) {
                    t.modules.frozen.margin = i.rightPadding - i._calcSpace(i.rightColumns, e + 1) + "px", 
                    e == i.rightColumns.length - 1 ? t.modules.frozen.edge = !0 : t.modules.frozen.edge = !1, 
                    t.parent.isGroup ? i.layoutElement(i.getColGroupParentElement(t), t) : i.layoutElement(t.getElement(), t), 
                    o && t.cells.forEach(function(e) {
                        i.layoutElement(e.getElement(!0), t);
                    });
                });
            }, f.prototype.getColGroupParentElement = function(e) {
                return e.parent.isGroup ? this.getColGroupParentElement(e.parent) : e.getElement();
            }, f.prototype.layout = function() {
                var t = this;
                t.active && (this.calcMargins(), t.table.rowManager.getDisplayRows().forEach(function(e) {
                    "row" === e.type && t.layoutRow(e);
                }), this.layoutCalcRows(), this.layoutColumnPosition(!0), this.table.rowManager.tableElement.style.marginRight = this.rightMargin);
            }, f.prototype.layoutRow = function(o) {
                var i = this;
                o.getElement().style.paddingLeft = this.leftMargin, this.leftColumns.forEach(function(e) {
                    var t = o.getCell(e);
                    t && i.layoutElement(t.getElement(!0), e);
                }), this.rightColumns.forEach(function(e) {
                    var t = o.getCell(e);
                    t && i.layoutElement(t.getElement(!0), e);
                });
            }, f.prototype.layoutElement = function(e, t) {
                t.modules.frozen && (e.style.position = "absolute", e.style.left = t.modules.frozen.margin, 
                e.classList.add("tabulator-frozen"), t.modules.frozen.edge) && e.classList.add("tabulator-frozen-" + t.modules.frozen.position);
            }, f.prototype._calcSpace = function(e, t) {
                for (var o = 0, i = 0; i < t; i++) e[i].visible && (o += e[i].getWidth());
                return o;
            }, N.prototype.registerModule("frozenColumns", f), b.prototype.initialize = function() {
                this.rows = [], this.topElement.classList.add("tabulator-frozen-rows-holder"), 
                this.table.columnManager.getElement().insertBefore(this.topElement, this.table.columnManager.headersElement.nextSibling);
            }, b.prototype.setDisplayIndex = function(e) {
                this.displayIndex = e;
            }, b.prototype.getDisplayIndex = function() {
                return this.displayIndex;
            }, b.prototype.isFrozen = function() {
                return !!this.rows.length;
            }, b.prototype.getRows = function(e) {
                var t = e.slice(0);
                return this.rows.forEach(function(e) {
                    e = t.indexOf(e);
                    -1 < e && t.splice(e, 1);
                }), t;
            }, b.prototype.freezeRow = function(e) {
                e.modules.frozen ? console.warn("Freeze Error - Row is already frozen") : (e.modules.frozen = !0, 
                this.topElement.appendChild(e.getElement()), e.initialize(), e.normalizeHeight(), 
                this.table.rowManager.adjustTableSize(), this.rows.push(e), this.table.rowManager.refreshActiveData("display"), 
                this.styleRows());
            }, b.prototype.unfreezeRow = function(e) {
                this.rows.indexOf(e);
                e.modules.frozen ? (e.modules.frozen = !1, this.detachRow(e), this.table.rowManager.adjustTableSize(), 
                this.table.rowManager.refreshActiveData("display"), this.rows.length && this.styleRows()) : console.warn("Freeze Error - Row is already unfrozen");
            }, b.prototype.detachRow = function(e) {
                var t = this.rows.indexOf(e);
                -1 < t && ((e = e.getElement()).parentNode.removeChild(e), this.rows.splice(t, 1));
            }, b.prototype.styleRows = function(e) {
                var o = this;
                this.rows.forEach(function(e, t) {
                    o.table.rowManager.styleRow(e, t);
                });
            }, N.prototype.registerModule("frozenRows", b), v.prototype.getKey = function() {
                return this._group.key;
            }, v.prototype.getField = function() {
                return this._group.field;
            }, v.prototype.getElement = function() {
                return this._group.element;
            }, v.prototype.getRows = function() {
                return this._group.getRows(!0);
            }, v.prototype.getSubGroups = function() {
                return this._group.getSubGroups(!0);
            }, v.prototype.getParentGroup = function() {
                return !!this._group.parent && this._group.parent.getComponent();
            }, v.prototype.getVisibility = function() {
                return console.warn("getVisibility function is deprecated, you should now use the isVisible function"), 
                this._group.visible;
            }, v.prototype.isVisible = function() {
                return this._group.visible;
            }, v.prototype.show = function() {
                this._group.show();
            }, v.prototype.hide = function() {
                this._group.hide();
            }, v.prototype.toggle = function() {
                this._group.toggleVisibility();
            }, v.prototype._getSelf = function() {
                return this._group;
            }, v.prototype.getTable = function() {
                return this._group.groupManager.table;
            }, function(e, t, o, i, n, s, r) {
                this.groupManager = e, this.parent = t, this.key = i, this.level = o, 
                this.field = n, this.hasSubGroups = o < e.groupIDLookups.length - 1, 
                this.addRow = this.hasSubGroups ? this._addRowToGroup : this._addRow, 
                this.type = "group", this.old = r, this.rows = [], this.groups = [], 
                this.groupList = [], this.generator = s, this.elementContents = !1, 
                this.height = 0, this.outerHeight = 0, this.initialized = !1, this.calcs = {}, 
                this.initialized = !1, this.modules = {}, this.arrowElement = !1, 
                this.visible = r ? r.visible : void 0 !== e.startOpen[o] ? e.startOpen[o] : e.startOpen[0], 
                this.component = null, this.createElements(), this.addBindings(), 
                this.createValueGroups();
            });
            H.prototype.wipe = function() {
                this.groupList.length ? this.groupList.forEach(function(e) {
                    e.wipe();
                }) : (this.element = !1, this.arrowElement = !1, this.elementContents = !1);
            }, H.prototype.createElements = function() {
                var e = document.createElement("div");
                e.classList.add("tabulator-arrow"), this.element = document.createElement("div"), 
                this.element.classList.add("tabulator-row"), this.element.classList.add("tabulator-group"), 
                this.element.classList.add("tabulator-group-level-" + this.level), 
                this.element.setAttribute("role", "rowgroup"), this.arrowElement = document.createElement("div"), 
                this.arrowElement.classList.add("tabulator-group-toggle"), this.arrowElement.appendChild(e), 
                !1 !== this.groupManager.table.options.movableRows && this.groupManager.table.modExists("moveRow") && this.groupManager.table.modules.moveRow.initializeGroupHeader(this);
            }, H.prototype.createValueGroups = function() {
                var t = this, o = this.level + 1;
                this.groupManager.allowedValues && this.groupManager.allowedValues[o] && this.groupManager.allowedValues[o].forEach(function(e) {
                    t._createGroup(e, o);
                });
            }, H.prototype.addBindings = function() {
                var t, o, i, n = this;
                n.groupManager.table.options.groupClick && n.element.addEventListener("click", function(e) {
                    n.groupManager.table.options.groupClick.call(n.groupManager.table, e, n.getComponent());
                }), n.groupManager.table.options.groupDblClick && n.element.addEventListener("dblclick", function(e) {
                    n.groupManager.table.options.groupDblClick.call(n.groupManager.table, e, n.getComponent());
                }), n.groupManager.table.options.groupContext && n.element.addEventListener("contextmenu", function(e) {
                    n.groupManager.table.options.groupContext.call(n.groupManager.table, e, n.getComponent());
                }), (n.groupManager.table.options.groupContextMenu || n.groupManager.table.options.groupClickMenu) && n.groupManager.table.modExists("menu") && n.groupManager.table.modules.menu.initializeGroup.call(n.groupManager.table.modules.menu, n), 
                n.groupManager.table.options.groupTap && (i = !1, n.element.addEventListener("touchstart", function(e) {
                    i = !0;
                }, {
                    passive: !0
                }), n.element.addEventListener("touchend", function(e) {
                    i && n.groupManager.table.options.groupTap(e, n.getComponent()), 
                    i = !1;
                })), n.groupManager.table.options.groupDblTap && (t = null, n.element.addEventListener("touchend", function(e) {
                    t ? (clearTimeout(t), t = null, n.groupManager.table.options.groupDblTap(e, n.getComponent())) : t = setTimeout(function() {
                        clearTimeout(t), t = null;
                    }, 300);
                })), n.groupManager.table.options.groupTapHold && (o = null, n.element.addEventListener("touchstart", function(e) {
                    clearTimeout(o), o = setTimeout(function() {
                        clearTimeout(o), o = null, i = !1, n.groupManager.table.options.groupTapHold(e, n.getComponent());
                    }, 1e3);
                }, {
                    passive: !0
                }), n.element.addEventListener("touchend", function(e) {
                    clearTimeout(o), o = null;
                })), n.groupManager.table.options.groupToggleElement && ("arrow" == n.groupManager.table.options.groupToggleElement ? n.arrowElement : n.element).addEventListener("click", function(e) {
                    e.stopPropagation(), e.stopImmediatePropagation(), n.toggleVisibility();
                });
            }, H.prototype._createGroup = function(e, t) {
                var o = t + "_" + e, e = new H(this.groupManager, this, t, e, this.groupManager.groupIDLookups[t].field, this.groupManager.headerGenerator[t] || this.groupManager.headerGenerator[0], !!this.old && this.old.groups[o]);
                this.groups[o] = e, this.groupList.push(e);
            }, H.prototype._addRowToGroup = function(e) {
                var t, o, i = this.level + 1;
                this.hasSubGroups && (o = i + "_" + (t = this.groupManager.groupIDLookups[i].func(e.getData())), 
                this.groupManager.allowedValues && this.groupManager.allowedValues[i] ? this.groups[o] && this.groups[o].addRow(e) : (this.groups[o] || this._createGroup(t, i), 
                this.groups[o].addRow(e)));
            }, H.prototype._addRow = function(e) {
                this.rows.push(e), e.modules.group = this;
            }, H.prototype.insertRow = function(e, t, o) {
                var i = this.conformRowData({}), i = (e.updateData(i), this.rows.indexOf(t));
                -1 < i ? o ? this.rows.splice(i + 1, 0, e) : this.rows.splice(i, 0, e) : o ? this.rows.push(e) : this.rows.unshift(e), 
                (e.modules.group = this).generateGroupHeaderContents(), this.groupManager.table.modExists("columnCalcs") && "table" != this.groupManager.table.options.columnCalcs && this.groupManager.table.modules.columnCalcs.recalcGroup(this), 
                this.groupManager.updateGroupRows(!0);
            }, H.prototype.scrollHeader = function(t) {
                this.arrowElement.style.marginLeft = t, this.groupList.forEach(function(e) {
                    e.scrollHeader(t);
                });
            }, H.prototype.getRowIndex = function(e) {}, H.prototype.conformRowData = function(e) {
                return this.field ? e[this.field] = this.key : console.warn("Data Conforming Error - Cannot conform row data to match new group as groupBy is a function"), 
                e = this.parent ? this.parent.conformRowData(e) : e;
            }, H.prototype.removeRow = function(e) {
                var t = this.rows.indexOf(e), e = e.getElement();
                -1 < t && this.rows.splice(t, 1), this.groupManager.table.options.groupValues || this.rows.length ? (e.parentNode && e.parentNode.removeChild(e), 
                this.generateGroupHeaderContents(), this.groupManager.table.modExists("columnCalcs") && "table" != this.groupManager.table.options.columnCalcs && this.groupManager.table.modules.columnCalcs.recalcGroup(this)) : ((this.parent || this.groupManager).removeGroup(this), 
                this.groupManager.updateGroupRows(!0));
            }, H.prototype.removeGroup = function(e) {
                var t = e.level + "_" + e.key;
                this.groups[t] && (delete this.groups[t], -1 < (t = this.groupList.indexOf(e)) && this.groupList.splice(t, 1), 
                this.groupList.length || (this.parent || this.groupManager).removeGroup(this));
            }, H.prototype.getHeadersAndRows = function(t) {
                var o = [];
                return o.push(this), this._visSet(), this.visible ? this.groupList.length ? this.groupList.forEach(function(e) {
                    o = o.concat(e.getHeadersAndRows(t));
                }) : (!t && "table" != this.groupManager.table.options.columnCalcs && this.groupManager.table.modExists("columnCalcs") && this.groupManager.table.modules.columnCalcs.hasTopCalcs() && (this.calcs.top && (this.calcs.top.detachElement(), 
                this.calcs.top.deleteCells()), this.calcs.top = this.groupManager.table.modules.columnCalcs.generateTopRow(this.rows), 
                o.push(this.calcs.top)), o = o.concat(this.rows), !t && "table" != this.groupManager.table.options.columnCalcs && this.groupManager.table.modExists("columnCalcs") && this.groupManager.table.modules.columnCalcs.hasBottomCalcs() && (this.calcs.bottom && (this.calcs.bottom.detachElement(), 
                this.calcs.bottom.deleteCells()), this.calcs.bottom = this.groupManager.table.modules.columnCalcs.generateBottomRow(this.rows), 
                o.push(this.calcs.bottom))) : this.groupList.length || "table" == this.groupManager.table.options.columnCalcs || this.groupManager.table.modExists("columnCalcs") && (!t && this.groupManager.table.modules.columnCalcs.hasTopCalcs() && (this.calcs.top && (this.calcs.top.detachElement(), 
                this.calcs.top.deleteCells()), this.groupManager.table.options.groupClosedShowCalcs) && (this.calcs.top = this.groupManager.table.modules.columnCalcs.generateTopRow(this.rows), 
                o.push(this.calcs.top)), !t) && this.groupManager.table.modules.columnCalcs.hasBottomCalcs() && (this.calcs.bottom && (this.calcs.bottom.detachElement(), 
                this.calcs.bottom.deleteCells()), this.groupManager.table.options.groupClosedShowCalcs) && (this.calcs.bottom = this.groupManager.table.modules.columnCalcs.generateBottomRow(this.rows), 
                o.push(this.calcs.bottom)), o;
            }, H.prototype.getData = function(e, t) {
                var o = [];
                return this._visSet(), e && !this.visible || this.rows.forEach(function(e) {
                    o.push(e.getData(t || "data"));
                }), o;
            }, H.prototype.getRowCount = function() {
                var t = 0;
                return this.groupList.length ? this.groupList.forEach(function(e) {
                    t += e.getRowCount();
                }) : t = this.rows.length, t;
            }, H.prototype.toggleVisibility = function() {
                this.visible ? this.hide() : this.show();
            }, H.prototype.hide = function() {
                this.visible = !1, "classic" != this.groupManager.table.rowManager.getRenderMode() || this.groupManager.table.options.pagination ? this.groupManager.updateGroupRows(!0) : (this.element.classList.remove("tabulator-group-visible"), 
                this.groupList.length ? this.groupList.forEach(function(e) {
                    e.getHeadersAndRows().forEach(function(e) {
                        e.detachElement();
                    });
                }) : this.rows.forEach(function(e) {
                    e = e.getElement();
                    e.parentNode.removeChild(e);
                }), this.groupManager.table.rowManager.setDisplayRows(this.groupManager.updateGroupRows(), this.groupManager.getDisplayIndex()), 
                this.groupManager.table.rowManager.checkClassicModeGroupHeaderWidth()), 
                this.groupManager.table.options.groupVisibilityChanged.call(this.table, this.getComponent(), !1);
            }, H.prototype.show = function() {
                var o;
                this.visible = !0, "classic" != this.groupManager.table.rowManager.getRenderMode() || this.groupManager.table.options.pagination ? this.groupManager.updateGroupRows(!0) : (this.element.classList.add("tabulator-group-visible"), 
                o = this.getElement(), this.groupList.length ? this.groupList.forEach(function(e) {
                    e.getHeadersAndRows().forEach(function(e) {
                        var t = e.getElement();
                        o.parentNode.insertBefore(t, o.nextSibling), e.initialize(), 
                        o = t;
                    });
                }) : this.rows.forEach(function(e) {
                    var t = e.getElement();
                    o.parentNode.insertBefore(t, o.nextSibling), e.initialize(), 
                    o = t;
                }), this.groupManager.table.rowManager.setDisplayRows(this.groupManager.updateGroupRows(), this.groupManager.getDisplayIndex()), 
                this.groupManager.table.rowManager.checkClassicModeGroupHeaderWidth()), 
                this.groupManager.table.options.groupVisibilityChanged.call(this.table, this.getComponent(), !0);
            }, H.prototype._visSet = function() {
                var t = [];
                "function" == typeof this.visible && (this.rows.forEach(function(e) {
                    t.push(e.getData());
                }), this.visible = this.visible(this.key, this.getRowCount(), t, this.getComponent()));
            }, H.prototype.getRowGroup = function(t) {
                var o = !1;
                return this.groupList.length ? this.groupList.forEach(function(e) {
                    e = e.getRowGroup(t);
                    e && (o = e);
                }) : this.rows.find(function(e) {
                    return e === t;
                }) && (o = this), o;
            }, H.prototype.getSubGroups = function(t) {
                var o = [];
                return this.groupList.forEach(function(e) {
                    o.push(t ? e.getComponent() : e);
                }), o;
            }, H.prototype.getRows = function(t) {
                var o = [];
                return this.rows.forEach(function(e) {
                    o.push(t ? e.getComponent() : e);
                }), o;
            }, H.prototype.generateGroupHeaderContents = function() {
                var t = [];
                for (this.rows.forEach(function(e) {
                    t.push(e.getData());
                }), this.elementContents = this.generator(this.key, this.getRowCount(), t, this.getComponent()); this.element.firstChild; ) this.element.removeChild(this.element.firstChild);
                "string" == typeof this.elementContents ? this.element.innerHTML = this.elementContents : this.element.appendChild(this.elementContents), 
                this.element.insertBefore(this.arrowElement, this.element.firstChild);
            }, H.prototype.getPath = function() {
                var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : [];
                return e.unshift(this.key), this.parent && this.parent.getPath(e), 
                e;
            }, H.prototype.getElement = function() {
                this.addBindingsd = !1, this._visSet(), this.visible ? this.element.classList.add("tabulator-group-visible") : this.element.classList.remove("tabulator-group-visible");
                for (var e = 0; e < this.element.childNodes.length; ++e) this.element.childNodes[e].parentNode.removeChild(this.element.childNodes[e]);
                return this.generateGroupHeaderContents(), this.element;
            }, H.prototype.detachElement = function() {
                this.element && this.element.parentNode && this.element.parentNode.removeChild(this.element);
            }, H.prototype.normalizeHeight = function() {
                this.setHeight(this.element.clientHeight);
            }, H.prototype.initialize = function(e) {
                this.initialized && !e || (this.normalizeHeight(), this.initialized = !0);
            }, H.prototype.reinitialize = function() {
                this.initialized = !1, this.height = 0, N.prototype.helpers.elVisible(this.element) && this.initialize(!0);
            }, H.prototype.setHeight = function(e) {
                this.height != e && (this.height = e, this.outerHeight = this.element.offsetHeight);
            }, H.prototype.getHeight = function() {
                return this.outerHeight;
            }, H.prototype.getGroup = function() {
                return this;
            }, H.prototype.reinitializeHeight = function() {}, H.prototype.calcHeight = function() {}, 
            H.prototype.setCellHeight = function() {}, H.prototype.clearCellHeight = function() {}, 
            H.prototype.getComponent = function() {
                return this.component || (this.component = new v(this)), this.component;
            }, y.prototype.initialize = function() {
                var s = this, e = s.table.options.groupBy, t = s.table.options.groupStartOpen, o = s.table.options.groupHeader;
                this.allowedValues = s.table.options.groupValues, Array.isArray(e) && Array.isArray(o) && e.length > o.length && console.warn("Error creating group headers, groupHeader array is shorter than groupBy array"), 
                s.headerGenerator = [ function() {
                    return "";
                } ], this.startOpen = [ function() {
                    return !1;
                } ], s.table.modules.localize.bind("groups|item", function(i, n) {
                    s.headerGenerator[0] = function(e, t, o) {
                        return (void 0 === e ? "" : e) + "<span>(" + t + " " + (1 === t ? i : n.groups.items) + ")</span>";
                    };
                }), this.groupIDLookups = [], Array.isArray(e) || e ? this.table.modExists("columnCalcs") && "table" != this.table.options.columnCalcs && "both" != this.table.options.columnCalcs && this.table.modules.columnCalcs.removeCalcs() : this.table.modExists("columnCalcs") && "group" != this.table.options.columnCalcs && this.table.columnManager.getRealColumns().forEach(function(e) {
                    e.definition.topCalc && s.table.modules.columnCalcs.initializeTopRow(), 
                    e.definition.bottomCalc && s.table.modules.columnCalcs.initializeBottomRow();
                }), (e = Array.isArray(e) ? e : [ e ]).forEach(function(t, e) {
                    var o, i = "function" == typeof t ? t : (o = s.table.columnManager.getColumnByField(t)) ? function(e) {
                        return o.getFieldValue(e);
                    } : function(e) {
                        return e[t];
                    };
                    s.groupIDLookups.push({
                        field: "function" != typeof t && t,
                        func: i,
                        values: !!s.allowedValues && s.allowedValues[e]
                    });
                }), t && ((t = Array.isArray(t) ? t : [ t ]).forEach(function(e) {}), 
                s.startOpen = t), o && (s.headerGenerator = Array.isArray(o) ? o : [ o ]), 
                this.initialized = !0;
            }, y.prototype.setDisplayIndex = function(e) {
                this.displayIndex = e;
            }, y.prototype.getDisplayIndex = function() {
                return this.displayIndex;
            }, y.prototype.getRows = function(e) {
                return this.groupIDLookups.length ? (this.table.options.dataGrouping.call(this.table), 
                this.generateGroups(e), this.table.options.dataGrouped && this.table.options.dataGrouped.call(this.table, this.getGroups(!0)), 
                this.updateGroupRows()) : e.slice(0);
            }, y.prototype.getGroups = function(t) {
                var o = [];
                return this.groupList.forEach(function(e) {
                    o.push(t ? e.getComponent() : e);
                }), o;
            }, y.prototype.getChildGroups = function(e) {
                var t = this, o = [];
                return (e = e || this).groupList.forEach(function(e) {
                    e.groupList.length ? o = o.concat(t.getChildGroups(e)) : o.push(e);
                }), o;
            }, y.prototype.wipe = function() {
                this.groupList.forEach(function(e) {
                    e.wipe();
                });
            }, y.prototype.pullGroupListData = function(e) {
                var i = this, n = [];
                return e.forEach(function(e) {
                    var t, o = {
                        level: 0,
                        rowCount: 0,
                        headerContent: ""
                    };
                    e.hasSubGroups ? (t = i.pullGroupListData(e.groupList), o.level = e.level, 
                    o.rowCount = t.length - e.groupList.length, o.headerContent = e.generator(e.key, o.rowCount, e.rows, e), 
                    n.push(o), n = n.concat(t)) : (o.level = e.level, o.headerContent = e.generator(e.key, e.rows.length, e.rows, e), 
                    o.rowCount = e.getRows().length, n.push(o), e.getRows().forEach(function(e) {
                        n.push(e.getData("data"));
                    }));
                }), n;
            }, y.prototype.getGroupedData = function() {
                return this.pullGroupListData(this.groupList);
            }, y.prototype.getRowGroup = function(t) {
                var o = !1;
                return this.groupList.forEach(function(e) {
                    e = e.getRowGroup(t);
                    e && (o = e);
                }), o;
            }, y.prototype.countGroups = function() {
                return this.groupList.length;
            }, y.prototype.generateGroups = function(e) {
                var t = this, o = t.groups;
                t.groups = {}, t.groupList = [], this.allowedValues && this.allowedValues[0] ? (this.allowedValues[0].forEach(function(e) {
                    t.createGroup(e, 0, o);
                }), e.forEach(function(e) {
                    t.assignRowToExistingGroup(e, o);
                })) : e.forEach(function(e) {
                    t.assignRowToGroup(e, o);
                });
            }, y.prototype.createGroup = function(e, t, o) {
                var i = t + "_" + e, t = new H(this, !1, t, e, this.groupIDLookups[0].field, this.headerGenerator[0], (o = o || [])[i]);
                this.groups[i] = t, this.groupList.push(t);
            }, y.prototype.assignRowToExistingGroup = function(e, t) {
                var o = "0_" + this.groupIDLookups[0].func(e.getData());
                this.groups[o] && this.groups[o].addRow(e);
            }, y.prototype.assignRowToGroup = function(e, t) {
                var o = this.groupIDLookups[0].func(e.getData()), i = !this.groups["0_" + o];
                return i && this.createGroup(o, 0, t), this.groups["0_" + o].addRow(e), 
                !i;
            }, y.prototype.reassignRowToGroup = function(e) {
                var t = e.getGroup(), o = t.getPath(), i = this.getExpectedPath(e);
                o.length == i.length && o.every(function(e, t) {
                    return e === i[t];
                }) || (t.removeRow(e), this.assignRowToGroup(e, self.groups), this.table.rowManager.refreshActiveData("group", !1, !0));
            }, y.prototype.getExpectedPath = function(e) {
                var t = [], o = e.getData();
                return this.groupIDLookups.forEach(function(e) {
                    t.push(e.func(o));
                }), t;
            }, y.prototype.updateGroupRows = function(e) {
                var t = [];
                return this.groupList.forEach(function(e) {
                    t = t.concat(e.getHeadersAndRows());
                }), e && (!0 !== (e = this.table.rowManager.setDisplayRows(t, this.getDisplayIndex())) && this.setDisplayIndex(e), 
                this.table.rowManager.refreshActiveData("group", !0, !0)), t;
            }, y.prototype.scrollHeaders = function(t) {
                this.table.options.virtualDomHoz && (t -= this.table.vdomHoz.vDomPadLeft), 
                t += "px", this.groupList.forEach(function(e) {
                    e.scrollHeader(t);
                });
            }, y.prototype.removeGroup = function(e) {
                var t = e.level + "_" + e.key;
                this.groups[t] && (delete this.groups[t], -1 < (t = this.groupList.indexOf(e))) && this.groupList.splice(t, 1);
            }, N.prototype.registerModule("groupRows", y), w.prototype.clear = function() {
                this.history = [], this.index = -1;
            }, w.prototype.action = function(e, t, o) {
                this.history = this.history.slice(0, this.index + 1), this.history.push({
                    type: e,
                    component: t,
                    data: o
                }), this.index++;
            }, w.prototype.getHistoryUndoSize = function() {
                return this.index + 1;
            }, w.prototype.getHistoryRedoSize = function() {
                return this.history.length - (this.index + 1);
            }, w.prototype.clearComponentHistory = function(t) {
                var e = this.history.findIndex(function(e) {
                    return e.component === t;
                });
                -1 < e && (this.history.splice(e, 1), e <= this.index && this.index--, 
                this.clearComponentHistory(t));
            }, w.prototype.undo = function() {
                var e;
                return -1 < this.index ? (e = this.history[this.index], this.undoers[e.type].call(this, e), 
                this.index--, this.table.options.historyUndo.call(this.table, e.type, e.component.getComponent(), e.data), 
                !0) : (console.warn("History Undo Error - No more history to undo"), 
                !1);
            }, w.prototype.redo = function() {
                var e;
                return this.history.length - 1 > this.index ? (this.index++, e = this.history[this.index], 
                this.redoers[e.type].call(this, e), this.table.options.historyRedo.call(this.table, e.type, e.component.getComponent(), e.data), 
                !0) : (console.warn("History Redo Error - No more history to redo"), 
                !1);
            }, w.prototype.undoers = {
                cellEdit: function(e) {
                    e.component.setValueProcessData(e.data.oldValue);
                },
                rowAdd: function(e) {
                    e.component.deleteActual();
                },
                rowDelete: function(e) {
                    var t = this.table.rowManager.addRowActual(e.data.data, e.data.pos, e.data.index);
                    this.table.options.groupBy && this.table.modExists("groupRows") && this.table.modules.groupRows.updateGroupRows(!0), 
                    this._rebindRow(e.component, t);
                },
                rowMove: function(e) {
                    this.table.rowManager.moveRowActual(e.component, this.table.rowManager.rows[e.data.posFrom], !e.data.after), 
                    this.table.rowManager.redraw();
                }
            }, w.prototype.redoers = {
                cellEdit: function(e) {
                    e.component.setValueProcessData(e.data.newValue);
                },
                rowAdd: function(e) {
                    var t = this.table.rowManager.addRowActual(e.data.data, e.data.pos, e.data.index);
                    this.table.options.groupBy && this.table.modExists("groupRows") && this.table.modules.groupRows.updateGroupRows(!0), 
                    this._rebindRow(e.component, t);
                },
                rowDelete: function(e) {
                    e.component.deleteActual();
                },
                rowMove: function(e) {
                    this.table.rowManager.moveRowActual(e.component, this.table.rowManager.rows[e.data.posTo], e.data.after), 
                    this.table.rowManager.redraw();
                }
            }, w.prototype._rebindRow = function(o, i) {
                this.history.forEach(function(e) {
                    var t;
                    e.component instanceof A ? e.component === o && (e.component = i) : e.component instanceof P && e.component.row === o && (t = e.component.column.getField()) && (e.component = i.getCell(t));
                });
            }, N.prototype.registerModule("history", w), U.prototype.parseTable = function() {
                var e = this.table.element, t = this.table.options, o = (t.columns, 
                e.getElementsByTagName("th")), i = e.getElementsByTagName("tbody")[0], n = [];
                this.hasIndex = !1, this.table.options.htmlImporting.call(this.table), 
                i = i ? i.getElementsByTagName("tr") : [], this._extractOptions(e, t), 
                o.length ? this._extractHeaders(o, i) : this._generateBlankHeaders(o, i);
                for (var s = 0; s < i.length; s++) {
                    var r = i[s].getElementsByTagName("td"), a = {};
                    this.hasIndex || (a[t.index] = s);
                    for (var l = 0; l < r.length; l++) {
                        var c = r[l];
                        void 0 !== this.fieldIndex[l] && (a[this.fieldIndex[l]] = c.innerHTML);
                    }
                    n.push(a);
                }
                var u = document.createElement("div"), d = e.attributes;
                for (l in d) "object" == Q(d[l]) && u.setAttribute(d[l].name, d[l].value);
                e.parentNode.replaceChild(u, e), t.data = n, this.table.options.htmlImported.call(this.table), 
                // // newElement.tabulator(options);
                this.table.element = u;
            }, 
            //extract tabulator attribute options
            U.prototype._extractOptions = function(e, t, o) {
                var i, n = e.attributes, e = o ? Object.assign([], o) : Object.keys(t), s = {};
                for (i in e.forEach(function(e) {
                    s[e.toLowerCase()] = e;
                }), n) {
                    var r, a = n[i];
                    a && "object" == (void 0 === a ? "undefined" : Q(a)) && a.name && 0 === a.name.indexOf("tabulator-") && (r = a.name.replace("tabulator-", ""), 
                    void 0 !== s[r]) && (t[s[r]] = this._attribValue(a.value));
                }
            }, U.prototype._attribValue = function(e) {
                return "true" === e || "false" !== e && e;
            }, U.prototype._findCol = function(t) {
                return this.table.options.columns.find(function(e) {
                    return e.title === t;
                }) || !1;
            }, U.prototype._extractHeaders = function(e, t) {
                for (var o = 0; o < e.length; o++) {
                    var i, n = e[o], s = !1, r = this._findCol(n.textContent);
                    r ? s = !0 : r = {
                        title: n.textContent.trim()
                    }, r.field || (r.field = n.textContent.trim().toLowerCase().replace(" ", "_")), 
                    (i = n.getAttribute("width")) && !r.width && (r.width = i), 
                    n.attributes, this._extractOptions(n, r, I.prototype.defaultOptionList), 
                    this.fieldIndex[o] = r.field, r.field == this.table.options.index && (this.hasIndex = !0), 
                    s || this.table.options.columns.push(r);
                }
            }, U.prototype._generateBlankHeaders = function(e, t) {
                for (var o = 0; o < e.length; o++) {
                    var i = e[o], n = {
                        title: "",
                        field: "col" + o
                    }, i = (this.fieldIndex[o] = n.field, i.getAttribute("width"));
                    i && (n.width = i), this.table.options.columns.push(n);
                }
            }, N.prototype.registerModule("htmlTableImport", U), E.prototype.initialize = function() {
                var e = this.table.options.keybindings, t = {};
                if (this.watchKeys = {}, !(this.pressedKeys = []) !== e) {
                    for (var o in this.bindings) t[o] = this.bindings[o];
                    if (Object.keys(e).length) for (var i in e) t[i] = e[i];
                    this.mapBindings(t), this.bindEvents();
                }
            }, E.prototype.mapBindings = function(e) {
                var t, o = this, i = this;
                for (t in e) !function(t) {
                    o.actions[t] ? e[t] && ("object" !== Q(e[t]) && (e[t] = [ e[t] ]), 
                    e[t].forEach(function(e) {
                        i.mapBinding(t, e);
                    })) : console.warn("Key Binding Error - no such action:", t);
                }(t);
            }, E.prototype.mapBinding = function(e, t) {
                var o = this, i = {
                    action: this.actions[e],
                    keys: [],
                    ctrl: !1,
                    shift: !1,
                    meta: !1
                };
                t.toString().toLowerCase().split(" ").join("").split("+").forEach(function(e) {
                    switch (e) {
                      case "ctrl":
                        i.ctrl = !0;
                        break;

                      case "shift":
                        i.shift = !0;
                        break;

                      case "meta":
                        i.meta = !0;
                        break;

                      default:
                        e = parseInt(e), i.keys.push(e), o.watchKeys[e] || (o.watchKeys[e] = []), 
                        o.watchKeys[e].push(i);
                    }
                });
            }, E.prototype.bindEvents = function() {
                var i = this;
                this.keyupBinding = function(t) {
                    var e = t.keyCode, o = i.watchKeys[e];
                    o && (i.pressedKeys.push(e), o.forEach(function(e) {
                        i.checkBinding(t, e);
                    }));
                }, this.keydownBinding = function(e) {
                    var e = e.keyCode;
                    i.watchKeys[e] && -1 < (e = i.pressedKeys.indexOf(e)) && i.pressedKeys.splice(e, 1);
                }, this.table.element.addEventListener("keydown", this.keyupBinding), 
                this.table.element.addEventListener("keyup", this.keydownBinding);
            }, E.prototype.clearBindings = function() {
                this.keyupBinding && this.table.element.removeEventListener("keydown", this.keyupBinding), 
                this.keydownBinding && this.table.element.removeEventListener("keyup", this.keydownBinding);
            }, E.prototype.checkBinding = function(e, t) {
                var o = this, i = !0;
                return e.ctrlKey == t.ctrl && e.shiftKey == t.shift && e.metaKey == t.meta && (t.keys.forEach(function(e) {
                    -1 == o.pressedKeys.indexOf(e) && (i = !1);
                }), i && t.action.call(o, e), !0);
            }, E.prototype.bindings = {
                navPrev: "shift + 9",
                navNext: 9,
                navUp: 38,
                navDown: 40,
                scrollPageUp: 33,
                scrollPageDown: 34,
                scrollToStart: 36,
                scrollToEnd: 35,
                undo: "ctrl + 90",
                redo: "ctrl + 89",
                copyToClipboard: "ctrl + 67"
            }, E.prototype.actions = {
                keyBlock: function(e) {
                    e.stopPropagation(), e.preventDefault();
                },
                scrollPageUp: function(e) {
                    var t = this.table.rowManager, o = t.scrollTop - t.height;
                    t.element.scrollHeight;
                    e.preventDefault(), t.displayRowsCount && (0 <= o ? t.element.scrollTop = o : t.scrollToRow(t.getDisplayRows()[0])), 
                    this.table.element.focus();
                },
                scrollPageDown: function(e) {
                    var t = this.table.rowManager, o = t.scrollTop + t.height, i = t.element.scrollHeight;
                    e.preventDefault(), t.displayRowsCount && (o <= i ? t.element.scrollTop = o : t.scrollToRow(t.getDisplayRows()[t.displayRowsCount - 1])), 
                    this.table.element.focus();
                },
                scrollToStart: function(e) {
                    var t = this.table.rowManager;
                    e.preventDefault(), t.displayRowsCount && t.scrollToRow(t.getDisplayRows()[0]), 
                    this.table.element.focus();
                },
                scrollToEnd: function(e) {
                    var t = this.table.rowManager;
                    e.preventDefault(), t.displayRowsCount && t.scrollToRow(t.getDisplayRows()[t.displayRowsCount - 1]), 
                    this.table.element.focus();
                },
                navPrev: function(e) {
                    var t = !1;
                    this.table.modExists("edit") && (t = this.table.modules.edit.currentCell) && (e.preventDefault(), 
                    t.nav().prev());
                },
                navNext: function(e) {
                    var t, o = !1, i = this.table.options.tabEndNewRow;
                    this.table.modExists("edit") && (o = this.table.modules.edit.currentCell) && (e.preventDefault(), 
                    (t = o.nav()).next() || i && (o.getElement().firstChild.blur(), 
                    (i = !0 === i ? this.table.addRow({}) : "function" == typeof i ? this.table.addRow(i(o.row.getComponent())) : this.table.addRow(Object.assign({}, i))).then(function() {
                        setTimeout(function() {
                            t.next();
                        });
                    })));
                },
                navLeft: function(e) {
                    var t = !1;
                    this.table.modExists("edit") && (t = this.table.modules.edit.currentCell) && (e.preventDefault(), 
                    t.nav().left());
                },
                navRight: function(e) {
                    var t = !1;
                    this.table.modExists("edit") && (t = this.table.modules.edit.currentCell) && (e.preventDefault(), 
                    t.nav().right());
                },
                navUp: function(e) {
                    var t = !1;
                    this.table.modExists("edit") && (t = this.table.modules.edit.currentCell) && (e.preventDefault(), 
                    t.nav().up());
                },
                navDown: function(e) {
                    var t = !1;
                    this.table.modExists("edit") && (t = this.table.modules.edit.currentCell) && (e.preventDefault(), 
                    t.nav().down());
                },
                undo: function(e) {
                    this.table.options.history && this.table.modExists("history") && this.table.modExists("edit") && (this.table.modules.edit.currentCell || (e.preventDefault(), 
                    this.table.modules.history.undo()));
                },
                redo: function(e) {
                    this.table.options.history && this.table.modExists("history") && this.table.modExists("edit") && (this.table.modules.edit.currentCell || (e.preventDefault(), 
                    this.table.modules.history.redo()));
                },
                copyToClipboard: function(e) {
                    this.table.modules.edit.currentCell || this.table.modExists("clipboard", !0) && this.table.modules.clipboard.copy(!1, !0);
                }
            }, N.prototype.registerModule("keybindings", E), C.prototype.initializeColumnHeader = function(t) {
                var e, o = this;
                t.definition.headerContextMenu && (t.getElement().addEventListener("contextmenu", this.LoadMenuEvent.bind(this, t, t.definition.headerContextMenu)), 
                this.tapHold(t, t.definition.headerContextMenu)), t.definition.headerMenu && ((e = document.createElement("span")).classList.add("tabulator-header-menu-button"), 
                e.innerHTML = "&vellip;", e.addEventListener("click", function(e) {
                    e.stopPropagation(), e.preventDefault(), o.LoadMenuEvent(t, t.definition.headerMenu, e);
                }), t.titleElement.insertBefore(e, t.titleElement.firstChild));
            }, C.prototype.LoadMenuEvent = function(e, t, o) {
                t = "function" == typeof t ? t.call(this.table, e.getComponent(), o) : t, 
                this.loadMenu(o, e, t);
            }, C.prototype.tapHold = function(t, o) {
                var i = this, e = t.getElement(), n = null, s = !1;
                e.addEventListener("touchstart", function(e) {
                    clearTimeout(n), s = !1, n = setTimeout(function() {
                        clearTimeout(n), s = !(n = null), i.LoadMenuEvent(t, o, e);
                    }, 1e3);
                }, {
                    passive: !0
                }), e.addEventListener("touchend", function(e) {
                    clearTimeout(n), n = null, s && e.preventDefault();
                });
            }, C.prototype.initializeCell = function(e) {
                e.column.definition.contextMenu && (e.getElement(!0).addEventListener("contextmenu", this.LoadMenuEvent.bind(this, e, e.column.definition.contextMenu)), 
                this.tapHold(e, e.column.definition.contextMenu)), e.column.definition.clickMenu && e.getElement(!0).addEventListener("click", this.LoadMenuEvent.bind(this, e, e.column.definition.clickMenu));
            }, C.prototype.initializeRow = function(e) {
                this.table.options.rowContextMenu && (e.getElement().addEventListener("contextmenu", this.LoadMenuEvent.bind(this, e, this.table.options.rowContextMenu)), 
                this.tapHold(e, this.table.options.rowContextMenu)), this.table.options.rowClickMenu && e.getElement().addEventListener("click", this.LoadMenuEvent.bind(this, e, this.table.options.rowClickMenu));
            }, C.prototype.initializeGroup = function(e) {
                this.table.options.groupContextMenu && (e.getElement().addEventListener("contextmenu", this.LoadMenuEvent.bind(this, e, this.table.options.groupContextMenu)), 
                this.tapHold(e, this.table.options.groupContextMenu)), this.table.options.groupClickMenu && e.getElement().addEventListener("click", this.LoadMenuEvent.bind(this, e, this.table.options.groupClickMenu));
            }, C.prototype.loadMenu = function(e, n, t, o) {
                var s = this, i = !(e instanceof MouseEvent), r = document.createElement("div");
                if (r.classList.add("tabulator-menu"), i || e.preventDefault(), 
                t && t.length) {
                    if (!o) {
                        if (this.nestedMenuBlock) {
                            if (this.isOpen()) return;
                        } else this.nestedMenuBlock = setTimeout(function() {
                            s.nestedMenuBlock = !1;
                        }, 100);
                        this.hideMenu(), this.menuElements = [];
                    }
                    t.forEach(function(t) {
                        var o = document.createElement("div"), e = t.label, i = t.disabled;
                        t.separator ? o.classList.add("tabulator-menu-separator") : (o.classList.add("tabulator-menu-item"), 
                        (e = "function" == typeof e ? e.call(s.table, n.getComponent()) : e) instanceof Node ? o.appendChild(e) : o.innerHTML = e, 
                        (i = "function" == typeof i ? i.call(s.table, n.getComponent()) : i) ? (o.classList.add("tabulator-menu-item-disabled"), 
                        o.addEventListener("click", function(e) {
                            e.stopPropagation();
                        })) : t.menu && t.menu.length ? o.addEventListener("click", function(e) {
                            e.stopPropagation(), s.hideOldSubMenus(r), s.loadMenu(e, n, t.menu, o);
                        }) : t.action && o.addEventListener("click", function(e) {
                            t.action(e, n.getComponent());
                        }), t.menu && t.menu.length && o.classList.add("tabulator-menu-item-submenu")), 
                        r.appendChild(o);
                    }), r.addEventListener("click", function(e) {
                        s.hideMenu();
                    }), this.menuElements.push(r), this.positionMenu(r, o, i, e);
                }
            }, C.prototype.hideOldSubMenus = function(e) {
                var t = this.menuElements.indexOf(e);
                if (-1 < t) for (var o = this.menuElements.length - 1; t < o; o--) {
                    var i = this.menuElements[o];
                    i.parentNode && i.parentNode.removeChild(i), this.menuElements.pop();
                }
            }, C.prototype.positionMenu = function(e, t, o, i) {
                var n, s, r, a = this, l = Math.max(document.body.offsetHeight, window.innerHeight);
                t ? (n = (r = N.prototype.helpers.elOffset(t)).left + t.offsetWidth, 
                s = r.top - 1) : (n = (o ? i.touches[0] : i).pageX, s = (o ? i.touches[0] : i).pageY, 
                this.positionReversedX = !1), e.style.top = s + "px", e.style.left = n + "px", 
                setTimeout(function() {
                    a.table.rowManager.element.addEventListener("scroll", a.blurEvent), 
                    document.body.addEventListener("click", a.blurEvent), document.body.addEventListener("contextmenu", a.blurEvent), 
                    window.addEventListener("resize", a.blurEvent), document.body.addEventListener("keydown", a.escEvent);
                }, 100), document.body.appendChild(e), s + e.offsetHeight >= l && (e.style.top = "", 
                e.style.bottom = t ? l - r.top - t.offsetHeight - 1 + "px" : l - s + "px"), 
                (n + e.offsetWidth >= document.body.offsetWidth || this.positionReversedX) && (e.style.left = "", 
                e.style.right = t ? document.documentElement.offsetWidth - r.left + "px" : document.documentElement.offsetWidth - n + "px", 
                this.positionReversedX = !0);
            }, C.prototype.isOpen = function() {
                return !!this.menuElements.length;
            }, C.prototype.escMenu = function(e) {
                27 == e.keyCode && this.hideMenu();
            }, C.prototype.hideMenu = function() {
                this.menuElements.forEach(function(e) {
                    e.parentNode && e.parentNode.removeChild(e);
                }), document.body.removeEventListener("keydown", this.escEvent), 
                document.body.removeEventListener("click", this.blurEvent), document.body.removeEventListener("contextmenu", this.blurEvent), 
                window.removeEventListener("resize", this.blurEvent), this.table.rowManager.element.removeEventListener("scroll", this.blurEvent);
            }, C.prototype.menus = {}, N.prototype.registerModule("menu", C), x.prototype.createPlaceholderElement = function() {
                var e = document.createElement("div");
                return e.classList.add("tabulator-col"), e.classList.add("tabulator-col-placeholder"), 
                e;
            }, x.prototype.initializeColumn = function(t) {
                var o, i = this, e = {};
                t.modules.frozen || (o = t.getElement(), e.mousemove = function(e) {
                    t.parent === i.moving.parent && ((i.touchMove ? e.touches[0] : e).pageX - N.prototype.helpers.elOffset(o).left + i.table.columnManager.element.scrollLeft > t.getWidth() / 2 ? i.toCol === t && i.toColAfter || (o.parentNode.insertBefore(i.placeholderElement, o.nextSibling), 
                    i.moveColumn(t, !0)) : i.toCol === t && !i.toColAfter || (o.parentNode.insertBefore(i.placeholderElement, o), 
                    i.moveColumn(t, !1)));
                }.bind(i), o.addEventListener("mousedown", function(e) {
                    i.touchMove = !1, 1 === e.which && (i.checkTimeout = setTimeout(function() {
                        i.startMove(e, t);
                    }, i.checkPeriod));
                }), o.addEventListener("mouseup", function(e) {
                    1 === e.which && i.checkTimeout && clearTimeout(i.checkTimeout);
                }), i.bindTouchEvents(t)), t.modules.moveColumn = e;
            }, x.prototype.bindTouchEvents = function(i) {
                var n, s, r, a, l, c, u = this, e = i.getElement(), d = !1;
                e.addEventListener("touchstart", function(e) {
                    u.checkTimeout = setTimeout(function() {
                        u.touchMove = !0, n = i.nextColumn(), r = n ? n.getWidth() / 2 : 0, 
                        s = i.prevColumn(), a = s ? s.getWidth() / 2 : 0, c = l = 0, 
                        d = !1, u.startMove(e, i);
                    }, u.checkPeriod);
                }, {
                    passive: !0
                }), e.addEventListener("touchmove", function(e) {
                    var t, o;
                    u.moving && (u.moveHover(e), d = d || e.touches[0].pageX, 0 < (t = e.touches[0].pageX - d) ? n && r < t - l && (o = n) !== i && (d = e.touches[0].pageX, 
                    o.getElement().parentNode.insertBefore(u.placeholderElement, o.getElement().nextSibling), 
                    u.moveColumn(o, !0)) : s && a < -t - c && (o = s) !== i && (d = e.touches[0].pageX, 
                    o.getElement().parentNode.insertBefore(u.placeholderElement, o.getElement()), 
                    u.moveColumn(o, !1)), o) && (n = o.nextColumn(), l = r, r = n ? n.getWidth() / 2 : 0, 
                    s = o.prevColumn(), c = a, a = s ? s.getWidth() / 2 : 0);
                }, {
                    passive: !0
                }), e.addEventListener("touchend", function(e) {
                    u.checkTimeout && clearTimeout(u.checkTimeout), u.moving && u.endMove(e);
                });
            }, x.prototype.startMove = function(e, t) {
                var o = t.getElement();
                this.moving = t, this.startX = (this.touchMove ? e.touches[0] : e).pageX - N.prototype.helpers.elOffset(o).left, 
                this.table.element.classList.add("tabulator-block-select"), this.placeholderElement.style.width = t.getWidth() + "px", 
                this.placeholderElement.style.height = t.getHeight() + "px", o.parentNode.insertBefore(this.placeholderElement, o), 
                o.parentNode.removeChild(o), this.hoverElement = o.cloneNode(!0), 
                this.hoverElement.classList.add("tabulator-moving"), this.table.columnManager.getElement().appendChild(this.hoverElement), 
                this.hoverElement.style.left = "0", this.hoverElement.style.bottom = "0", 
                this.touchMove || (this._bindMouseMove(), document.body.addEventListener("mousemove", this.moveHover), 
                document.body.addEventListener("mouseup", this.endMove)), this.moveHover(e);
            }, x.prototype._bindMouseMove = function() {
                this.table.columnManager.columnsByIndex.forEach(function(e) {
                    e.modules.moveColumn.mousemove && e.getElement().addEventListener("mousemove", e.modules.moveColumn.mousemove);
                });
            }, x.prototype._unbindMouseMove = function() {
                this.table.columnManager.columnsByIndex.forEach(function(e) {
                    e.modules.moveColumn.mousemove && e.getElement().removeEventListener("mousemove", e.modules.moveColumn.mousemove);
                });
            }, x.prototype.moveColumn = function(e, t) {
                var o = this.moving.getCells();
                this.toCol = e, (this.toColAfter = t) ? e.getCells().forEach(function(e, t) {
                    e = e.getElement(!0);
                    e.parentNode.insertBefore(o[t].getElement(), e.nextSibling);
                }) : e.getCells().forEach(function(e, t) {
                    e = e.getElement(!0);
                    e.parentNode.insertBefore(o[t].getElement(), e);
                });
            }, x.prototype.endMove = function(e) {
                1 !== e.which && !this.touchMove || (this._unbindMouseMove(), this.placeholderElement.parentNode.insertBefore(this.moving.getElement(), this.placeholderElement.nextSibling), 
                this.placeholderElement.parentNode.removeChild(this.placeholderElement), 
                this.hoverElement.parentNode.removeChild(this.hoverElement), this.table.element.classList.remove("tabulator-block-select"), 
                this.toCol && this.table.columnManager.moveColumnActual(this.moving, this.toCol, this.toColAfter), 
                this.moving = !1, this.toCol = !1, this.toColAfter = !1, this.touchMove) || (document.body.removeEventListener("mousemove", this.moveHover), 
                document.body.removeEventListener("mouseup", this.endMove));
            }, x.prototype.moveHover = function(e) {
                var t, o = this, i = o.table.columnManager.getElement(), n = i.scrollLeft, e = (o.touchMove ? e.touches[0] : e).pageX - N.prototype.helpers.elOffset(i).left + n;
                o.hoverElement.style.left = e - o.startX + "px", e - n < o.autoScrollMargin && (o.autoScrollTimeout || (o.autoScrollTimeout = setTimeout(function() {
                    t = Math.max(0, n - 5), o.table.rowManager.getElement().scrollLeft = t, 
                    o.autoScrollTimeout = !1;
                }, 1))), n + i.clientWidth - e < o.autoScrollMargin && (o.autoScrollTimeout || (o.autoScrollTimeout = setTimeout(function() {
                    t = Math.min(i.clientWidth, n + 5), o.table.rowManager.getElement().scrollLeft = t, 
                    o.autoScrollTimeout = !1;
                }, 1)));
            }, N.prototype.registerModule("moveColumn", x), _.prototype.createPlaceholderElement = function() {
                var e = document.createElement("div");
                return e.classList.add("tabulator-row"), e.classList.add("tabulator-row-placeholder"), 
                e;
            }, _.prototype.initialize = function(e) {
                this.connectionSelectorsTables = this.table.options.movableRowsConnectedTables, 
                this.connectionSelectorsElements = this.table.options.movableRowsConnectedElements, 
                this.connection = this.connectionSelectorsTables || this.connectionSelectorsElements;
            }, _.prototype.setHandle = function(e) {
                this.hasHandle = e;
            }, _.prototype.initializeGroupHeader = function(o) {
                var i = this, e = {};
                e.mouseup = function(e) {
                    i.tableRowDrop(e, row);
                }.bind(i), e.mousemove = function(e) {
                    var t;
                    e.pageY - N.prototype.helpers.elOffset(o.element).top + i.table.rowManager.element.scrollTop > o.getHeight() / 2 ? i.toRow === o && i.toRowAfter || ((t = o.getElement()).parentNode.insertBefore(i.placeholderElement, t.nextSibling), 
                    i.moveRow(o, !0)) : (i.toRow !== o || i.toRowAfter) && (t = o.getElement()).previousSibling && (t.parentNode.insertBefore(i.placeholderElement, t), 
                    i.moveRow(o, !1));
                }.bind(i), o.modules.moveRow = e;
            }, _.prototype.initializeRow = function(o) {
                var e, i = this, t = {};
                t.mouseup = function(e) {
                    i.tableRowDrop(e, o);
                }.bind(i), t.mousemove = function(e) {
                    var t = o.getElement();
                    e.pageY - N.prototype.helpers.elOffset(t).top + i.table.rowManager.element.scrollTop > o.getHeight() / 2 ? i.toRow === o && i.toRowAfter || (t.parentNode.insertBefore(i.placeholderElement, t.nextSibling), 
                    i.moveRow(o, !0)) : i.toRow === o && !i.toRowAfter || (t.parentNode.insertBefore(i.placeholderElement, t), 
                    i.moveRow(o, !1));
                }.bind(i), this.hasHandle || ((e = o.getElement()).addEventListener("mousedown", function(e) {
                    1 === e.which && (i.checkTimeout = setTimeout(function() {
                        i.startMove(e, o);
                    }, i.checkPeriod));
                }), e.addEventListener("mouseup", function(e) {
                    1 === e.which && i.checkTimeout && clearTimeout(i.checkTimeout);
                }), this.bindTouchEvents(o, o.getElement())), o.modules.moveRow = t;
            }, _.prototype.initializeCell = function(t) {
                var o = this, e = t.getElement(!0);
                e.addEventListener("mousedown", function(e) {
                    1 === e.which && (o.checkTimeout = setTimeout(function() {
                        o.startMove(e, t.row);
                    }, o.checkPeriod));
                }), e.addEventListener("mouseup", function(e) {
                    1 === e.which && o.checkTimeout && clearTimeout(o.checkTimeout);
                }), this.bindTouchEvents(t.row, e);
            }, _.prototype.bindTouchEvents = function(i, e) {
                var n, s, r, a, l, c, u = this, d = !1;
                e.addEventListener("touchstart", function(e) {
                    u.checkTimeout = setTimeout(function() {
                        u.touchMove = !0, n = i.nextRow(), r = n ? n.getHeight() / 2 : 0, 
                        s = i.prevRow(), a = s ? s.getHeight() / 2 : 0, c = l = 0, 
                        d = !1, u.startMove(e, i);
                    }, u.checkPeriod);
                }, {
                    passive: !0
                }), this.moving, this.toRow, this.toRowAfter, e.addEventListener("touchmove", function(e) {
                    var t, o;
                    u.moving && (e.preventDefault(), u.moveHover(e), d = d || e.touches[0].pageY, 
                    0 < (t = e.touches[0].pageY - d) ? n && r < t - l && (o = n) !== i && (d = e.touches[0].pageY, 
                    o.getElement().parentNode.insertBefore(u.placeholderElement, o.getElement().nextSibling), 
                    u.moveRow(o, !0)) : s && a < -t - c && (o = s) !== i && (d = e.touches[0].pageY, 
                    o.getElement().parentNode.insertBefore(u.placeholderElement, o.getElement()), 
                    u.moveRow(o, !1)), o) && (n = o.nextRow(), l = r, r = n ? n.getHeight() / 2 : 0, 
                    s = o.prevRow(), c = a, a = s ? s.getHeight() / 2 : 0);
                }), e.addEventListener("touchend", function(e) {
                    u.checkTimeout && clearTimeout(u.checkTimeout), u.moving && (u.endMove(e), 
                    u.touchMove = !1);
                });
            }, _.prototype._bindMouseMove = function() {
                this.table.rowManager.getDisplayRows().forEach(function(e) {
                    "row" !== e.type && "group" !== e.type || !e.modules.moveRow.mousemove || e.getElement().addEventListener("mousemove", e.modules.moveRow.mousemove);
                });
            }, _.prototype._unbindMouseMove = function() {
                this.table.rowManager.getDisplayRows().forEach(function(e) {
                    "row" !== e.type && "group" !== e.type || !e.modules.moveRow.mousemove || e.getElement().removeEventListener("mousemove", e.modules.moveRow.mousemove);
                });
            }, _.prototype.startMove = function(e, t) {
                var o = t.getElement();
                this.setStartPosition(e, t), this.moving = t, this.table.element.classList.add("tabulator-block-select"), 
                this.placeholderElement.style.width = t.getWidth() + "px", this.placeholderElement.style.height = t.getHeight() + "px", 
                this.connection ? (this.table.element.classList.add("tabulator-movingrow-sending"), 
                this.connectToTables(t)) : (o.parentNode.insertBefore(this.placeholderElement, o), 
                o.parentNode.removeChild(o)), this.hoverElement = o.cloneNode(!0), 
                this.hoverElement.classList.add("tabulator-moving"), this.connection ? (document.body.appendChild(this.hoverElement), 
                this.hoverElement.style.left = "0", this.hoverElement.style.top = "0", 
                this.hoverElement.style.width = this.table.element.clientWidth + "px", 
                this.hoverElement.style.whiteSpace = "nowrap", this.hoverElement.style.overflow = "hidden", 
                this.hoverElement.style.pointerEvents = "none") : (this.table.rowManager.getTableElement().appendChild(this.hoverElement), 
                this.hoverElement.style.left = "0", this.hoverElement.style.top = "0", 
                this._bindMouseMove()), document.body.addEventListener("mousemove", this.moveHover), 
                document.body.addEventListener("mouseup", this.endMove), this.moveHover(e);
            }, _.prototype.setStartPosition = function(e, t) {
                var o, i = (this.touchMove ? e.touches[0] : e).pageX, e = (this.touchMove ? e.touches[0] : e).pageY, t = t.getElement();
                this.connection ? (o = t.getBoundingClientRect(), this.startX = o.left - i + window.pageXOffset, 
                this.startY = o.top - e + window.pageYOffset) : this.startY = e - t.getBoundingClientRect().top;
            }, _.prototype.endMove = function(e) {
                e && 1 !== e.which && !this.touchMove || (this._unbindMouseMove(), 
                this.connection || (this.placeholderElement.parentNode.insertBefore(this.moving.getElement(), this.placeholderElement.nextSibling), 
                this.placeholderElement.parentNode.removeChild(this.placeholderElement)), 
                this.hoverElement.parentNode.removeChild(this.hoverElement), this.table.element.classList.remove("tabulator-block-select"), 
                this.toRow && this.table.rowManager.moveRow(this.moving, this.toRow, this.toRowAfter), 
                this.moving = !1, this.toRow = !1, this.toRowAfter = !1, document.body.removeEventListener("mousemove", this.moveHover), 
                document.body.removeEventListener("mouseup", this.endMove), this.connection && (this.table.element.classList.remove("tabulator-movingrow-sending"), 
                this.disconnectFromTables()));
            }, _.prototype.moveRow = function(e, t) {
                this.toRow = e, this.toRowAfter = t;
            }, _.prototype.moveHover = function(e) {
                (this.connection ? this.moveHoverConnections : this.moveHoverTable).call(this, e);
            }, _.prototype.moveHoverTable = function(e) {
                var t = this.table.rowManager.getElement(), o = t.scrollTop, e = (this.touchMove ? e.touches[0] : e).pageY - t.getBoundingClientRect().top + o;
                this.hoverElement.style.top = e - this.startY + "px";
            }, _.prototype.moveHoverConnections = function(e) {
                this.hoverElement.style.left = this.startX + (this.touchMove ? e.touches[0] : e).pageX + "px", 
                this.hoverElement.style.top = this.startY + (this.touchMove ? e.touches[0] : e).pageY + "px";
            }, _.prototype.elementRowDrop = function(e, t, o) {
                this.table.options.movableRowsElementDrop && this.table.options.movableRowsElementDrop(e, t, !!o && o.getComponent());
            }, _.prototype.connectToTables = function(e) {
                var t, o = this;
                this.connectionSelectorsTables && (t = this.table.modules.comms.getConnections(this.connectionSelectorsTables), 
                this.table.options.movableRowsSendingStart.call(this.table, t), 
                this.table.modules.comms.send(this.connectionSelectorsTables, "moveRow", "connect", {
                    row: e
                })), this.connectionSelectorsElements && (this.connectionElements = [], 
                Array.isArray(this.connectionSelectorsElements) || (this.connectionSelectorsElements = [ this.connectionSelectorsElements ]), 
                this.connectionSelectorsElements.forEach(function(e) {
                    "string" == typeof e ? o.connectionElements = o.connectionElements.concat(Array.prototype.slice.call(document.querySelectorAll(e))) : o.connectionElements.push(e);
                }), this.connectionElements.forEach(function(t) {
                    function e(e) {
                        o.elementRowDrop(e, t, o.moving);
                    }
                    t.addEventListener("mouseup", e), t.tabulatorElementDropEvent = e, 
                    t.classList.add("tabulator-movingrow-receiving");
                }));
            }, _.prototype.disconnectFromTables = function() {
                var e;
                this.connectionSelectorsTables && (e = this.table.modules.comms.getConnections(this.connectionSelectorsTables), 
                this.table.options.movableRowsSendingStop.call(this.table, e), this.table.modules.comms.send(this.connectionSelectorsTables, "moveRow", "disconnect")), 
                this.connectionElements.forEach(function(e) {
                    e.classList.remove("tabulator-movingrow-receiving"), e.removeEventListener("mouseup", e.tabulatorElementDropEvent), 
                    delete e.tabulatorElementDropEvent;
                });
            }, _.prototype.connect = function(e, t) {
                return this.connectedTable ? (console.warn("Move Row Error - Table cannot accept connection, already connected to table:", this.connectedTable), 
                !1) : (this.connectedTable = e, this.connectedRow = t, this.table.element.classList.add("tabulator-movingrow-receiving"), 
                this.table.rowManager.getDisplayRows().forEach(function(e) {
                    "row" === e.type && e.modules.moveRow && e.modules.moveRow.mouseup && e.getElement().addEventListener("mouseup", e.modules.moveRow.mouseup);
                }), this.tableRowDropEvent = this.tableRowDrop.bind(this), this.table.element.addEventListener("mouseup", this.tableRowDropEvent), 
                this.table.options.movableRowsReceivingStart.call(this.table, t, e), 
                !0);
            }, _.prototype.disconnect = function(e) {
                e === this.connectedTable ? (this.connectedTable = !1, this.connectedRow = !1, 
                this.table.element.classList.remove("tabulator-movingrow-receiving"), 
                this.table.rowManager.getDisplayRows().forEach(function(e) {
                    "row" === e.type && e.modules.moveRow && e.modules.moveRow.mouseup && e.getElement().removeEventListener("mouseup", e.modules.moveRow.mouseup);
                }), this.table.element.removeEventListener("mouseup", this.tableRowDropEvent), 
                this.table.options.movableRowsReceivingStop.call(this.table, e)) : console.warn("Move Row Error - trying to disconnect from non connected table");
            }, _.prototype.dropComplete = function(e, t, o) {
                var i = !1;
                if (o) {
                    switch (Q(this.table.options.movableRowsSender)) {
                      case "string":
                        i = this.senders[this.table.options.movableRowsSender];
                        break;

                      case "function":
                        i = this.table.options.movableRowsSender;
                    }
                    i ? i.call(this, this.moving.getComponent(), t ? t.getComponent() : void 0, e) : this.table.options.movableRowsSender && console.warn("Mover Row Error - no matching sender found:", this.table.options.movableRowsSender), 
                    this.table.options.movableRowsSent.call(this.table, this.moving.getComponent(), t ? t.getComponent() : void 0, e);
                } else this.table.options.movableRowsSentFailed.call(this.table, this.moving.getComponent(), t ? t.getComponent() : void 0, e);
                this.endMove();
            }, _.prototype.tableRowDrop = function(e, t) {
                var o = !1, i = !1;
                switch (e.stopImmediatePropagation(), Q(this.table.options.movableRowsReceiver)) {
                  case "string":
                    o = this.receivers[this.table.options.movableRowsReceiver];
                    break;

                  case "function":
                    o = this.table.options.movableRowsReceiver;
                }
                o ? i = o.call(this, this.connectedRow.getComponent(), t ? t.getComponent() : void 0, this.connectedTable) : console.warn("Mover Row Error - no matching receiver found:", this.table.options.movableRowsReceiver), 
                (i ? this.table.options.movableRowsReceived : this.table.options.movableRowsReceivedFailed).call(this.table, this.connectedRow.getComponent(), t ? t.getComponent() : void 0, this.connectedTable), 
                this.table.modules.comms.send(this.connectedTable, "moveRow", "dropcomplete", {
                    row: t,
                    success: i
                });
            }, _.prototype.receivers = {
                insert: function(e, t, o) {
                    return this.table.addRow(e.getData(), void 0, t), !0;
                },
                add: function(e, t, o) {
                    return this.table.addRow(e.getData()), !0;
                },
                update: function(e, t, o) {
                    return !!t && (t.update(e.getData()), !0);
                },
                replace: function(e, t, o) {
                    return !!t && (this.table.addRow(e.getData(), void 0, t), t.delete(), 
                    !0);
                }
            }, _.prototype.senders = {
                delete: function(e, t, o) {
                    e.delete();
                }
            }, _.prototype.commsReceived = function(e, t, o) {
                switch (t) {
                  case "connect":
                    return this.connect(e, o.row);

                  case "disconnect":
                    return this.disconnect(e);

                  case "dropcomplete":
                    return this.dropComplete(e, o.row, o.success);
                }
            }, N.prototype.registerModule("moveRow", _), K.prototype.initializeColumn = function(o) {
                var i = this, n = !1, s = {};
                this.allowedTypes.forEach(function(e) {
                    var t, e = "mutator" + (e.charAt(0).toUpperCase() + e.slice(1));
                    o.definition[e] && (t = i.lookupMutator(o.definition[e])) && (n = !0, 
                    s[e] = {
                        mutator: t,
                        params: o.definition[e + "Params"] || {}
                    });
                }), n && (o.modules.mutate = s);
            }, K.prototype.lookupMutator = function(e) {
                var t = !1;
                switch (void 0 === e ? "undefined" : Q(e)) {
                  case "string":
                    this.mutators[e] ? t = this.mutators[e] : console.warn("Mutator Error - No such mutator found, ignoring: ", e);
                    break;

                  case "function":
                    t = e;
                }
                return t;
            }, K.prototype.transformRow = function(n, s, r) {
                var a, l = "mutator" + (s.charAt(0).toUpperCase() + s.slice(1));
                return this.enabled && this.table.columnManager.traverse(function(e) {
                    var t, o, i;
                    e.modules.mutate && (t = e.modules.mutate[l] || e.modules.mutate.mutator || !1) && (a = e.getFieldValue(void 0 !== r ? r : n), 
                    "data" != s && void 0 === a || (i = e.getComponent(), o = "function" == typeof t.params ? t.params(a, n, s, i) : t.params, 
                    e.setFieldValue(n, t.mutator(a, n, s, o, i))));
                }), n;
            }, K.prototype.transformCell = function(e, t) {
                var o = e.column.modules.mutate.mutatorEdit || e.column.modules.mutate.mutator || !1, i = {};
                return o ? (i = Object.assign(i, e.row.getData()), e.column.setFieldValue(i, t), 
                o.mutator(t, i, "edit", o.params, e.getComponent())) : t;
            }, K.prototype.enable = function() {
                this.enabled = !0;
            }, K.prototype.disable = function() {
                this.enabled = !1;
            }, K.prototype.mutators = {}, N.prototype.registerModule("mutator", K), 
            M.prototype.createElements = function() {
                var e;
                this.element = document.createElement("span"), this.element.classList.add("tabulator-paginator"), 
                this.pagesElement = document.createElement("span"), this.pagesElement.classList.add("tabulator-pages"), 
                (e = document.createElement("button")).classList.add("tabulator-page"), 
                e.setAttribute("type", "button"), e.setAttribute("role", "button"), 
                e.setAttribute("aria-label", ""), e.setAttribute("title", ""), this.firstBut = e.cloneNode(!0), 
                this.firstBut.setAttribute("data-page", "first"), this.prevBut = e.cloneNode(!0), 
                this.prevBut.setAttribute("data-page", "prev"), this.nextBut = e.cloneNode(!0), 
                this.nextBut.setAttribute("data-page", "next"), this.lastBut = e.cloneNode(!0), 
                this.lastBut.setAttribute("data-page", "last"), this.table.options.paginationSizeSelector && (this.pageSizeSelect = document.createElement("select"), 
                this.pageSizeSelect.classList.add("tabulator-page-size"));
            }, M.prototype.generatePageSizeSelectList = function() {
                var o = this, e = [];
                if (this.pageSizeSelect) {
                    if (Array.isArray(this.table.options.paginationSizeSelector)) e = this.table.options.paginationSizeSelector, 
                    this.pageSizes = e, -1 == this.pageSizes.indexOf(this.size) && e.unshift(this.size); else if (-1 == this.pageSizes.indexOf(this.size)) {
                        for (var e = [], t = 1; t < 5; t++) e.push(this.size * t);
                        this.pageSizes = e;
                    } else e = this.pageSizes;
                    for (;this.pageSizeSelect.firstChild; ) this.pageSizeSelect.removeChild(this.pageSizeSelect.firstChild);
                    e.forEach(function(e) {
                        var t = document.createElement("option");
                        !0 === (t.value = e) ? o.table.modules.localize.bind("pagination|all", function(e) {
                            t.innerHTML = e;
                        }) : t.innerHTML = e, o.pageSizeSelect.appendChild(t);
                    }), this.pageSizeSelect.value = this.size;
                }
            }, M.prototype.initialize = function(e) {
                var t, o, i = this;
                this.dataSentNames = Object.assign({}, this.paginationDataSentNames), 
                this.dataSentNames = Object.assign(this.dataSentNames, this.table.options.paginationDataSent), 
                this.dataReceivedNames = Object.assign({}, this.paginationDataReceivedNames), 
                this.dataReceivedNames = Object.assign(this.dataReceivedNames, this.table.options.paginationDataReceived), 
                i.table.modules.localize.bind("pagination|first", function(e) {
                    i.firstBut.innerHTML = e;
                }), i.table.modules.localize.bind("pagination|first_title", function(e) {
                    i.firstBut.setAttribute("aria-label", e), i.firstBut.setAttribute("title", e);
                }), i.table.modules.localize.bind("pagination|prev", function(e) {
                    i.prevBut.innerHTML = e;
                }), i.table.modules.localize.bind("pagination|prev_title", function(e) {
                    i.prevBut.setAttribute("aria-label", e), i.prevBut.setAttribute("title", e);
                }), i.table.modules.localize.bind("pagination|next", function(e) {
                    i.nextBut.innerHTML = e;
                }), i.table.modules.localize.bind("pagination|next_title", function(e) {
                    i.nextBut.setAttribute("aria-label", e), i.nextBut.setAttribute("title", e);
                }), i.table.modules.localize.bind("pagination|last", function(e) {
                    i.lastBut.innerHTML = e;
                }), i.table.modules.localize.bind("pagination|last_title", function(e) {
                    i.lastBut.setAttribute("aria-label", e), i.lastBut.setAttribute("title", e);
                }), i.firstBut.addEventListener("click", function() {
                    i.setPage(1).then(function() {}).catch(function() {});
                }), i.prevBut.addEventListener("click", function() {
                    i.previousPage().then(function() {}).catch(function() {});
                }), i.nextBut.addEventListener("click", function() {
                    i.nextPage().then(function() {}).catch(function() {});
                }), i.lastBut.addEventListener("click", function() {
                    i.setPage(i.max).then(function() {}).catch(function() {});
                }), i.table.options.paginationElement && (i.element = i.table.options.paginationElement), 
                this.pageSizeSelect && (t = document.createElement("label"), i.table.modules.localize.bind("pagination|page_size", function(e) {
                    i.pageSizeSelect.setAttribute("aria-label", e), i.pageSizeSelect.setAttribute("title", e), 
                    t.innerHTML = e;
                }), i.element.appendChild(t), i.element.appendChild(i.pageSizeSelect), 
                i.pageSizeSelect.addEventListener("change", function(e) {
                    i.setPageSize("true" == i.pageSizeSelect.value || i.pageSizeSelect.value), 
                    i.setPage(1).then(function() {}).catch(function() {});
                })), i.element.appendChild(i.firstBut), i.element.appendChild(i.prevBut), 
                i.element.appendChild(i.pagesElement), i.element.appendChild(i.nextBut), 
                i.element.appendChild(i.lastBut), i.table.options.paginationElement || e || i.table.footerManager.append(i.element, i), 
                i.mode = i.table.options.pagination, i.table.options.paginationSize ? i.size = i.table.options.paginationSize : ((o = document.createElement("div")).classList.add("tabulator-row"), 
                o.style.visibility = e, (e = document.createElement("div")).classList.add("tabulator-cell"), 
                e.innerHTML = "Page Row Test", o.appendChild(e), i.table.rowManager.getTableElement().appendChild(o), 
                i.size = Math.floor(i.table.rowManager.getElement().clientHeight / o.offsetHeight), 
                i.table.rowManager.getTableElement().removeChild(o)), i.count = i.table.options.paginationButtonCount, 
                i.generatePageSizeSelectList();
            }, M.prototype.initializeProgressive = function(e) {
                this.initialize(!0), this.mode = "progressive_" + e, this.progressiveLoad = !0;
            }, M.prototype.setDisplayIndex = function(e) {
                this.displayIndex = e;
            }, M.prototype.getDisplayIndex = function() {
                return this.displayIndex;
            }, M.prototype.setMaxRows = function(e) {
                this.max = !e || !0 === this.size ? 1 : Math.ceil(e / this.size), 
                this.page > this.max && (this.page = this.max);
            }, M.prototype.reset = function(e, t) {
                return "local" != this.mode && !e || (this.page = 1), t && (this.initialLoad = !0), 
                !0;
            }, M.prototype.setMaxPage = function(e) {
                e = parseInt(e), this.max = e || 1, this.page > this.max && (this.page = this.max, 
                this.trigger());
            }, M.prototype.setPage = function(o) {
                var i = this, n = this;
                switch (o) {
                  case "first":
                    return this.setPage(1);

                  case "prev":
                    return this.previousPage();

                  case "next":
                    return this.nextPage();

                  case "last":
                    return this.setPage(this.max);
                }
                return new Promise(function(e, t) {
                    0 < (o = parseInt(o)) && o <= i.max || "local" !== i.mode ? (i.page = o, 
                    i.trigger().then(function() {
                        e();
                    }).catch(function() {
                        t();
                    }), n.table.options.persistence && n.table.modExists("persistence", !0) && n.table.modules.persistence.config.page && n.table.modules.persistence.save("page")) : (console.warn("Pagination Error - Requested page is out of range of 1 - " + i.max + ":", o), 
                    t());
                });
            }, M.prototype.setPageToRow = function(i) {
                var n = this;
                return new Promise(function(e, t) {
                    var o = n.table.rowManager.getDisplayRows(n.displayIndex - 1).indexOf(i);
                    -1 < o ? (o = !0 === n.size ? 1 : Math.ceil((o + 1) / n.size), 
                    n.setPage(o).then(function() {
                        e();
                    }).catch(function() {
                        t();
                    })) : (console.warn("Pagination Error - Requested row is not visible"), 
                    t());
                });
            }, M.prototype.setPageSize = function(e) {
                0 < (e = !0 !== e ? parseInt(e) : e) && (this.size = e), this.pageSizeSelect && this.generatePageSizeSelectList(), 
                this.table.options.persistence && this.table.modExists("persistence", !0) && this.table.modules.persistence.config.page && this.table.modules.persistence.save("page");
            }, M.prototype._setPageButtons = function() {
                for (var e = this, t = Math.floor((this.count - 1) / 2), o = Math.ceil((this.count - 1) / 2), t = this.max - this.page + t + 1 < this.count ? this.max - this.count + 1 : Math.max(this.page - t, 1), i = this.page <= o ? Math.min(this.count, this.max) : Math.min(this.page + o, this.max); e.pagesElement.firstChild; ) e.pagesElement.removeChild(e.pagesElement.firstChild);
                1 == e.page ? (e.firstBut.disabled = !0, e.prevBut.disabled = !0) : (e.firstBut.disabled = !1, 
                e.prevBut.disabled = !1), e.page == e.max ? (e.lastBut.disabled = !0, 
                e.nextBut.disabled = !0) : (e.lastBut.disabled = !1, e.nextBut.disabled = !1);
                for (var n = t; n <= i; n++) 0 < n && n <= e.max && e.pagesElement.appendChild(e._generatePageButton(n));
                this.footerRedraw();
            }, M.prototype._generatePageButton = function(t) {
                var o = this, i = document.createElement("button");
                return i.classList.add("tabulator-page"), t == o.page && i.classList.add("active"), 
                i.setAttribute("type", "button"), i.setAttribute("role", "button"), 
                o.table.modules.localize.bind("pagination|page_title", function(e) {
                    i.setAttribute("aria-label", e + " " + t), i.setAttribute("title", e + " " + t);
                }), i.setAttribute("data-page", t), i.textContent = t, i.addEventListener("click", function(e) {
                    o.setPage(t).then(function() {}).catch(function() {});
                }), i;
            }, M.prototype.previousPage = function() {
                var o = this;
                return new Promise(function(e, t) {
                    1 < o.page ? (o.page--, o.trigger().then(function() {
                        e();
                    }).catch(function() {
                        t();
                    }), o.table.options.persistence && o.table.modExists("persistence", !0) && o.table.modules.persistence.config.page && o.table.modules.persistence.save("page")) : (console.warn("Pagination Error - Previous page would be less than page 1:", 0), 
                    t());
                });
            }, M.prototype.nextPage = function() {
                var o = this;
                return new Promise(function(e, t) {
                    o.page < o.max ? (o.page++, o.trigger().then(function() {
                        e();
                    }).catch(function() {
                        t();
                    }), o.table.options.persistence && o.table.modExists("persistence", !0) && o.table.modules.persistence.config.page && o.table.modules.persistence.save("page")) : (o.progressiveLoad || console.warn("Pagination Error - Next page would be greater than maximum page of " + o.max + ":", o.max + 1), 
                    t());
                });
            }, M.prototype.getPage = function() {
                return this.page;
            }, M.prototype.getPageMax = function() {
                return this.max;
            }, M.prototype.getPageSize = function(e) {
                return this.size;
            }, M.prototype.getMode = function() {
                return this.mode;
            }, M.prototype.getRows = function(e) {
                var t, o, i;
                if ("local" != this.mode) return this._setPageButtons(), e.slice(0);
                t = [], i = !0 === this.size ? (o = 0, e.length) : (o = this.size * (this.page - 1)) + parseInt(this.size), 
                this._setPageButtons();
                for (var n = o; n < i; n++) e[n] && t.push(e[n]);
                return t;
            }, M.prototype.trigger = function() {
                var o, i = this;
                return new Promise(function(e, t) {
                    switch (i.mode) {
                      case "local":
                        o = i.table.rowManager.scrollLeft, i.table.rowManager.refreshActiveData("page"), 
                        i.table.rowManager.scrollHorizontal(o), i.table.options.pageLoaded.call(i.table, i.getPage()), 
                        e();
                        break;

                      case "remote":
                      case "progressive_load":
                      case "progressive_scroll":
                        i.table.modules.ajax.blockActiveRequest(), i._getRemotePage().then(function() {
                            e();
                        }).catch(function() {
                            t();
                        });
                        break;

                      default:
                        console.warn("Pagination Error - no such pagination mode:", i.mode), 
                        t();
                    }
                });
            }, M.prototype._getRemotePage = function() {
                var i, n, s = this, r = this;
                return new Promise(function(t, o) {
                    var e;
                    r.table.modExists("ajax", !0) || o(), i = N.prototype.helpers.deepClone(r.table.modules.ajax.getParams() || {}), 
                    (n = r.table.modules.ajax.getParams())[s.dataSentNames.page] = r.page, 
                    s.size && (n[s.dataSentNames.size] = s.size), s.table.options.ajaxSorting && s.table.modExists("sort") && ((e = r.table.modules.sort.getSort()).forEach(function(e) {
                        delete e.column;
                    }), n[s.dataSentNames.sorters] = e), s.table.options.ajaxFiltering && s.table.modExists("filter") && (e = r.table.modules.filter.getFilters(!0, !0), 
                    n[s.dataSentNames.filters] = e), r.table.modules.ajax.setParams(n), 
                    r.table.modules.ajax.sendRequest(s.progressiveLoad).then(function(e) {
                        r._parseRemoteData(e), t();
                    }).catch(function(e) {
                        o();
                    }), r.table.modules.ajax.setParams(i);
                });
            }, M.prototype._parseRemoteData = function(e) {
                var t, o, i = this;
                if (void 0 === e[this.dataReceivedNames.last_page] && console.warn("Remote Pagination Error - Server response missing '" + this.dataReceivedNames.last_page + "' property"), 
                e[this.dataReceivedNames.data]) {
                    if (this.max = parseInt(e[this.dataReceivedNames.last_page]) || 1, 
                    this.progressiveLoad) switch (this.mode) {
                      case "progressive_load":
                        1 == this.page ? this.table.rowManager.setData(e[this.dataReceivedNames.data], !1, this.initialLoad && 1 == this.page) : this.table.rowManager.addRows(e[this.dataReceivedNames.data]), 
                        this.page < this.max && setTimeout(function() {
                            i.nextPage().then(function() {}).catch(function() {});
                        }, i.table.options.ajaxProgressiveLoadDelay);
                        break;

                      case "progressive_scroll":
                        e = this.table.rowManager.getData().concat(e[this.dataReceivedNames.data]), 
                        this.table.rowManager.setData(e, !0, this.initialLoad && 1 == this.page), 
                        o = this.table.options.ajaxProgressiveLoadScrollMargin || 2 * this.table.rowManager.element.clientHeight, 
                        i.table.rowManager.element.scrollHeight <= i.table.rowManager.element.clientHeight + o && i.nextPage().then(function() {}).catch(function() {});
                    } else t = this.table.rowManager.scrollLeft, this.table.rowManager.setData(e[this.dataReceivedNames.data], !1, this.initialLoad && 1 == this.page), 
                    this.table.rowManager.scrollHorizontal(t), this.table.columnManager.scrollHorizontal(t), 
                    this.table.options.pageLoaded.call(this.table, this.getPage());
                    this.initialLoad = !1;
                } else console.warn("Remote Pagination Error - Server response missing '" + this.dataReceivedNames.data + "' property");
            }, M.prototype.footerRedraw = function() {
                var e = this.table.footerManager.element;
                (Math.ceil(e.clientWidth) - e.scrollWidth < 0 || (this.pagesElement.style.display = "", 
                Math.ceil(e.clientWidth) - e.scrollWidth < 0)) && (this.pagesElement.style.display = "none");
            }, M.prototype.paginationDataSentNames = {
                page: "page",
                size: "size",
                sorters: "sorters",
                filters: "filters"
            }, M.prototype.paginationDataReceivedNames = {
                current_page: "current_page",
                last_page: "last_page",
                data: "data"
            }, N.prototype.registerModule("page", M), R.prototype.localStorageTest = function() {
                var e = "_tabulator_test";
                try {
                    return window.localStorage.setItem(e, e), window.localStorage.removeItem(e), 
                    !0;
                } catch (e) {
                    return !1;
                }
            }, R.prototype.initialize = function() {
                var e, t = this.table.options.persistenceMode, o = this.table.options.persistenceID;
                this.mode = !0 !== t ? t : this.localStorageTest() ? "local" : "cookie", 
                this.table.options.persistenceReaderFunc ? "function" == typeof this.table.options.persistenceReaderFunc ? this.readFunc = this.table.options.persistenceReaderFunc : this.readers[this.table.options.persistenceReaderFunc] ? this.readFunc = this.readers[this.table.options.persistenceReaderFunc] : console.warn("Persistence Read Error - invalid reader set", this.table.options.persistenceReaderFunc) : this.readers[this.mode] ? this.readFunc = this.readers[this.mode] : console.warn("Persistence Read Error - invalid reader set", this.mode), 
                this.table.options.persistenceWriterFunc ? "function" == typeof this.table.options.persistenceWriterFunc ? this.writeFunc = this.table.options.persistenceWriterFunc : this.readers[this.table.options.persistenceWriterFunc] ? this.writeFunc = this.readers[this.table.options.persistenceWriterFunc] : console.warn("Persistence Write Error - invalid reader set", this.table.options.persistenceWriterFunc) : this.writers[this.mode] ? this.writeFunc = this.writers[this.mode] : console.warn("Persistence Write Error - invalid writer set", this.mode), 
                this.id = "tabulator-" + (o || this.table.element.getAttribute("id") || ""), 
                this.config = {
                    sort: !0 === this.table.options.persistence || this.table.options.persistence.sort,
                    filter: !0 === this.table.options.persistence || this.table.options.persistence.filter,
                    group: !0 === this.table.options.persistence || this.table.options.persistence.group,
                    page: !0 === this.table.options.persistence || this.table.options.persistence.page,
                    columns: !0 === this.table.options.persistence ? [ "title", "width", "visible" ] : this.table.options.persistence.columns
                }, this.config.page && (e = this.retreiveData("page")) && (void 0 === e.paginationSize || !0 !== this.config.page && !this.config.page.size || (this.table.options.paginationSize = e.paginationSize), 
                void 0 === e.paginationInitialPage || !0 !== this.config.page && !this.config.page.page || (this.table.options.paginationInitialPage = e.paginationInitialPage)), 
                this.config.group && (e = this.retreiveData("group")) && (void 0 === e.groupBy || !0 !== this.config.group && !this.config.group.groupBy || (this.table.options.groupBy = e.groupBy), 
                void 0 === e.groupStartOpen || !0 !== this.config.group && !this.config.group.groupStartOpen || (this.table.options.groupStartOpen = e.groupStartOpen), 
                void 0 === e.groupHeader || !0 !== this.config.group && !this.config.group.groupHeader || (this.table.options.groupHeader = e.groupHeader)), 
                this.config.columns && (this.table.options.columns = this.load("columns", this.table.options.columns));
            }, R.prototype.initializeColumn = function(e) {
                var i, n = this;
                this.config.columns && (this.defWatcherBlock = !0, i = e.getDefinition(), 
                (!0 === this.config.columns ? Object.keys(i) : this.config.columns).forEach(function(e) {
                    var t = Object.getOwnPropertyDescriptor(i, e), o = i[e];
                    t && Object.defineProperty(i, e, {
                        set: function(e) {
                            o = e, n.defWatcherBlock || n.save("columns"), t.set && t.set(e);
                        },
                        get: function() {
                            return t.get && t.get(), o;
                        }
                    });
                }), this.defWatcherBlock = !1);
            }, R.prototype.load = function(e, t) {
                e = this.retreiveData(e);
                return e = t ? e ? this.mergeDefinition(t, e) : t : e;
            }, R.prototype.retreiveData = function(e) {
                return !!this.readFunc && this.readFunc(this.id, e);
            }, R.prototype.mergeDefinition = function(n, o) {
                var s = this, r = [];
                return (o = o || []).forEach(function(t, e) {
                    var o, i = s._findColumn(n, t);
                    i && (!0 === s.config.columns || null == s.config.columns ? (o = Object.keys(i)).push("width") : o = s.config.columns, 
                    o.forEach(function(e) {
                        "columns" !== e && void 0 !== t[e] && (i[e] = t[e]);
                    }), i.columns && (i.columns = s.mergeDefinition(i.columns, t.columns)), 
                    r.push(i));
                }), n.forEach(function(e, t) {
                    s._findColumn(o, e) || (t < r.length ? r.splice(t, 0, e) : r.push(e));
                }), r;
            }, R.prototype._findColumn = function(e, t) {
                var o = t.columns ? "group" : t.field ? "field" : "object";
                return e.find(function(e) {
                    switch (o) {
                      case "group":
                        return e.title === t.title && e.columns.length === t.columns.length;

                      case "field":
                        return e.field === t.field;

                      case "object":
                        return e === t;
                    }
                });
            }, R.prototype.save = function(e) {
                var t = {};
                switch (e) {
                  case "columns":
                    t = this.parseColumns(this.table.columnManager.getColumns());
                    break;

                  case "filter":
                    t = this.table.modules.filter.getFilters();
                    break;

                  case "sort":
                    t = this.validateSorters(this.table.modules.sort.getSort());
                    break;

                  case "group":
                    t = this.getGroupConfig();
                    break;

                  case "page":
                    t = this.getPageConfig();
                }
                this.writeFunc && this.writeFunc(this.id, e, t);
            }, R.prototype.validateSorters = function(e) {
                return e.forEach(function(e) {
                    e.column = e.field, delete e.field;
                }), e;
            }, R.prototype.getGroupConfig = function() {
                var e = {};
                return this.config.group && (!0 !== this.config.group && !this.config.group.groupBy || (e.groupBy = this.table.options.groupBy), 
                !0 !== this.config.group && !this.config.group.groupStartOpen || (e.groupStartOpen = this.table.options.groupStartOpen), 
                !0 !== this.config.group && !this.config.group.groupHeader || (e.groupHeader = this.table.options.groupHeader)), 
                e;
            }, R.prototype.getPageConfig = function() {
                var e = {};
                return this.config.page && (!0 !== this.config.page && !this.config.page.size || (e.paginationSize = this.table.modules.page.getPageSize()), 
                !0 !== this.config.page && !this.config.page.page || (e.paginationInitialPage = this.table.modules.page.getPage())), 
                e;
            }, R.prototype.parseColumns = function(e) {
                var n = this, s = [], r = [ "headerContextMenu", "headerMenu", "contextMenu", "clickMenu" ];
                return e.forEach(function(t) {
                    var e, o = {}, i = t.getDefinition();
                    t.isGroup ? (o.title = i.title, o.columns = n.parseColumns(t.getColumns())) : (o.field = t.getField(), 
                    !0 === n.config.columns || null == n.config.columns ? (e = Object.keys(i)).push("width") : e = n.config.columns, 
                    e.forEach(function(e) {
                        switch (e) {
                          case "width":
                            o.width = t.getWidth();
                            break;

                          case "visible":
                            o.visible = t.visible;
                            break;

                          default:
                            "function" != typeof i[e] && -1 === r.indexOf(e) && (o[e] = i[e]);
                        }
                    })), s.push(o);
                }), s;
            }, R.prototype.readers = {
                local: function(e, t) {
                    e = localStorage.getItem(e + "-" + t);
                    return !!e && JSON.parse(e);
                },
                cookie: function(e, t) {
                    var o, e = e + "-" + t, i = (t = document.cookie).indexOf(e + "=");
                    //if cookie exists, decode and load column data into tabulator
                    return !!(o = -1 < i ? (t = -1 < (i = (t = t.substr(i)).indexOf(";")) ? t.substr(0, i) : t).replace(e + "=", "") : o) && JSON.parse(o);
                }
            }, R.prototype.writers = {
                local: function(e, t, o) {
                    localStorage.setItem(e + "-" + t, JSON.stringify(o));
                },
                cookie: function(e, t, o) {
                    var i = new Date();
                    i.setDate(i.getDate() + 1e4), document.cookie = e + "-" + t + "=" + JSON.stringify(o) + "; expires=" + i.toUTCString();
                }
            }, N.prototype.registerModule("persistence", R), Y.prototype.initialize = function() {
                window.addEventListener("beforeprint", this.replaceTable.bind(this)), 
                window.addEventListener("afterprint", this.cleanup.bind(this));
            }, Y.prototype.replaceTable = function() {
                this.manualBlock || (this.element = document.createElement("div"), 
                this.element.classList.add("tabulator-print-table"), this.element.appendChild(this.table.modules.export.genereateTable(this.table.options.printConfig, this.table.options.printStyled, this.table.options.printRowRange, "print")), 
                this.table.element.style.display = "none", this.table.element.parentNode.insertBefore(this.element, this.table.element));
            }, Y.prototype.cleanup = function() {
                document.body.classList.remove("tabulator-print-fullscreen-hide"), 
                this.element && this.element.parentNode && (this.element.parentNode.removeChild(this.element), 
                this.table.element.style.display = "");
            }, Y.prototype.printFullscreen = function(e, t, o) {
                var i = window.scrollX, n = window.scrollY, s = document.createElement("div"), r = document.createElement("div"), o = this.table.modules.export.genereateTable(void 0 !== o ? o : this.table.options.printConfig, void 0 !== t ? t : this.table.options.printStyled, e, "print");
                this.manualBlock = !0, this.element = document.createElement("div"), 
                this.element.classList.add("tabulator-print-fullscreen"), this.table.options.printHeader && (s.classList.add("tabulator-print-header"), 
                "string" == typeof (t = "function" == typeof this.table.options.printHeader ? this.table.options.printHeader.call(this.table) : this.table.options.printHeader) ? s.innerHTML = t : s.appendChild(t), 
                this.element.appendChild(s)), this.element.appendChild(o), this.table.options.printFooter && (r.classList.add("tabulator-print-footer"), 
                "string" == typeof (e = "function" == typeof this.table.options.printFooter ? this.table.options.printFooter.call(this.table) : this.table.options.printFooter) ? r.innerHTML = e : r.appendChild(e), 
                this.element.appendChild(r)), document.body.classList.add("tabulator-print-fullscreen-hide"), 
                document.body.appendChild(this.element), this.table.options.printFormatter && this.table.options.printFormatter(this.element, o), 
                window.print(), this.cleanup(), window.scrollTo(i, n), this.manualBlock = !1;
            }, N.prototype.registerModule("print", Y), S.prototype.watchData = function(r) {
                var a, l = this;
                this.currentVersion++, a = this.currentVersion, l.unwatchData(), 
                l.data = r, l.origFuncs.push = r.push, Object.defineProperty(l.data, "push", {
                    enumerable: !1,
                    configurable: !0,
                    value: function() {
                        var e = Array.from(arguments);
                        return l.blocked || a !== l.currentVersion || e.forEach(function(e) {
                            l.table.rowManager.addRowActual(e, !1);
                        }), l.origFuncs.push.apply(r, arguments);
                    }
                }), l.origFuncs.unshift = r.unshift, Object.defineProperty(l.data, "unshift", {
                    enumerable: !1,
                    configurable: !0,
                    value: function() {
                        var e = Array.from(arguments);
                        return l.blocked || a !== l.currentVersion || e.forEach(function(e) {
                            l.table.rowManager.addRowActual(e, !0);
                        }), l.origFuncs.unshift.apply(r, arguments);
                    }
                }), l.origFuncs.shift = r.shift, Object.defineProperty(l.data, "shift", {
                    enumerable: !1,
                    configurable: !0,
                    value: function() {
                        var e;
                        return l.blocked || a !== l.currentVersion || l.data.length && (e = l.table.rowManager.getRowFromDataObject(l.data[0])) && e.deleteActual(), 
                        l.origFuncs.shift.call(r);
                    }
                }), l.origFuncs.pop = r.pop, Object.defineProperty(l.data, "pop", {
                    enumerable: !1,
                    configurable: !0,
                    value: function() {
                        var e;
                        return l.blocked || a !== l.currentVersion || l.data.length && (e = l.table.rowManager.getRowFromDataObject(l.data[l.data.length - 1])) && e.deleteActual(), 
                        l.origFuncs.pop.call(r);
                    }
                }), l.origFuncs.splice = r.splice, Object.defineProperty(l.data, "splice", {
                    enumerable: !1,
                    configurable: !0,
                    value: function() {
                        var t, o, e = Array.from(arguments), i = e[0] < 0 ? r.length + e[0] : e[0], n = e[1], s = !!e[2] && e.slice(2);
                        return !l.blocked && a === l.currentVersion && (s && ((t = !!r[i] && l.table.rowManager.getRowFromDataObject(r[i])) ? s.forEach(function(e) {
                            l.table.rowManager.addRowActual(e, !0, t, !0);
                        }) : (s = s.slice().reverse()).forEach(function(e) {
                            l.table.rowManager.addRowActual(e, !0, !1, !0);
                        })), 0 !== n && (o = r.slice(i, void 0 === e[1] ? e[1] : i + n)).forEach(function(e, t) {
                            e = l.table.rowManager.getRowFromDataObject(e);
                            e && e.deleteActual(t !== o.length - 1);
                        }), s || 0 !== n) && l.table.rowManager.reRenderInPosition(), 
                        l.origFuncs.splice.apply(r, arguments);
                    }
                });
            }, S.prototype.unwatchData = function() {
                if (!1 !== this.data) for (var e in this.origFuncs) Object.defineProperty(this.data, e, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: this.origFuncs.key
                });
            }, S.prototype.watchRow = function(e) {
                var t, o = e.getData();
                for (t in this.blocked = !0, o) this.watchKey(e, o, t);
                this.table.options.dataTree && this.watchTreeChildren(e), this.blocked = !1;
            }, S.prototype.watchTreeChildren = function(e) {
                var t = this, o = e.getData()[this.table.options.dataTreeChildField], i = {};
                function n() {
                    t.table.modules.dataTree.initializeRow(e), t.table.modules.dataTree.layoutRow(e), 
                    t.table.rowManager.refreshActiveData("tree", !1, !0);
                }
                o && (i.push = o.push, Object.defineProperty(o, "push", {
                    enumerable: !1,
                    configurable: !0,
                    value: function() {
                        var e = i.push.apply(o, arguments);
                        return n(), e;
                    }
                }), i.unshift = o.unshift, Object.defineProperty(o, "unshift", {
                    enumerable: !1,
                    configurable: !0,
                    value: function() {
                        var e = i.unshift.apply(o, arguments);
                        return n(), e;
                    }
                }), i.shift = o.shift, Object.defineProperty(o, "shift", {
                    enumerable: !1,
                    configurable: !0,
                    value: function() {
                        var e = i.shift.call(o);
                        return n(), e;
                    }
                }), i.pop = o.pop, Object.defineProperty(o, "pop", {
                    enumerable: !1,
                    configurable: !0,
                    value: function() {
                        var e = i.pop.call(o);
                        return n(), e;
                    }
                }), i.splice = o.splice, Object.defineProperty(o, "splice", {
                    enumerable: !1,
                    configurable: !0,
                    value: function() {
                        var e = i.splice.apply(o, arguments);
                        return n(), e;
                    }
                }));
            }, S.prototype.watchKey = function(o, e, i) {
                var n = this, s = Object.getOwnPropertyDescriptor(e, i), r = e[i], a = this.currentVersion;
                Object.defineProperty(e, i, {
                    set: function(e) {
                        var t;
                        r = e, n.blocked || a !== n.currentVersion || ((t = {})[i] = e, 
                        o.updateData(t)), s.set && s.set(e);
                    },
                    get: function() {
                        return s.get && s.get(), r;
                    }
                });
            }, S.prototype.unwatchRow = function(e) {
                var t, o = e.getData();
                for (t in o) Object.defineProperty(o, t, {
                    value: o[t]
                });
            }, S.prototype.block = function() {
                this.blocked = !0;
            }, S.prototype.unblock = function() {
                this.blocked = !1;
            }, N.prototype.registerModule("reactiveData", S), q.prototype.initializeColumn = function(e, o, t) {
                var i, n, s, r = this, a = this.table.options.resizableColumns;
                "header" === e && (s = "textarea" == o.definition.formatter || o.definition.variableHeight, 
                o.modules.resize = {
                    variableHeight: s
                }), !0 !== a && a != e || ((i = document.createElement("div")).className = "tabulator-col-resize-handle", 
                (n = document.createElement("div")).className = "tabulator-col-resize-handle prev", 
                i.addEventListener("click", function(e) {
                    e.stopPropagation();
                }), i.addEventListener("mousedown", s = function(e) {
                    var t = o.getLastColumn();
                    t && r._checkResizability(t) && (r.startColumn = o, r._mouseDown(e, t, i));
                }), i.addEventListener("touchstart", s, {
                    passive: !0
                }), i.addEventListener("dblclick", function(e) {
                    var t = o.getLastColumn();
                    t && r._checkResizability(t) && (e.stopPropagation(), t.reinitializeWidth(!0));
                }), n.addEventListener("click", function(e) {
                    e.stopPropagation();
                }), n.addEventListener("mousedown", a = function(e) {
                    var t = o.getFirstColumn();
                    t && (t = 0 < (t = r.table.columnManager.findColumnIndex(t)) && r.table.columnManager.getColumnByIndex(t - 1)) && r._checkResizability(t) && (r.startColumn = o, 
                    r._mouseDown(e, t, n));
                }), n.addEventListener("touchstart", a, {
                    passive: !0
                }), n.addEventListener("dblclick", function(e) {
                    var t = o.getFirstColumn();
                    t && (t = 0 < (t = r.table.columnManager.findColumnIndex(t)) && r.table.columnManager.getColumnByIndex(t - 1)) && r._checkResizability(t) && (e.stopPropagation(), 
                    t.reinitializeWidth(!0));
                }), t.appendChild(i), t.appendChild(n));
            }, q.prototype._checkResizability = function(e) {
                return void 0 !== e.definition.resizable ? e.definition.resizable : this.table.options.resizableColumns;
            }, q.prototype._mouseDown = function(e, t, o) {
                var i = this;
                function n(e) {
                    i.table.rtl ? t.setWidth(i.startWidth - ((void 0 === e.screenX ? e.touches[0] : e).screenX - i.startX)) : t.setWidth(i.startWidth + ((void 0 === e.screenX ? e.touches[0] : e).screenX - i.startX)), 
                    i.table.options.virtualDomHoz && i.table.vdomHoz.reinitialize(!0), 
                    !i.table.browserSlow && t.modules.resize && t.modules.resize.variableHeight && t.checkCellHeights();
                }
                function s(e) {
                    i.startColumn.modules.edit && (i.startColumn.modules.edit.blocked = !1), 
                    i.table.browserSlow && t.modules.resize && t.modules.resize.variableHeight && t.checkCellHeights(), 
                    document.body.removeEventListener("mouseup", s), document.body.removeEventListener("mousemove", n), 
                    o.removeEventListener("touchmove", n), o.removeEventListener("touchend", s), 
                    i.table.element.classList.remove("tabulator-block-select"), 
                    i.table.options.persistence && i.table.modExists("persistence", !0) && i.table.modules.persistence.config.columns && i.table.modules.persistence.save("columns"), 
                    i.table.options.columnResized.call(i.table, t.getComponent());
                }
                i.table.element.classList.add("tabulator-block-select"), e.stopPropagation(), 
                i.startColumn.modules.edit && (i.startColumn.modules.edit.blocked = !0), 
                i.startX = (void 0 === e.screenX ? e.touches[0] : e).screenX, i.startWidth = t.getWidth(), 
                document.body.addEventListener("mousemove", n), document.body.addEventListener("mouseup", s), 
                o.addEventListener("touchmove", n, {
                    passive: !0
                }), o.addEventListener("touchend", s);
            }, N.prototype.registerModule("resizeColumns", q), X.prototype.initializeRow = function(o) {
                function e(e) {
                    i.startRow = o, i._mouseDown(e, o, s);
                }
                function t(e) {
                    var t = i.table.rowManager.prevDisplayRow(o);
                    t && (i.startRow = t, i._mouseDown(e, t, r));
                }
                var i = this, n = o.getElement(), s = document.createElement("div"), r = (s.className = "tabulator-row-resize-handle", 
                document.createElement("div"));
                r.className = "tabulator-row-resize-handle prev", s.addEventListener("click", function(e) {
                    e.stopPropagation();
                }), s.addEventListener("mousedown", e), s.addEventListener("touchstart", e, {
                    passive: !0
                }), r.addEventListener("click", function(e) {
                    e.stopPropagation();
                });
                r.addEventListener("mousedown", t), r.addEventListener("touchstart", t, {
                    passive: !0
                }), n.appendChild(s), n.appendChild(r);
            }, X.prototype._mouseDown = function(e, t, o) {
                var i = this;
                function n(e) {
                    t.setHeight(i.startHeight + ((void 0 === e.screenY ? e.touches[0] : e).screenY - i.startY));
                }
                function s(e) {
                    document.body.removeEventListener("mouseup", n), document.body.removeEventListener("mousemove", n), 
                    o.removeEventListener("touchmove", n), o.removeEventListener("touchend", s), 
                    i.table.element.classList.remove("tabulator-block-select"), 
                    i.table.options.rowResized.call(this.table, t.getComponent());
                }
                i.table.element.classList.add("tabulator-block-select"), e.stopPropagation(), 
                i.startY = (void 0 === e.screenY ? e.touches[0] : e).screenY, i.startHeight = t.getHeight(), 
                document.body.addEventListener("mousemove", n), document.body.addEventListener("mouseup", s), 
                o.addEventListener("touchmove", n, {
                    passive: !0
                }), o.addEventListener("touchend", s);
            }, N.prototype.registerModule("resizeRows", X), $.prototype.initialize = function(e) {
                var t, o = this, i = this.table;
                this.tableHeight = i.element.clientHeight, this.tableWidth = i.element.clientWidth, 
                i.element.parentNode && (this.containerHeight = i.element.parentNode.clientHeight, 
                this.containerWidth = i.element.parentNode.clientWidth), "undefined" != typeof ResizeObserver && "virtual" === i.rowManager.getRenderMode() ? (this.autoResize = !0, 
                this.observer = new ResizeObserver(function(e) {
                    var t;
                    i.browserMobile && (!i.browserMobile || i.modules.edit.currentCell) || (t = Math.floor(e[0].contentRect.height), 
                    e = Math.floor(e[0].contentRect.width), o.tableHeight == t && o.tableWidth == e) || (o.tableHeight = t, 
                    o.tableWidth = e, i.element.parentNode && (o.containerHeight = i.element.parentNode.clientHeight, 
                    o.containerWidth = i.element.parentNode.clientWidth), i.options.virtualDomHoz && i.vdomHoz.reinitialize(!0), 
                    i.redraw());
                }), this.observer.observe(i.element), t = window.getComputedStyle(i.element), 
                this.table.element.parentNode && !this.table.rowManager.fixedHeight && (t.getPropertyValue("max-height") || t.getPropertyValue("min-height")) && (this.containerObserver = new ResizeObserver(function(e) {
                    var t;
                    i.browserMobile && (!i.browserMobile || i.modules.edit.currentCell) || (t = Math.floor(e[0].contentRect.height), 
                    e = Math.floor(e[0].contentRect.width), o.containerHeight == t && o.containerWidth == e || (o.containerHeight = t, 
                    o.containerWidth = e, o.tableHeight = i.element.clientHeight, 
                    o.tableWidth = i.element.clientWidth), i.options.virtualDomHoz && i.vdomHoz.reinitialize(!0), 
                    i.redraw());
                }), this.containerObserver.observe(this.table.element.parentNode))) : (this.binding = function() {
                    i.browserMobile && (!i.browserMobile || i.modules.edit.currentCell) || (i.options.virtualDomHoz && i.vdomHoz.reinitialize(!0), 
                    i.redraw());
                }, window.addEventListener("resize", this.binding));
            }, $.prototype.clearBindings = function(e) {
                this.binding && window.removeEventListener("resize", this.binding), 
                this.observer && this.observer.unobserve(this.table.element), this.containerObserver && this.containerObserver.unobserve(this.table.element.parentNode);
            }, N.prototype.registerModule("resizeTable", $), L.prototype.initialize = function() {
                var o = this, i = [];
                this.mode = this.table.options.responsiveLayout, this.collapseFormatter = this.table.options.responsiveLayoutCollapseFormatter || this.formatCollapsedData, 
                this.collapseStartOpen = this.table.options.responsiveLayoutCollapseStartOpen, 
                this.hiddenColumns = [], this.table.columnManager.columnsByIndex.forEach(function(e, t) {
                    e.modules.responsive && e.modules.responsive.order && e.modules.responsive.visible && (e.modules.responsive.index = t, 
                    i.push(e), e.visible || "collapse" !== o.mode || o.hiddenColumns.push(e));
                }), i = (i = i.reverse()).sort(function(e, t) {
                    return t.modules.responsive.order - e.modules.responsive.order || t.modules.responsive.index - e.modules.responsive.index;
                }), this.columns = i, "collapse" === this.mode && this.generateCollapsedContent();
                for (var e, t = this.table.columnManager.columnsByIndex, n = Array.isArray(t), s = 0, t = n ? t : t[Symbol.iterator](); ;) {
                    if (n) {
                        if (s >= t.length) break;
                        e = t[s++];
                    } else {
                        if ((s = t.next()).done) break;
                        e = s.value;
                    }
                    var r = e;
                    if ("responsiveCollapse" == r.definition.formatter) {
                        this.collapseHandleColumn = r;
                        break;
                    }
                }
                this.collapseHandleColumn && (this.hiddenColumns.length ? this.collapseHandleColumn.show() : this.collapseHandleColumn.hide());
            }, L.prototype.initializeColumn = function(e) {
                var t = e.getDefinition();
                e.modules.responsive = {
                    order: void 0 === t.responsive ? 1 : t.responsive,
                    visible: !1 !== t.visible
                };
            }, L.prototype.initializeRow = function(e) {
                var t;
                "calc" !== e.type && ((t = document.createElement("div")).classList.add("tabulator-responsive-collapse"), 
                e.modules.responsiveLayout = {
                    element: t,
                    open: this.collapseStartOpen
                }, this.collapseStartOpen || (t.style.display = "none"));
            }, L.prototype.layoutRow = function(e) {
                var t = e.getElement();
                e.modules.responsiveLayout && (t.appendChild(e.modules.responsiveLayout.element), 
                this.generateCollapsedRowContent(e));
            }, L.prototype.updateColumnVisibility = function(e, t) {
                e.modules.responsive && (e.modules.responsive.visible = t, this.initialize());
            }, L.prototype.hideColumn = function(e) {
                var t = this.hiddenColumns.length;
                e.hide(!1, !0), "collapse" === this.mode && (this.hiddenColumns.unshift(e), 
                this.generateCollapsedContent(), this.collapseHandleColumn) && !t && this.collapseHandleColumn.show();
            }, L.prototype.showColumn = function(e) {
                e.show(!1, !0), e.setWidth(e.getWidth()), "collapse" === this.mode && (-1 < (e = this.hiddenColumns.indexOf(e)) && this.hiddenColumns.splice(e, 1), 
                this.generateCollapsedContent(), this.collapseHandleColumn) && !this.hiddenColumns.length && this.collapseHandleColumn.hide();
            }, L.prototype.update = function() {
                for (var e = this, t = !0; t; ) {
                    var o, i = "fitColumns" == e.table.modules.layout.getMode() ? e.table.columnManager.getFlexBaseWidth() : e.table.columnManager.getWidth(), i = (e.table.options.headerVisible ? e.table.columnManager : e.table).element.clientWidth - i;
                    i < 0 ? (o = e.columns[e.index]) ? (e.hideColumn(o), e.index++) : t = !1 : (o = e.columns[e.index - 1]) && 0 < i && i >= o.getWidth() ? (e.showColumn(o), 
                    e.index--) : t = !1, e.table.rowManager.activeRowsCount || e.table.rowManager.renderEmptyScroll();
                }
            }, L.prototype.generateCollapsedContent = function() {
                var t = this;
                this.table.rowManager.getDisplayRows().forEach(function(e) {
                    t.generateCollapsedRowContent(e);
                });
            }, L.prototype.generateCollapsedRowContent = function(e) {
                var t;
                if (e.modules.responsiveLayout) {
                    for (t = e.modules.responsiveLayout.element; t.firstChild; ) t.removeChild(t.firstChild);
                    (e = this.collapseFormatter(this.generateCollapsedRowData(e))) && t.appendChild(e);
                }
            }, L.prototype.generateCollapsedRowData = function(o) {
                var i, n = this, s = o.getData(), r = [];
                return this.hiddenColumns.forEach(function(e) {
                    var t = e.getFieldValue(s);
                    e.definition.title && e.field && (e.modules.format && n.table.options.responsiveLayoutCollapseUseFormatters ? (i = {
                        value: !1,
                        data: {},
                        getValue: function() {
                            return t;
                        },
                        getData: function() {
                            return s;
                        },
                        getElement: function() {
                            return document.createElement("div");
                        },
                        getRow: function() {
                            return o.getComponent();
                        },
                        getColumn: function() {
                            return e.getComponent();
                        }
                    }, r.push({
                        field: e.field,
                        title: e.definition.title,
                        value: e.modules.format.formatter.call(n.table.modules.format, i, e.modules.format.params)
                    })) : r.push({
                        field: e.field,
                        title: e.definition.title,
                        value: t
                    }));
                }), r;
            }, L.prototype.formatCollapsedData = function(e) {
                var r = document.createElement("table");
                return e.forEach(function(t) {
                    var e, o = document.createElement("tr"), i = document.createElement("td"), n = document.createElement("td"), s = document.createElement("strong");
                    i.appendChild(s), this.table.modules.localize.bind("columns|" + t.field, function(e) {
                        s.innerText = e || t.title;
                    }), t.value instanceof Node ? ((e = document.createElement("div")).appendChild(t.value), 
                    n.appendChild(e)) : n.innerHTML = t.value, o.appendChild(i), 
                    o.appendChild(n), r.appendChild(o);
                }, this), Object.keys(e).length ? r : "";
            }, N.prototype.registerModule("responsiveLayout", L), T.prototype.clearSelectionData = function(e) {
                this.selecting = !1, this.lastClickedRow = !1, this.selectPrev = [], 
                this.selectedRows = [], e || this._rowSelectionChanged();
            }, T.prototype.initializeRow = function(n) {
                function t() {
                    setTimeout(function() {
                        s.selecting = !1;
                    }, 50), document.body.removeEventListener("mouseup", t);
                }
                var s = this, e = n.getElement();
                n.modules.select = {
                    selected: !1
                }, s.table.options.selectableCheck.call(this.table, n.getComponent()) ? (e.classList.add("tabulator-selectable"), 
                e.classList.remove("tabulator-unselectable"), s.table.options.selectable && "highlight" != s.table.options.selectable && ("click" === s.table.options.selectableRangeMode ? e.addEventListener("click", function(e) {
                    var t, o, i;
                    e.shiftKey ? (s.table._clearSelection(), s.lastClickedRow = s.lastClickedRow || n, 
                    t = (o = s.table.rowManager.getDisplayRowIndex(s.lastClickedRow)) <= (i = s.table.rowManager.getDisplayRowIndex(n)) ? o : i, 
                    o = i <= o ? o : i, i = s.table.rowManager.getDisplayRows().slice(0).splice(t, o - t + 1), 
                    e.ctrlKey || e.metaKey ? (i.forEach(function(e) {
                        e !== s.lastClickedRow && (!0 === s.table.options.selectable || s.isRowSelected(n) || s.selectedRows.length < s.table.options.selectable) && s.toggleRow(e);
                    }), s.lastClickedRow = n) : (s.deselectRows(void 0, !0), !0 !== s.table.options.selectable && i.length > s.table.options.selectable && (i = i.slice(0, s.table.options.selectable)), 
                    s.selectRows(i)), s.table._clearSelection()) : (e.ctrlKey || e.metaKey ? s.toggleRow(n) : (s.deselectRows(void 0, !0), 
                    s.selectRows(n)), s.lastClickedRow = n);
                }) : (e.addEventListener("click", function(e) {
                    s.table.modExists("edit") && s.table.modules.edit.getCurrentCell() || s.table._clearSelection(), 
                    s.selecting || s.toggleRow(n);
                }), e.addEventListener("mousedown", function(e) {
                    if (e.shiftKey) return s.table._clearSelection(), s.selecting = !0, 
                    s.selectPrev = [], document.body.addEventListener("mouseup", t), 
                    document.body.addEventListener("keyup", t), s.toggleRow(n), 
                    !1;
                }), e.addEventListener("mouseenter", function(e) {
                    s.selecting && (s.table._clearSelection(), s.toggleRow(n), s.selectPrev[1] == n) && s.toggleRow(s.selectPrev[0]);
                }), e.addEventListener("mouseout", function(e) {
                    s.selecting && (s.table._clearSelection(), s.selectPrev.unshift(n));
                })))) : (e.classList.add("tabulator-unselectable"), e.classList.remove("tabulator-selectable"));
            }, T.prototype.toggleRow = function(e) {
                this.table.options.selectableCheck.call(this.table, e.getComponent()) && (e.modules.select && e.modules.select.selected ? this._deselectRow(e) : this._selectRow(e));
            }, T.prototype.selectRows = function(e) {
                var t, o = this;
                switch (void 0 === e ? "undefined" : Q(e)) {
                  case "undefined":
                    this.table.rowManager.rows.forEach(function(e) {
                        o._selectRow(e, !0, !0);
                    }), this._rowSelectionChanged();
                    break;

                  case "string":
                    (t = this.table.rowManager.findRow(e)) ? this._selectRow(t, !0, !0) : this.table.rowManager.getRows(e).forEach(function(e) {
                        o._selectRow(e, !0, !0);
                    }), this._rowSelectionChanged();
                    break;

                  default:
                    Array.isArray(e) ? (e.forEach(function(e) {
                        o._selectRow(e, !0, !0);
                    }), this._rowSelectionChanged()) : this._selectRow(e, !1, !0);
                }
            }, T.prototype._selectRow = function(e, t, o) {
                if (!isNaN(this.table.options.selectable) && !0 !== this.table.options.selectable && !o && this.selectedRows.length >= this.table.options.selectable) {
                    if (!this.table.options.selectableRollingSelection) return !1;
                    this._deselectRow(this.selectedRows[0]);
                }
                o = this.table.rowManager.findRow(e);
                o ? -1 == this.selectedRows.indexOf(o) && (o.getElement().classList.add("tabulator-selected"), 
                o.modules.select || (o.modules.select = {}), o.modules.select.selected = !0, 
                o.modules.select.checkboxEl && (o.modules.select.checkboxEl.checked = !0), 
                this.selectedRows.push(o), this.table.options.dataTreeSelectPropagate && this.childRowSelection(o, !0), 
                t || this.table.options.rowSelected.call(this.table, o.getComponent()), 
                this._rowSelectionChanged(t)) : t || console.warn("Selection Error - No such row found, ignoring selection:" + e);
            }, T.prototype.isRowSelected = function(e) {
                return -1 !== this.selectedRows.indexOf(e);
            }, T.prototype.deselectRows = function(e, t) {
                var o = this;
                if (void 0 === e) {
                    for (var i = o.selectedRows.length, n = 0; n < i; n++) o._deselectRow(o.selectedRows[0], !0);
                    o._rowSelectionChanged(t);
                } else Array.isArray(e) ? (e.forEach(function(e) {
                    o._deselectRow(e, !0);
                }), o._rowSelectionChanged(t)) : o._deselectRow(e, t);
            }, T.prototype._deselectRow = function(e, t) {
                var o, i = this.table.rowManager.findRow(e);
                i ? -1 < (o = this.selectedRows.findIndex(function(e) {
                    return e == i;
                })) && (i.getElement().classList.remove("tabulator-selected"), i.modules.select || (i.modules.select = {}), 
                i.modules.select.selected = !1, i.modules.select.checkboxEl && (i.modules.select.checkboxEl.checked = !1), 
                this.selectedRows.splice(o, 1), this.table.options.dataTreeSelectPropagate && this.childRowSelection(i, !1), 
                t || this.table.options.rowDeselected.call(this.table, i.getComponent()), 
                this._rowSelectionChanged(t)) : t || console.warn("Deselection Error - No such row found, ignoring selection:" + e);
            }, T.prototype.getSelectedData = function() {
                var t = [];
                return this.selectedRows.forEach(function(e) {
                    t.push(e.getData());
                }), t;
            }, T.prototype.getSelectedRows = function() {
                var t = [];
                return this.selectedRows.forEach(function(e) {
                    t.push(e.getComponent());
                }), t;
            }, T.prototype._rowSelectionChanged = function(e) {
                this.headerCheckboxElement && (0 === this.selectedRows.length ? (this.headerCheckboxElement.checked = !1, 
                this.headerCheckboxElement.indeterminate = !1) : this.table.rowManager.rows.length === this.selectedRows.length ? (this.headerCheckboxElement.checked = !0, 
                this.headerCheckboxElement.indeterminate = !1) : (this.headerCheckboxElement.indeterminate = !0, 
                this.headerCheckboxElement.checked = !1)), e || this.table.options.rowSelectionChanged.call(this.table, this.getSelectedData(), this.getSelectedRows());
            }, T.prototype.registerRowSelectCheckbox = function(e, t) {
                e._row.modules.select || (e._row.modules.select = {}), e._row.modules.select.checkboxEl = t;
            }, T.prototype.registerHeaderSelectCheckbox = function(e) {
                this.headerCheckboxElement = e;
            }, T.prototype.childRowSelection = function(e, t) {
                e = this.table.modules.dataTree.getChildren(e, !0);
                if (t) for (var o, i = e, n = Array.isArray(i), s = 0, i = n ? i : i[Symbol.iterator](); ;) {
                    if (n) {
                        if (s >= i.length) break;
                        o = i[s++];
                    } else {
                        if ((s = i.next()).done) break;
                        o = s.value;
                    }
                    var r = o;
                    this._selectRow(r, !0);
                } else for (var a, l = e, c = Array.isArray(l), u = 0, l = c ? l : l[Symbol.iterator](); ;) {
                    if (c) {
                        if (u >= l.length) break;
                        a = l[u++];
                    } else {
                        if ((u = l.next()).done) break;
                        a = u.value;
                    }
                    var d = a;
                    this._deselectRow(d, !0);
                }
            }, N.prototype.registerModule("selectRow", T), D.prototype.initializeColumn = function(i, e) {
                var t, o, n = this, s = !1;
                switch (Q(i.definition.sorter)) {
                  case "string":
                    n.sorters[i.definition.sorter] ? s = n.sorters[i.definition.sorter] : console.warn("Sort Error - No such sorter found: ", i.definition.sorter);
                    break;

                  case "function":
                    s = i.definition.sorter;
                }
                i.modules.sort = {
                    sorter: s,
                    dir: "none",
                    params: i.definition.sorterParams || {},
                    startingDir: i.definition.headerSortStartingDir || "asc",
                    tristate: (void 0 !== i.definition.headerSortTristate ? i.definition : this.table.options).headerSortTristate
                }, (void 0 === i.definition.headerSort ? !1 !== this.table.options.headerSort : !1 !== i.definition.headerSort) && ((t = i.getElement()).classList.add("tabulator-sortable"), 
                (o = document.createElement("div")).classList.add("tabulator-col-sorter"), 
                "object" == Q(this.table.options.headerSortElement) ? o.appendChild(this.table.options.headerSortElement) : o.innerHTML = this.table.options.headerSortElement, 
                e.appendChild(o), i.modules.sort.element = o, t.addEventListener("click", function(e) {
                    var t = "", o = [];
                    if (i.modules.sort) {
                        if (i.modules.sort.tristate) t = "none" == i.modules.sort.dir ? i.modules.sort.startingDir : i.modules.sort.dir == i.modules.sort.startingDir ? "asc" == i.modules.sort.dir ? "desc" : "asc" : "none"; else switch (i.modules.sort.dir) {
                          case "asc":
                            t = "desc";
                            break;

                          case "desc":
                            t = "asc";
                            break;

                          default:
                            t = i.modules.sort.startingDir;
                        }
                        n.table.options.columnHeaderSortMulti && (e.shiftKey || e.ctrlKey) ? (-1 < (e = (o = n.getSort()).findIndex(function(e) {
                            return e.field === i.getField();
                        })) ? (o[e].dir = t, e != o.length - 1 && (e = o.splice(e, 1)[0], 
                        "none" != t) && o.push(e)) : "none" != t && o.push({
                            column: i,
                            dir: t
                        }), n.setSort(o)) : "none" == t ? n.clear() : n.setSort(i, t), 
                        n.table.rowManager.sorterRefresh(!n.sortList.length);
                    }
                }));
            }, D.prototype.hasChanged = function() {
                var e = this.changed;
                return this.changed = !1, e;
            }, D.prototype.getSort = function() {
                var t = [];
                return this.sortList.forEach(function(e) {
                    e.column && t.push({
                        column: e.column.getComponent(),
                        field: e.column.getField(),
                        dir: e.dir
                    });
                }), t;
            }, D.prototype.setSort = function(e, t) {
                var o = this, i = [];
                (e = Array.isArray(e) ? e : [ {
                    column: e,
                    dir: t
                } ]).forEach(function(e) {
                    var t = o.table.columnManager.findColumn(e.column);
                    t ? (e.column = t, i.push(e), o.changed = !0) : console.warn("Sort Warning - Sort field does not exist and is being ignored: ", e.column);
                }), o.sortList = i, this.table.options.persistence && this.table.modExists("persistence", !0) && this.table.modules.persistence.config.sort && this.table.modules.persistence.save("sort");
            }, D.prototype.clear = function() {
                this.setSort([]);
            }, D.prototype.findSorter = function(e) {
                var t, o = this.table.rowManager.activeRows[0], i = "string";
                if (o && (o = o.getData(), e.getField())) switch (void 0 === (t = e.getFieldValue(o)) ? "undefined" : Q(t)) {
                  case "undefined":
                    i = "string";
                    break;

                  case "boolean":
                    i = "boolean";
                    break;

                  default:
                    isNaN(t) || "" === t ? t.match(/((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+$/i) && (i = "alphanum") : i = "number";
                }
                return this.sorters[i];
            }, D.prototype.sort = function(e) {
                var i = this, t = this.table.options.sortOrderReverse ? i.sortList.slice().reverse() : i.sortList, n = [], o = [];
                i.table.options.dataSorting && i.table.options.dataSorting.call(i.table, i.getSort()), 
                i.clearColumnHeaders(), i.table.options.ajaxSorting ? t.forEach(function(e, t) {
                    i.setColumnHeader(e.column, e.dir);
                }) : (t.forEach(function(e, t) {
                    var o = e.column.modules.sort;
                    e.column && o && (o.sorter || (o.sorter = i.findSorter(e.column)), 
                    e.params = "function" == typeof o.params ? o.params(e.column.getComponent(), e.dir) : o.params, 
                    n.push(e)), i.setColumnHeader(e.column, e.dir);
                }), n.length && i._sortItems(e, n)), i.table.options.dataSorted && (e.forEach(function(e) {
                    o.push(e.getComponent());
                }), i.table.options.dataSorted.call(i.table, i.getSort(), o));
            }, D.prototype.clearColumnHeaders = function() {
                this.table.columnManager.getRealColumns().forEach(function(e) {
                    e.modules.sort && (e.modules.sort.dir = "none", e.getElement().setAttribute("aria-sort", "none"));
                });
            }, D.prototype.setColumnHeader = function(e, t) {
                e.modules.sort.dir = t, e.getElement().setAttribute("aria-sort", t);
            }, D.prototype._sortItems = function(e, s) {
                var r = this, a = s.length - 1;
                e.sort(function(e, t) {
                    for (var o = a; 0 <= o; o--) {
                        var i, n = s[o];
                        if (0 !== (i = r._sortRow(e, t, n.column, n.dir, n.params))) break;
                    }
                    return i;
                });
            }, D.prototype._sortRow = function(e, t, o, i, n) {
                var s = "asc" == i ? e : t, r = "asc" == i ? t : e;
                return e = void 0 !== (e = o.getFieldValue(s.getData())) ? e : "", 
                t = void 0 !== (t = o.getFieldValue(r.getData())) ? t : "", s = s.getComponent(), 
                r = r.getComponent(), o.modules.sort.sorter.call(this, e, t, s, r, o.getComponent(), i, n);
            }, D.prototype.sorters = {
                number: function(e, t, o, i, n, s, r) {
                    var a = r.alignEmptyValues, l = r.decimalSeparator, r = r.thousandSeparator, c = 0;
                    if (e = String(e), t = String(t), r && (e = e.split(r).join(""), 
                    t = t.split(r).join("")), l && (e = e.split(l).join("."), t = t.split(l).join(".")), 
                    e = parseFloat(e), t = parseFloat(t), isNaN(e)) c = isNaN(t) ? 0 : -1; else {
                        if (!isNaN(t)) return e - t;
                        c = 1;
                    }
                    return ("top" === a && "desc" === s || "bottom" === a && "asc" === s) && (c *= -1), 
                    c;
                },
                string: function(e, t, o, i, n, s, r) {
                    var a, l = r.alignEmptyValues, c = 0;
                    if (e) {
                        if (t) {
                            switch (Q(r.locale)) {
                              case "boolean":
                                r.locale && (a = this.table.modules.localize.getLocale());
                                break;

                              case "string":
                                a = r.locale;
                            }
                            return String(e).toLowerCase().localeCompare(String(t).toLowerCase(), a);
                        }
                        c = 1;
                    } else c = t ? -1 : 0;
                    return ("top" === l && "desc" === s || "bottom" === l && "asc" === s) && (c *= -1), 
                    c;
                },
                date: function(e, t, o, i, n, s, r) {
                    return r.format || (r.format = "DD/MM/YYYY"), this.sorters.datetime.call(this, e, t, o, i, n, s, r);
                },
                time: function(e, t, o, i, n, s, r) {
                    return r.format || (r.format = "HH:mm"), this.sorters.datetime.call(this, e, t, o, i, n, s, r);
                },
                datetime: function(e, t, o, i, n, s, r) {
                    var a = r.format || "DD/MM/YYYY HH:mm:ss", r = r.alignEmptyValues, l = 0;
                    if ("undefined" != typeof moment) {
                        if (e = moment(e, a), t = moment(t, a), e.isValid()) {
                            if (t.isValid()) return e - t;
                            l = 1;
                        } else l = t.isValid() ? -1 : 0;
                        return ("top" === r && "desc" === s || "bottom" === r && "asc" === s) && (l *= -1), 
                        l;
                    }
                    console.error("Sort Error - 'datetime' sorter is dependant on moment.js");
                },
                boolean: function(e, t, o, i, n, s, r) {
                    return (!0 === e || "true" === e || "True" === e || 1 === e ? 1 : 0) - (!0 === t || "true" === t || "True" === t || 1 === t ? 1 : 0);
                },
                array: function(e, t, o, i, n, s, r) {
                    var a = r.type || "length", r = r.alignEmptyValues, l = 0;
                    function c(e) {
                        switch (a) {
                          case "length":
                            return e.length;

                          case "sum":
                            return e.reduce(function(e, t) {
                                return e + t;
                            });

                          case "max":
                            return Math.max.apply(null, e);

                          case "min":
                            return Math.min.apply(null, e);

                          case "avg":
                            return e.reduce(function(e, t) {
                                return e + t;
                            }) / e.length;
                        }
                    }
                    if (Array.isArray(e)) {
                        if (Array.isArray(t)) return (e ? c(e) : 0) - (t ? c(t) : 0);
                        r = 1;
                    } else r = Array.isArray(t) ? -1 : 0;
                    return ("top" === r && "desc" === s || "bottom" === r && "asc" === s) && (l *= -1), 
                    l;
                },
                exists: function(e, t, o, i, n, s, r) {
                    return (void 0 === e ? 0 : 1) - (void 0 === t ? 0 : 1);
                },
                alphanum: function(e, t, o, i, n, s, r) {
                    var a, l, c, u, d, h = 0, p = /(\d+)|(\D+)/g, m = /\d/, r = r.alignEmptyValues, f = 0;
                    if (e || 0 === e) {
                        if (t || 0 === t) {
                            if (isFinite(e) && isFinite(t)) return e - t;
                            if ((a = String(e).toLowerCase()) === (l = String(t).toLowerCase())) return 0;
                            if (!m.test(a) || !m.test(l)) return l < a ? 1 : -1;
                            for (a = a.match(p), l = l.match(p), d = (a.length > l.length ? l : a).length; h < d; ) if ((c = a[h]) !== (u = l[h++])) return isFinite(c) && isFinite(u) ? (c = "0" === c.charAt(0) ? "." + c : c) - (u = "0" === u.charAt(0) ? "." + u : u) : u < c ? 1 : -1;
                            return a.length > l.length;
                        }
                        f = 1;
                    } else f = t || 0 === t ? -1 : 0;
                    return ("top" === r && "desc" === s || "bottom" === r && "asc" === s) && (f *= -1), 
                    f;
                }
            }, N.prototype.registerModule("sort", D);
            return J.prototype.initializeColumn = function(e) {
                var t, o = this, i = [];
                e.definition.validator && (Array.isArray(e.definition.validator) ? e.definition.validator.forEach(function(e) {
                    (t = o._extractValidator(e)) && i.push(t);
                }) : (t = this._extractValidator(e.definition.validator)) && i.push(t), 
                e.modules.validate = !!i.length && i);
            }, J.prototype._extractValidator = function(e) {
                var t, o, i;
                switch (void 0 === e ? "undefined" : Q(e)) {
                  case "string":
                    return -1 < (i = e.indexOf(":")) ? (t = e.substring(0, i), o = e.substring(i + 1)) : t = e, 
                    this._buildValidator(t, o);

                  case "function":
                    return this._buildValidator(e);

                  case "object":
                    return this._buildValidator(e.type, e.parameters);
                }
            }, J.prototype._buildValidator = function(e, t) {
                var o = "function" == typeof e ? e : this.validators[e];
                return o ? {
                    type: "function" == typeof e ? "function" : e,
                    func: o,
                    params: t
                } : (console.warn("Validator Setup Error - No matching validator found:", e), 
                !1);
            }, J.prototype.validate = function(e, t, o) {
                var i = this, n = [], s = this.invalidCells.indexOf(t);
                return e && e.forEach(function(e) {
                    e.func.call(i, t.getComponent(), o, e.params) || n.push({
                        type: e.type,
                        parameters: e.params
                    });
                }), n = !n.length || n, t.modules.validate || (t.modules.validate = {}), 
                !0 === n ? (t.modules.validate.invalid = !1, t.getElement().classList.remove("tabulator-validation-fail"), 
                -1 < s && this.invalidCells.splice(s, 1)) : (t.modules.validate.invalid = !0, 
                "manual" !== this.table.options.validationMode && t.getElement().classList.add("tabulator-validation-fail"), 
                -1 == s && this.invalidCells.push(t)), n;
            }, J.prototype.getInvalidCells = function() {
                var t = [];
                return this.invalidCells.forEach(function(e) {
                    t.push(e.getComponent());
                }), t;
            }, J.prototype.clearValidation = function(e) {
                e.modules.validate && e.modules.validate.invalid && (e.getElement().classList.remove("tabulator-validation-fail"), 
                e.modules.validate.invalid = !1, -1 < (e = this.invalidCells.indexOf(e))) && this.invalidCells.splice(e, 1);
            }, J.prototype.validators = {
                integer: function(e, t, o) {
                    return "" === t || null == t || "number" == typeof (t = Number(t)) && isFinite(t) && Math.floor(t) === t;
                },
                float: function(e, t, o) {
                    return "" === t || null == t || "number" == typeof (t = Number(t)) && isFinite(t) && t % 1 != 0;
                },
                numeric: function(e, t, o) {
                    return "" === t || null == t || !isNaN(t);
                },
                string: function(e, t, o) {
                    return "" === t || null == t || isNaN(t);
                },
                max: function(e, t, o) {
                    return "" === t || null == t || parseFloat(t) <= o;
                },
                min: function(e, t, o) {
                    return "" === t || null == t || parseFloat(t) >= o;
                },
                starts: function(e, t, o) {
                    return "" === t || null == t || String(t).toLowerCase().startsWith(String(o).toLowerCase());
                },
                ends: function(e, t, o) {
                    return "" === t || null == t || String(t).toLowerCase().endsWith(String(o).toLowerCase());
                },
                minLength: function(e, t, o) {
                    return "" === t || null == t || String(t).length >= o;
                },
                maxLength: function(e, t, o) {
                    return "" === t || null == t || String(t).length <= o;
                },
                in: function(e, t, o) {
                    return "" === t || null == t || ("string" == typeof o && (o = o.split("|")), 
                    "" === t) || -1 < o.indexOf(t);
                },
                regex: function(e, t, o) {
                    return "" === t || null == t || new RegExp(o).test(t);
                },
                unique: function(e, t, o) {
                    var i, n, s;
                    return "" === t || null == t || (i = !0, n = e.getData(), s = e.getColumn()._getSelf(), 
                    this.table.rowManager.rows.forEach(function(e) {
                        e = e.getData();
                        e !== n && t == s.getFieldValue(e) && (i = !1);
                    }), i);
                },
                required: function(e, t, o) {
                    return "" !== t && null != t;
                }
            }, N.prototype.registerModule("validate", J), N;
        }, "object" === (void 0 === n ? "undefined" : Q(n)) && void 0 !== o ? o.exports = r() : "function" == typeof define && define.amd ? define(r) : s.Tabulator = r();
    }, {} ]
}, {}, [ 3 ]);